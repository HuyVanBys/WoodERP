using BOSCommon.Constants;
using Localization;
using System;
using System.Data;
using System.Linq;
using System.Windows.Forms;

namespace BOSERP.Modules.ProjectType
{
    #region ProjectTypeModule
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ProjectTypeModule
    //Created Date:Monday, March 01, 2010
    //-----------------------------------------------------------

    public class ProjectTypeModule : BaseModuleERP
    {
        #region Declare Constant
        #endregion

        #region Variables
        #endregion

        public ProjectTypeModule()
        {
            Name = "ProjectType";
            CurrentModuleEntity = new ProjectTypeEntities();
            CurrentModuleEntity.Module = this;
            InitializeModule();
        }

        #region Phase type
        public void AddPhaseTypeToGridview()
        {
            ProjectTypeEntities entity = (ProjectTypeEntities)CurrentModuleEntity;
            PMPhaseTypesInfo objPhaseTypesInfo = (PMPhaseTypesInfo)entity.ModuleObjects[TableName.PMPhaseTypesTableName];
            //Check valid input
            if (String.IsNullOrEmpty(objPhaseTypesInfo.PMPhaseTypeNo))
            {
                MessageBox.Show(PMPhaseTypeLocalizedResources.PhaseTypeNoRequiredMessage, CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            if (String.IsNullOrEmpty(objPhaseTypesInfo.PMPhaseTypeName))
            {
                MessageBox.Show(PMPhaseTypeLocalizedResources.PhaseTypeNameRequiredMessage, CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            bool isExistingPhaseType = entity.PhaseTypeList.Where(s => s.PMPhaseTypeNo == objPhaseTypesInfo.PMPhaseTypeNo).Count() > 0;
            if (isExistingPhaseType)
            {
                MessageBox.Show(PMPhaseTypeLocalizedResources.PhaseTypeNoExistsMessage, CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            objPhaseTypesInfo.FK_PMProjectTypeID = 0;
            entity.PhaseTypeList.AddObjectToList();
        }

        public void EditPhaseTypeInGridview()
        {
            ProjectTypeEntities entity = (ProjectTypeEntities)CurrentModuleEntity;
            PMPhaseTypesInfo objPhaseTypesInfo = (PMPhaseTypesInfo)entity.ModuleObjects[TableName.PMPhaseTypesTableName];

            //Check valid edit
            if (String.IsNullOrEmpty(objPhaseTypesInfo.PMPhaseTypeNo))
            {
                MessageBox.Show(PMPhaseTypeLocalizedResources.PhaseTypeNoRequiredMessage, CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (String.IsNullOrEmpty(objPhaseTypesInfo.PMPhaseTypeName))
            {
                MessageBox.Show(PMPhaseTypeLocalizedResources.PhaseTypeNameRequiredMessage, CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            ((ProjectTypeEntities)CurrentModuleEntity).PhaseTypeList.ChangeObjectFromList();
        }

        public void DeletePhaseTypeFromGridview()
        {
            ((ProjectTypeEntities)CurrentModuleEntity).PhaseTypeList.RemoveSelectedRowObjectFromList();
        }
        #endregion
    }
    #endregion
}