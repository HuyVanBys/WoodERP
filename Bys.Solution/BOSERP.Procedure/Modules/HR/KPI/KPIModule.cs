using BOSCommon.Constants;
using DevExpress.XtraEditors;
using Localization;
using System.Collections.Generic;
using System.Windows.Forms;

namespace BOSERP.Modules.KPI
{
    #region KPI
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:KPI
    //Created Date:June 29, 2018
    //-----------------------------------------------------------

    public class KPIModule : BaseModuleERP
    {
        public List<ADDataViewPermissionsInfo> CurrentModuleDataViewPermissionList;
        public List<BRBranchsInfo> BranchList;
        public const string DerpartmentCheckedComboBoxControlName = "fld_ccbeHRDerpartment";
        public CheckedComboBoxEdit DerpartmentCheckedComboBoxControl = null;

        public KPIModule()
        {
            Name = ModuleName.KPI;
            CurrentModuleEntity = new KPIEntities();
            CurrentModuleEntity.Module = this;
            InitializeModule();
            DerpartmentCheckedComboBoxControl = (CheckedComboBoxEdit)Controls[DerpartmentCheckedComboBoxControlName];
            DerpartmentCheckedComboBoxControl.Properties.DataSource = GetDerpartmentDatasource();
            DerpartmentCheckedComboBoxControl.Properties.DisplayMember = "HRDepartmentName";
            DerpartmentCheckedComboBoxControl.Properties.ValueMember = "HRDepartmentID";
        }

        public override void ActionNew()
        {
            base.ActionNew();

            HRKPIsInfo objKPIsInfo = (HRKPIsInfo)CurrentModuleEntity.MainObject;
            objKPIsInfo.HRKPIDepartment = string.Empty;
            DerpartmentCheckedComboBoxControl.SetEditValue(objKPIsInfo.HRKPIDepartment);
        }

        public override int ActionSave()
        {
            KPIEntities entity = (KPIEntities)CurrentModuleEntity;
            HRKPIsInfo objKPIsInfo = (HRKPIsInfo)CurrentModuleEntity.MainObject;

            if (string.IsNullOrEmpty(objKPIsInfo.HRKPIName))
            {
                MessageBox.Show("Trường Tên KPI không để trống!", CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                return 0;
            }

            if (!string.IsNullOrEmpty(objKPIsInfo.HRKPIStore))
            {
                HRKPIsController objKPIsController = new HRKPIsController();
                bool check = objKPIsController.IsStoreExist(objKPIsInfo.HRKPIStore);
                if (!check)
                {
                    MessageBox.Show("Vui lòng tạo Store Procedure " + objKPIsInfo.HRKPIStore + " trong Database trước khi lưu chứng từ!", CommonLocalizedResources.MessageBoxDefaultCaption, MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return 0;
                }
            }

            return base.ActionSave();
        }

        public override void Invalidate(int iObjectID)
        {
            base.Invalidate(iObjectID);
            KPIEntities entity = (KPIEntities)CurrentModuleEntity;
            HRKPIsInfo objKPIsInfo = (HRKPIsInfo)CurrentModuleEntity.MainObject;
            DerpartmentCheckedComboBoxControl.SetEditValue(objKPIsInfo.HRKPIDepartment);
        }

        public void ChangeMoreDerpartment(string departmentID)
        {
            HRKPIsInfo objKPIsInfo = (HRKPIsInfo)CurrentModuleEntity.MainObject;
            KPIEntities entity = (KPIEntities)CurrentModuleEntity;
            objKPIsInfo.HRKPIDepartment = departmentID;
            entity.UpdateMainObjectBindingSource();
        }

        public List<HRDepartmentsInfo> GetDerpartmentDatasource()
        {
            List<HRDepartmentsInfo> departmentsInfoList = new List<HRDepartmentsInfo>();
            HRDepartmentsController objDepartmentsController = new HRDepartmentsController();
            departmentsInfoList = (List<HRDepartmentsInfo>)objDepartmentsController.GetListFromDataSet(objDepartmentsController.GetAllObjects());

            return departmentsInfoList;
        }
    }
    #endregion
}