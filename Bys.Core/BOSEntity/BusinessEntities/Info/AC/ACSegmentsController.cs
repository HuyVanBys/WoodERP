using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACSegments
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACSegmentsController
    //Created Date:Monday, June 24, 2013
    //-----------------------------------------------------------

    public class ACSegmentsController : BaseBusinessController
    {
        public ACSegmentsController()
        {
            dal = new DALBaseProvider("ACSegments", typeof(ACSegmentsInfo));
        }

        /// <summary>
        /// Get All Segments
        /// </summary>
        /// <returns></returns>
        public List<ACSegmentsInfo> GetAllSegmnets()
        {
            DataSet ds = dal.GetAllObject();

            List<ACSegmentsInfo> segments = new List<ACSegmentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACSegmentsInfo objSegmentsInfo = (ACSegmentsInfo)dal.GetObjectFromDataRow(row);
                    segments.Add(objSegmentsInfo);
                }
            }

            return segments;
        }


        /// <summary>
        /// Get All Segments
        /// </summary>
        /// <returns></returns>
        public List<ACSegmentsInfo> GetSegmentsAndTotalAmountBySomeCriteria(DateTime? fromDate, DateTime? toDate, int? currencyID)
        {
            DataSet ds = dal.GetDataSet("ACSegments_GetSegmentsAndTotalAmountBySomeCriteria", currencyID, fromDate, toDate);

            List<ACSegmentsInfo> segments = new List<ACSegmentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACSegmentsInfo objSegmentsInfo = (ACSegmentsInfo)dal.GetObjectFromDataRow(row);
                    segments.Add(objSegmentsInfo);
                }
            }

            return segments;
        }
    }
    #endregion
}