using BOSLib;
using System;
namespace BOSERP
{
    #region MMBatchProductPlanInstruments
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMBatchProductPlanInstrumentsInfo
    //Created Date:Thursday, November 05, 2015
    //-----------------------------------------------------------

    public class MMBatchProductPlanInstrumentsInfo : BusinessObject
    {
        public MMBatchProductPlanInstrumentsInfo()
        {
        }
        #region Variables
        protected int _mMBatchProductPlanInstrumentID;
        protected String _aACreatedUser = String.Empty;
        protected DateTime _aACreatedDate = DateTime.MaxValue;
        protected String _aAUpdatedUser = String.Empty;
        protected DateTime _aAUpdatedDate = DateTime.MaxValue;
        protected String _aAStatus = DefaultAAStatus;
        protected int _fK_MMBatchProductPlanID;
        protected int _fK_ICProductID;
        protected int _fK_ICMeasureUnitID;
        protected String _mMBatchProductPlanInstrumentNo = String.Empty;
        protected double _mMBatchProductPlanInstrumentQuantity;
        protected double _mMBatchProductPlanInstrumentAllocationTotalQuantity;
        protected double _mMBatchProductPlanInstrumentBuyTotalQuantity;
        protected String _mMBatchProductPlanInstrumentICProductName = String.Empty;
        protected String _mMBatchProductPlanInstrumentDesc = String.Empty;
        protected DateTime _mMBatchProductPlanInstrumentNeededTime = DateTime.MaxValue;
        protected String _mMBatchProductPlanInstrumentRemark = String.Empty;
        protected String _mMBatchProductPlanInstrumentPriority = String.Empty;
        protected double _mMBatchProductPlanInstrumentInventoryStock;
        protected double _mMBatchProductPlanInstrumentBoughtQuantity;
        protected String _mMBatchProductPlanInstrumentProposalStatus = DefaultStatus;
        protected double _mMBatchProductPlanPurchaseOrderQty;
        protected double _mMBatchProductPlanReceiptQty;
        #endregion

        #region Public properties
        public int MMBatchProductPlanInstrumentID
        {
            get { return _mMBatchProductPlanInstrumentID; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentID)
                {
                    _mMBatchProductPlanInstrumentID = value;
                    NotifyChanged("MMBatchProductPlanInstrumentID");
                }
            }
        }
        public String AACreatedUser
        {
            get { return _aACreatedUser; }
            set
            {
                if (value != this._aACreatedUser)
                {
                    _aACreatedUser = value;
                    NotifyChanged("AACreatedUser");
                }
            }
        }
        public DateTime AACreatedDate
        {
            get { return _aACreatedDate; }
            set
            {
                if (value != this._aACreatedDate)
                {
                    _aACreatedDate = value;
                    NotifyChanged("AACreatedDate");
                }
            }
        }
        public String AAUpdatedUser
        {
            get { return _aAUpdatedUser; }
            set
            {
                if (value != this._aAUpdatedUser)
                {
                    _aAUpdatedUser = value;
                    NotifyChanged("AAUpdatedUser");
                }
            }
        }
        public DateTime AAUpdatedDate
        {
            get { return _aAUpdatedDate; }
            set
            {
                if (value != this._aAUpdatedDate)
                {
                    _aAUpdatedDate = value;
                    NotifyChanged("AAUpdatedDate");
                }
            }
        }
        public String AAStatus
        {
            get { return _aAStatus; }
            set
            {
                if (value != this._aAStatus)
                {
                    _aAStatus = value;
                    NotifyChanged("AAStatus");
                }
            }
        }
        public int FK_MMBatchProductPlanID
        {
            get { return _fK_MMBatchProductPlanID; }
            set
            {
                if (value != this._fK_MMBatchProductPlanID)
                {
                    _fK_MMBatchProductPlanID = value;
                    NotifyChanged("FK_MMBatchProductPlanID");
                }
            }
        }
        public int FK_ICProductID
        {
            get { return _fK_ICProductID; }
            set
            {
                if (value != this._fK_ICProductID)
                {
                    _fK_ICProductID = value;
                    NotifyChanged("FK_ICProductID");
                }
            }
        }
        public int FK_ICMeasureUnitID
        {
            get { return _fK_ICMeasureUnitID; }
            set
            {
                if (value != this._fK_ICMeasureUnitID)
                {
                    _fK_ICMeasureUnitID = value;
                    NotifyChanged("FK_ICMeasureUnitID");
                }
            }
        }
        public String MMBatchProductPlanInstrumentNo
        {
            get { return _mMBatchProductPlanInstrumentNo; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentNo)
                {
                    _mMBatchProductPlanInstrumentNo = value;
                    NotifyChanged("MMBatchProductPlanInstrumentNo");
                }
            }
        }
        public double MMBatchProductPlanInstrumentQuantity
        {
            get { return _mMBatchProductPlanInstrumentQuantity; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentQuantity)
                {
                    _mMBatchProductPlanInstrumentQuantity = value;
                    NotifyChanged("MMBatchProductPlanInstrumentQuantity");
                }
            }
        }
        public double MMBatchProductPlanInstrumentAllocationTotalQuantity
        {
            get { return _mMBatchProductPlanInstrumentAllocationTotalQuantity; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentAllocationTotalQuantity)
                {
                    _mMBatchProductPlanInstrumentAllocationTotalQuantity = value;
                    NotifyChanged("MMBatchProductPlanInstrumentAllocationTotalQuantity");
                }
            }
        }
        public double MMBatchProductPlanInstrumentBuyTotalQuantity
        {
            get { return _mMBatchProductPlanInstrumentBuyTotalQuantity; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentBuyTotalQuantity)
                {
                    _mMBatchProductPlanInstrumentBuyTotalQuantity = value;
                    NotifyChanged("MMBatchProductPlanInstrumentBuyTotalQuantity");
                }
            }
        }
        public String MMBatchProductPlanInstrumentICProductName
        {
            get { return _mMBatchProductPlanInstrumentICProductName; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentICProductName)
                {
                    _mMBatchProductPlanInstrumentICProductName = value;
                    NotifyChanged("MMBatchProductPlanInstrumentICProductName");
                }
            }
        }
        public String MMBatchProductPlanInstrumentDesc
        {
            get { return _mMBatchProductPlanInstrumentDesc; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentDesc)
                {
                    _mMBatchProductPlanInstrumentDesc = value;
                    NotifyChanged("MMBatchProductPlanInstrumentDesc");
                }
            }
        }
        public DateTime MMBatchProductPlanInstrumentNeededTime
        {
            get { return _mMBatchProductPlanInstrumentNeededTime; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentNeededTime)
                {
                    _mMBatchProductPlanInstrumentNeededTime = value;
                    NotifyChanged("MMBatchProductPlanInstrumentNeededTime");
                }
            }
        }
        public String MMBatchProductPlanInstrumentRemark
        {
            get { return _mMBatchProductPlanInstrumentRemark; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentRemark)
                {
                    _mMBatchProductPlanInstrumentRemark = value;
                    NotifyChanged("MMBatchProductPlanInstrumentRemark");
                }
            }
        }
        public String MMBatchProductPlanInstrumentPriority
        {
            get { return _mMBatchProductPlanInstrumentPriority; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentPriority)
                {
                    _mMBatchProductPlanInstrumentPriority = value;
                    NotifyChanged("MMBatchProductPlanInstrumentPriority");
                }
            }
        }
        public double MMBatchProductPlanInstrumentInventoryStock
        {
            get { return _mMBatchProductPlanInstrumentInventoryStock; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentInventoryStock)
                {
                    _mMBatchProductPlanInstrumentInventoryStock = value;
                    NotifyChanged("MMBatchProductPlanInstrumentInventoryStock");
                }
            }
        }
        public double MMBatchProductPlanInstrumentBoughtQuantity
        {
            get { return _mMBatchProductPlanInstrumentBoughtQuantity; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentBoughtQuantity)
                {
                    _mMBatchProductPlanInstrumentBoughtQuantity = value;
                    NotifyChanged("MMBatchProductPlanInstrumentBoughtQuantity");
                }
            }
        }
        public String MMBatchProductPlanInstrumentProposalStatus
        {
            get { return _mMBatchProductPlanInstrumentProposalStatus; }
            set
            {
                if (value != this._mMBatchProductPlanInstrumentProposalStatus)
                {
                    _mMBatchProductPlanInstrumentProposalStatus = value;
                    NotifyChanged("MMBatchProductPlanInstrumentProposalStatus");
                }
            }
        }
        public double MMBatchProductPlanPurchaseOrderQty
        {
            get { return _mMBatchProductPlanPurchaseOrderQty; }
            set
            {
                if (value != this._mMBatchProductPlanPurchaseOrderQty)
                {
                    _mMBatchProductPlanPurchaseOrderQty = value;
                    NotifyChanged("MMBatchProductPlanPurchaseOrderQty");
                }
            }
        }
        public double MMBatchProductPlanReceiptQty
        {
            get { return _mMBatchProductPlanReceiptQty; }
            set
            {
                if (value != this._mMBatchProductPlanReceiptQty)
                {
                    _mMBatchProductPlanReceiptQty = value;
                    NotifyChanged("MMBatchProductPlanReceiptQty");
                }
            }
        }
        #endregion
    }
    #endregion
}