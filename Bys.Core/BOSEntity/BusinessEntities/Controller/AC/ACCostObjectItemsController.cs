using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACCostObjectItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACCostObjectItemsController
    //Created Date:Thứ Sáu, Tháng Tư 26, 2019
    //-----------------------------------------------------------

    public class ACCostObjectItemsController : BaseBusinessController
    {
        public ACCostObjectItemsController()
        {
            dal = new DALBaseProvider("ACCostObjectItems", typeof(ACCostObjectItemsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACCostObjectItemsInfo> costObjectItems = new List<ACCostObjectItemsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACCostObjectItemsInfo objCostObjectItemsInfo = (ACCostObjectItemsInfo)GetObjectFromDataRow(row);
                    costObjectItems.Add(objCostObjectItemsInfo);
                }
            }
            ds.Dispose();
            return costObjectItems;
        }

        public bool InsertCostObjectItemByModuleNameAndItemID(string moduleName, int itemID, bool isPosted)
        {
            try
            {
                dal.ExecuteStoredProcedure("ACCostObjectItems_InsertCostObjectItemByModuleNameAndItemID", moduleName, itemID, isPosted);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        public List<ACCostObjectItemsInfo> GetListCostObjectItemsByCostObjectID(int costObjectID)
        {
            DataSet ds = dal.GetDataSet("ACCostObjectItems_GetListCostObjectItemsByCostObjectID", costObjectID);
            return (List<ACCostObjectItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ACCostObjectItemsInfo> GetCostObjectItemsForAllocated(int branchID, DateTime endDate)
        {
            DataSet ds = dal.GetDataSet("ACCostObjectItems_GetCostObjectItemsForAllocated", branchID, endDate);
            return (List<ACCostObjectItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ACCostObjectItemsInfo> GetCostObjectItemsForAllocatedUpdate(int branchID, DateTime endDate, int documentID)
        {
            DataSet ds = dal.GetDataSet("ACCostObjectItems_GetCostObjectItemsForAllocatedUpdate", branchID, endDate, documentID);
            return (List<ACCostObjectItemsInfo>)GetListFromDataSet(ds);
        }

        public bool UpdateCostObjectItemIsAllocated(string documentNo, bool isAllocated)
        {
            try
            {
                dal.ExecuteStoredProcedure("ACCostObjectItems_UpdateCostObjectItemIsAllocated", documentNo, isAllocated);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
    }
    #endregion
}