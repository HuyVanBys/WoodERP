using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACDepreciationAssetTrans
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACDepreciationAssetTransController
    //Created Date:Tuesday, February 19, 2019
    //-----------------------------------------------------------

    public class ACDepreciationAssetTransController : BaseBusinessController
    {
        public ACDepreciationAssetTransController()
        {
            dal = new DALBaseProvider("ACDepreciationAssetTrans", typeof(ACDepreciationAssetTransInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACDepreciationAssetTransInfo> depreciationAssetTrans = new List<ACDepreciationAssetTransInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACDepreciationAssetTransInfo objDepreciationAssetTransInfo = (ACDepreciationAssetTransInfo)GetObjectFromDataRow(row);
                    depreciationAssetTrans.Add(objDepreciationAssetTransInfo);
                }
            }
            ds.Dispose();
            return depreciationAssetTrans;
        }

        public List<ACDepreciationAssetTransInfo> GetDepreciationAssetTransByMonthAndBranchIDs(DateTime dateTime, string branchs)
        {
            DataSet ds = dal.GetDataSet("ACDepreciationAssetTrans_GetDepreciationAssetTransByMonthAndBranchIDs", dateTime, branchs);
            return (List<ACDepreciationAssetTransInfo>)GetListFromDataSet(ds);
        }

        public List<ACDepreciationAssetTransInfo> GetDepreciationAssetTransByDocumentID(int documentID)
        {
            DataSet ds = dal.GetDataSet("ACDepreciationAssetTrans_GetDepreciationAssetTransByDocumentID", documentID);
            return (List<ACDepreciationAssetTransInfo>)GetListFromDataSet(ds);
        }

        public List<ACDepreciationAssetTransInfo> GetDepreciationAssetTransByAssetID(int assetID)
        {
            DataSet ds = dal.GetDataSet("ACDepreciationAssetTrans_GetDepreciationAssetTransByAssetID", assetID);
            return (List<ACDepreciationAssetTransInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}