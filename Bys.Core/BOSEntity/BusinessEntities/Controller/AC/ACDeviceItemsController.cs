using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACDeviceItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACDeviceItemsController
    //Created Date:31 October 2018
    //-----------------------------------------------------------

    public class ACDeviceItemsController : BaseBusinessController
    {
        public ACDeviceItemsController()
        {
            dal = new DALBaseProvider("ACDeviceItems", typeof(ACDeviceItemsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACDeviceItemsInfo> accountDetails = new List<ACDeviceItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACDeviceItemsInfo accountBalance = (ACDeviceItemsInfo)GetObjectFromDataRow(row);
                    accountDetails.Add(accountBalance);
                }
            }
            ds.Dispose();
            return accountDetails;
        }
        public List<ACDeviceItemsInfo> GetListByMaintainGroupAndPlanDate(int maintainGroupID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetListByMaintainGroupAndPlanDate", maintainGroupID, fromDate, toDate);
            return (List<ACDeviceItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ACDeviceItemsInfo> GetListItemByCustom()
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetListItemByCustom");
            return (List<ACDeviceItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ACDeviceItemsInfo> GetListItemByProductID(int productID)
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetListItemByProductID", productID);
            return (List<ACDeviceItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ACDeviceItemsInfo> GetListByListID(string listDeviceItem)
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetListByListID", listDeviceItem);
            return (List<ACDeviceItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ACDeviceItemsInfo> GetListByDeviceID(int deviceID)
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetListByDeviceID", deviceID);
            return (List<ACDeviceItemsInfo>)GetListFromDataSet(ds);
        }
        public ACDeviceItemsInfo GetItemForAddProposalDetectProblem(int deviceItemID)
        {
            DataSet ds = dal.GetDataSet("ACDeviceItems_GetItemForAddProposalDetectProblem", deviceItemID);
            ACDeviceItemsInfo objInvoicesInfo = new ACDeviceItemsInfo();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    objInvoicesInfo = (ACDeviceItemsInfo)GetObjectFromDataRow(row);
                }
            }
            ds.Dispose();
            return objInvoicesInfo;
        }
        public void UpdateACDeviceItemMaintainEndDateByAcceptanceID(int acceptanceID)
        {
            dal.ExecuteStoredProcedure("ACDeviceItems_UpdateACDeviceItemMaintainEndDateByAcceptanceID", acceptanceID);
        }

    }
    #endregion
}