using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACEInvoiceGenerals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACEInvoiceGeneralsController
    //Created Date:Saturday, January 19, 2019
    //-----------------------------------------------------------

    public class ACEInvoiceGeneralsController : BaseBusinessController
    {
        public ACEInvoiceGeneralsController()
        {
            dal = new DALBaseProvider("ACEInvoiceGenerals", typeof(ACEInvoiceGeneralsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACEInvoiceGeneralsInfo> eInvoiceDetails = new List<ACEInvoiceGeneralsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACEInvoiceGeneralsInfo objEInvoiceDetailsInfo = (ACEInvoiceGeneralsInfo)GetObjectFromDataRow(row);
                    eInvoiceDetails.Add(objEInvoiceDetailsInfo);
                }
            }
            ds.Dispose();
            return eInvoiceDetails;
        }

        public List<ACEInvoiceGeneralsInfo> GetEInvoiceGeneralsForNewDelete()
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetEInvoiceGeneralsForNewDelete");
            return (List<ACEInvoiceGeneralsInfo>)GetListFromDataSet(ds);
        }

        public ACEInvoiceGeneralsInfo GetEInvoiceGeneralByNo(string invoiceAppRecordId)
        {
            return (ACEInvoiceGeneralsInfo)dal.GetDataObject("ACEInvoiceGenerals_GetEInvoiceGeneralByNo", invoiceAppRecordId);
        }

        public ACEInvoiceGeneralsInfo GetEInvoiceByOriginal(string OriginalInvoiceId)
        {
            return (ACEInvoiceGeneralsInfo)dal.GetDataObject("ACEInvoiceGenerals_GetEInvoiceByOriginal", OriginalInvoiceId);
        }

        public DataSet GetEInvoiceGeneralList(string invoiceAppRecordId, DateTime? fromDate, DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetEInvoiceGeneralList", invoiceAppRecordId, fromDate, toDate);
            return ds;
        }

        public List<ACEInvoiceGeneralsInfo> GetListEInvoiceWaitingForSigning()
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetListEInvoiceWaitingForSigning");
            return (List<ACEInvoiceGeneralsInfo>)GetListFromDataSet(ds);
        }

        public List<ACEInvoiceGeneralsInfo> GetAllEInvoiceNotSigned()
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetAllEInvoiceNotSigned");
            return (List<ACEInvoiceGeneralsInfo>)GetListFromDataSet(ds);
        }

        public List<ACEInvoiceGeneralsInfo> GetAllOriginalEInvoiceSigned()
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetAllOriginalEInvoiceSigned");
            return (List<ACEInvoiceGeneralsInfo>)GetListFromDataSet(ds);
        }

        public List<ACEInvoiceGeneralsInfo> GetEInvoiceGeneralForUpdateStatus(DateTime? fromDate, DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ACEInvoiceGenerals_GetEInvoiceGeneralForUpdateStatus");
            return (List<ACEInvoiceGeneralsInfo>)GetListFromDataSet(ds);
        }

        public ACEInvoiceGeneralsInfo CheckExistsInvoiceGeneralByInvoiceID(int invoiceID)
        {
            return (ACEInvoiceGeneralsInfo)dal.GetDataObject("ACEInvoiceGenerals_CheckExistsInvoiceGeneralByInvoiceID", invoiceID);
        }


        public void UpdateVATInvoiceNoEInvoiceGeneralID(int eInvoiceGeneralID)
        {
            dal.ExecuteStoredProcedure("ACEInvoiceGenerals_UpdateVATInvoiceNoEInvoiceGeneralID", eInvoiceGeneralID);
        }
    }
    #endregion
}