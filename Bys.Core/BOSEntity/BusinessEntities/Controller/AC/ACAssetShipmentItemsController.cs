using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACAssetShipmentItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACAssetShipmentItemsController
    //Created Date:05 May 2012
    //-----------------------------------------------------------

    public class ACAssetShipmentItemsController : BaseBusinessController
    {
        public ACAssetShipmentItemsController()
        {
            dal = new DALBaseProvider("ACAssetShipmentItems", typeof(ACAssetShipmentItemsInfo));
        }

        /// <summary>
        /// Get all items of an asset shipment
        /// </summary>
        /// <param name="documentID">Document id</param>
        /// <returns>List of items</returns>
        public List<ACAssetShipmentItemsInfo> GetItemsByDocumentID(int documentID)
        {
            DataSet ds = dal.GetDataSet("ACAssetShipmentItems_GetItemsByDocumentID", documentID);
            return (List<ACAssetShipmentItemsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACAssetShipmentItemsInfo> items = new List<ACAssetShipmentItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACAssetShipmentItemsInfo item = (ACAssetShipmentItemsInfo)GetObjectFromDataRow(row);
                    items.Add(item);
                }
            }
            ds.Dispose();
            return items;
        }

        /// <summary>
        /// Get the shipment item relating to an asset
        /// </summary>
        /// <param name="assetID">Asset id</param>
        /// <param name="fromDate">Date the result is filtered from</param>
        /// <param name="toDate">Date the result is filtered to</param>
        /// <returns>Item object</returns>
        public ACAssetShipmentItemsInfo GetItemByAssetID(int assetID, DateTime? fromDate, DateTime? toDate)
        {
            return (ACAssetShipmentItemsInfo)dal.GetDataObject("ACAssetShipmentItems_GetItemsByAssetID", assetID, fromDate, toDate);
        }
        public ACAssetShipmentItemsInfo GetItemsByDocumentIDAndAssetID(int documentID, int assetID)
        {
            DataSet ds = dal.GetDataSet("ACAssetShipmentItems_GetItemsByDocumentIDAndAssetID", documentID, assetID);
            if (ds.Tables[0].Rows.Count > 0)
            {
                ACAssetShipmentItemsInfo objAssetShipmentItemsInfo = (ACAssetShipmentItemsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return objAssetShipmentItemsInfo;
            }
            return null;
        }
    }
    #endregion
}