using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACAssetReceiptItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACAssetReceiptItemsController
    //Created Date:03 May 2012
    //-----------------------------------------------------------

    public class ACAssetReceiptItemsController : BaseBusinessController
    {
        public ACAssetReceiptItemsController()
        {
            dal = new DALBaseProvider("ACAssetReceiptItems", typeof(ACAssetReceiptItemsInfo));
        }

        /// <summary>
        /// Get all items of an asset receipt
        /// </summary>
        /// <param name="assetReceiptID">Asset receipt id</param>
        /// <returns>List of items</returns>
        public List<ACAssetReceiptItemsInfo> GetItemsByAssetReceiptID(int assetReceiptID)
        {
            DataSet ds = dal.GetDataSet("ACAssetReceiptItems_GetItemsByAssetReceiptID", assetReceiptID);
            return (List<ACAssetReceiptItemsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACAssetReceiptItemsInfo> items = new List<ACAssetReceiptItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACAssetReceiptItemsInfo objAssetReceiptItemsInfo = (ACAssetReceiptItemsInfo)GetObjectFromDataRow(row);
                    items.Add(objAssetReceiptItemsInfo);
                }
            }
            ds.Dispose();
            return items;
        }

        /// <summary>
        /// Get the receipt item relating to an asset
        /// </summary>
        /// <param name="assetID">Asset id</param>
        /// <param name="fromDate">Date the result is filtered from</param>
        /// <param name="toDate">Date the result is filtered to</param>
        /// <returns>Item object</returns>
        public ACAssetReceiptItemsInfo GetItemByAssetID(int assetID, DateTime? fromDate, DateTime? toDate)
        {
            return (ACAssetReceiptItemsInfo)dal.GetDataObject("ACAssetReceiptItems_GetItemsByAssetID", assetID, fromDate, toDate);
        }

        public List<ACAssetReceiptItemsInfo> GetListItemByAssetID(int assetID, DateTime? fromDate, DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ACAssetReceiptItems_GetItemsByAssetID", assetID, fromDate, toDate);
            return (List<ACAssetReceiptItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ACAssetReceiptItemsInfo> GetItemGroupByAssetReceiptAndAccount(int assetReceiptID)
        {
            DataSet ds = dal.GetDataSet("ACAssetReceiptItems_GetItemGroupByAssetReceiptAndAccount", assetReceiptID);
            return (List<ACAssetReceiptItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ACAssetReceiptItemsInfo> GetAllItemForAssetByAssetReceiptID(int assetReceiptID)
        {
            DataSet ds = dal.GetDataSet("ACAssetReceiptItems_GetAllItemForAssetByAssetReceiptID", assetReceiptID);
            return (List<ACAssetReceiptItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}