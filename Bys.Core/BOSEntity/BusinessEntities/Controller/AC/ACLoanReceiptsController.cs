using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ACLoanReceipts
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ACLoanReceiptsController
    //Created Date:Tuesday, March 15, 2016
    //-----------------------------------------------------------

    public class ACLoanReceiptsController : BaseBusinessController
    {
        public ACLoanReceiptsController()
        {
            dal = new DALBaseProvider("ACLoanReceipts", typeof(ACLoanReceiptsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ACLoanReceiptsInfo> listLoanReceiptsInfo = new List<ACLoanReceiptsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ACLoanReceiptsInfo objLoanReceiptsInfo = (ACLoanReceiptsInfo)GetObjectFromDataRow(row);
                    listLoanReceiptsInfo.Add(objLoanReceiptsInfo);
                }
            }
            ds.Dispose();
            return listLoanReceiptsInfo;
        }
        public List<ACLoanReceiptsInfo> GetLoanReceiptForPaymentOrder()
        {
            DataSet ds = dal.GetDataSet("ACLoanReceipts_GetLoanReceiptForPaymentOrder");
            return (List<ACLoanReceiptsInfo>)GetListFromDataSet(ds);
        }

        public List<ACLoanReceiptsInfo> CheckPaymentVoucherAndACBankTransactionByLoanReceiptID(int loanReceiptID)
        {
            DataSet ds = dal.GetDataSet("ACLoanReceipts_CheckPaymentVoucherAndACBankTransactionByLoanReceiptID", loanReceiptID);
            return (List<ACLoanReceiptsInfo>)GetListFromDataSet(ds);
        }

        public List<ACLoanReceiptsInfo> GetDateByLoanAgreementID(int loanAgreementID)
        {
            DataSet ds = dal.GetDataSet("ACLoanReceipts_GetDateByLoanAgreementID", loanAgreementID);
            return (List<ACLoanReceiptsInfo>)GetListFromDataSet(ds);
        }

        public DataSet GetDataSetLoanReceiptListByListBranch(string loanAgreementNo,
                                           int? loanAgreementID,
                                           int? currencyID,
                                           DateTime? dateFrom,
                                           DateTime? dateTo,
                                           List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetDataSetLoanReceiptListByBranchID(loanAgreementNo, loanAgreementID, currencyID, dateFrom, dateTo, ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetDataSetLoanReceiptListByBranchID(string loanAgreementNo,
                                            int? loanAgreementID,
                                            int? currencyID,
                                            DateTime? dateFrom,
                                            DateTime? dateTo,
                                            int? branchID)
        {
            DataSet ds = dal.GetDataSet("ACLoanReceipts_GetDataSetLoanReceiptListByBranchID", loanAgreementNo, loanAgreementID, currencyID, dateFrom, dateTo, branchID);
            return ds;
        }

        public ACLoanReceiptsInfo GetLoanReceiptByID(int loanReceiptID)
        {
            return (ACLoanReceiptsInfo)dal.GetDataObject("ACLoanReceipts_GetLoanReceiptByID", loanReceiptID);
        }
        public ACLoanReceiptsInfo GetLoanReceiptForSupplierPayment(int loanReceiptID, int supplierPaymentID)
        {
            return (ACLoanReceiptsInfo)dal.GetDataObject("ACLoanReceipts_GetLoanReceiptForSupplierPayment", loanReceiptID, supplierPaymentID);
        }
    }
    #endregion
}