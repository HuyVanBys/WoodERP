using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using BOSLib;


namespace BOSERP
{
	#region MMUpdatePositions
	//-----------------------------------------------------------
	//Generated By: BOS Studio
	//Class:MMUpdatePositionsController
	//Created Date:02/01/2024 12:00:00 AM
	//-----------------------------------------------------------

	public class MMUpdatePositionsController : BaseBusinessController
	{
		public MMUpdatePositionsController()
		{
			dal = new DALBaseProvider("MMUpdatePositions", typeof(MMUpdatePositionsInfo));
		}

		public override System.Collections.IList GetListFromDataSet(DataSet ds)
		{
			List<MMUpdatePositionsInfo> items = new List<MMUpdatePositionsInfo>();
			if (ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					MMUpdatePositionsInfo item = (MMUpdatePositionsInfo)GetObjectFromDataRow(row);
					items.Add(item);
				}
			}
			return items;
		}
		public DataSet GetDataSetOfBranch(string updatePositionNo
										, int fk_ICProductID
										, string updatePositionStatus
										, DateTime? updatePositionDateFrom
										, DateTime? updatePositionDateTo
										, int branchID)
		{
			return dal.GetDataSet("MMUpdatePositions_GetDataSetOfBranch", updatePositionNo
															  , fk_ICProductID
															  , updatePositionStatus
															  , updatePositionDateFrom
															  , updatePositionDateTo
															  , branchID);
		}

		public DataSet GetDataSetOfBranchList(string updatePositionNo
										, int fk_ICProductID
										, string updatePositionStatus
										, DateTime? updatePositionDateFrom
										, DateTime? updatePositionDateTo
										, List<BRBranchsInfo> branchList)
		{
			DataSet rtn = new DataSet();
			foreach (BRBranchsInfo ojbBranchsInfo in branchList)
			{
				DataSet ds = GetDataSetOfBranch(updatePositionNo
												, fk_ICProductID
												, updatePositionStatus
												, updatePositionDateFrom
												, updatePositionDateTo
												, ojbBranchsInfo.BRBranchID);
				rtn.Merge(ds);
			}
			return rtn;
		}
		public MMUpdatePositionsInfo GetUpdatePositionByStockID(int stockID)
        {
			DataSet ds = dal.GetDataSet("MMUpdatePositions_GetUpdatePositionByStockID", stockID);
			if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
			{
				MMUpdatePositionsInfo objUpdatePositionsInfo = (MMUpdatePositionsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
				return objUpdatePositionsInfo;
			}
			return null;

		}
	}
	#endregion
}