using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using BOSLib;


namespace BOSERP
{
	#region MMPaintProcessConfigs
	//-----------------------------------------------------------
	//Generated By: BOS Studio
	//Class:MMPaintProcessConfigsController
	//Created Date:11/08/2023 12:00:00 AM
	//-----------------------------------------------------------

	public class MMPaintProcessConfigsController : BaseBusinessController
	{
		public MMPaintProcessConfigsController()
		{
			dal = new DALBaseProvider("MMPaintProcessConfigs", typeof(MMPaintProcessConfigsInfo));
		}

		public override System.Collections.IList GetListFromDataSet(DataSet ds)
		{
			List<MMPaintProcessConfigsInfo> items = new List<MMPaintProcessConfigsInfo>();
			if (ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					MMPaintProcessConfigsInfo item = (MMPaintProcessConfigsInfo)GetObjectFromDataRow(row);
					items.Add(item);
				}
			}
			return items;
		}
		public DataSet GetDataSetOfBranch(string processNo, int? employeeID, string processStatus, DateTime dateFrom, DateTime dateTo, int branchID)
		{
			return dal.GetDataSet("MMPaintProcessConfigs_GetDataSetOfBranch", processNo, employeeID, processStatus, dateFrom, dateTo, branchID);
		}

		public DataSet GetDataSetOfBranchList(string processNo, int? employeeID, string processStatus, DateTime dateFrom, DateTime dateTo, List<BRBranchsInfo> branchList)
		{
			DataSet rtn = new DataSet();
			foreach (BRBranchsInfo ojbBranchsInfo in branchList)
			{
				DataSet ds = GetDataSetOfBranch(processNo, employeeID, processStatus, dateFrom, dateTo, ojbBranchsInfo.BRBranchID);
				rtn.Merge(ds);
			}
			return rtn;
		}
	}
	#endregion
}