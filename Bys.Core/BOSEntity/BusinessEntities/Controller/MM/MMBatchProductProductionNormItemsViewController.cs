using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMBatchProductProductionNormItemsView
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMBatchProductProductionNormItemsController
    //Created Date:Thursday, November 05, 2015
    //-----------------------------------------------------------

    public class MMBatchProductProductionNormItemsViewController : BaseBusinessController
    {
        public MMBatchProductProductionNormItemsViewController()
        {
            dal = new DALBaseProvider("MMBatchProductProductionNormItemsView", typeof(MMBatchProductProductionNormItemsViewInfo));
        }

        public List<MMBatchProductProductionNormItemsViewInfo> GetListViewFromDataSet(DataSet ds)
        {
            List<MMBatchProductProductionNormItemsViewInfo> BatchProducts = new List<MMBatchProductProductionNormItemsViewInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMBatchProductProductionNormItemsViewInfo objBatchProductsInfo = (MMBatchProductProductionNormItemsViewInfo)GetObjectFromDataRow(row);
                    BatchProducts.Add(objBatchProductsInfo);
                }
            }
            ds.Dispose();
            return BatchProducts;
        }
        public List<MMBatchProductProductionNormItemsViewInfo> GetListItemRemainBySomeCriteria(DateTime fromdate, DateTime todate, int? customerID, int? collectionID, int? branchID, int? TTMTID, string MMOperationID, int? batchProductID, int? userID)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductProductionNormItems_GetListItemRemainBySomeCriteria", fromdate, todate, customerID, collectionID, branchID, TTMTID, MMOperationID, batchProductID, userID);
            return GetListViewFromDataSet(ds);
        }
        public List<MMBatchProductProductionNormItemsViewInfo> GetListBomChangeBySomeCriteria(int fromNormID, int toBatchItemID, string type)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductProductionNormItems_GetListBomChangeBySomeCriteria", fromNormID, toBatchItemID, type);
            return GetListViewFromDataSet(ds);
        }

        public List<MMBatchProductProductionNormItemsViewInfo> GetListBomChangeByBatchQtyAndSomeCriteria(int fromNormID, int toBatchItemID, decimal qty)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductProductionNormItems_GetListBomChangeByBatchQtyAndSomeCriteria", fromNormID, toBatchItemID, qty);
            return GetListViewFromDataSet(ds);
        }

    }
    #endregion
}