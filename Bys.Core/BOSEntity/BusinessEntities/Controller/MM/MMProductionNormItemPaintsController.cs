using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProductionNormItemPaints
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProductionNormItemPaintsController
    //Created Date:Wednesday, May 23, 2018
    //-----------------------------------------------------------

    public class MMProductionNormItemPaintsController : BaseBusinessController
    {
        public MMProductionNormItemPaintsController()
        {
            dal = new DALBaseProvider("MMProductionNormItemPaints", typeof(MMProductionNormItemPaintsInfo));
        }
        public List<MMProductionNormItemPaintsInfo> GetProductionNormItemPaintsByProductionNormItemID(int ProductionNormItemID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemPaints_SelectByFK_MMProductionNormItemID", ProductionNormItemID);
            List<MMProductionNormItemPaintsInfo> productionNormItemPaints = new List<MMProductionNormItemPaintsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemPaintsInfo objProductionNormItemPaintsInfo = (MMProductionNormItemPaintsInfo)GetObjectFromDataRow(row);
                    productionNormItemPaints.Add(objProductionNormItemPaintsInfo);
                }
            }
            return productionNormItemPaints;
        }

        public List<MMProductionNormItemPaintsInfo> GetProductionNormItemPaintsByProductionNormID(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemPaints_GetProductionNormItemPaintsByProductionNormID", productionNormID);
            List<MMProductionNormItemPaintsInfo> productionNormItemPaints = new List<MMProductionNormItemPaintsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemPaintsInfo objProductionNormItemPaintsInfo = (MMProductionNormItemPaintsInfo)GetObjectFromDataRow(row);
                    productionNormItemPaints.Add(objProductionNormItemPaintsInfo);
                }
            }
            return productionNormItemPaints;
        }

        public decimal GetSumProductionNormItemPaintByProductAttributeColorID(int productionNormID, int productAttributeColorID)
        {
            return (decimal)dal.GetSingleValue("MMProductionNormItemPaints_GetSumProductionNormItemPaintByProductAttributeColorID", productionNormID, productAttributeColorID);
        }

        public void InsertPaintDetailFromProductionNormItem(int productionNormID, int productionNormItemID, int productionNormItemReferenceID, string createdUser)
        {
            dal.ExecuteStoredProcedure("MMProductionNormItemPaints_InsertPaintDetailFromProductionNormItem", productionNormID, productionNormItemID, productionNormItemReferenceID, createdUser);
        }

        public void DeletePaintDetailNotFromProductionNormItemPaintReference(int productionNormID, int productionNormItemID, string productionNormItemPaintReference, string updatedUser)
        {
            dal.ExecuteStoredProcedure("MMProductionNormItemPaints_DeletePaintDetailNotFromProductionNormItemPaintReference", productionNormID, productionNormItemID, productionNormItemPaintReference, updatedUser);
        }

        public List<MMProductionNormItemPaintsInfo> GetProductionNormItemPaintsByProductionNormItemRef(string productionNormItemRef)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemPaints_GetProductionNormItemPaintsByProductionNormItemRef", productionNormItemRef);
            List<MMProductionNormItemPaintsInfo> productionNormItemPaints = new List<MMProductionNormItemPaintsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemPaintsInfo objProductionNormItemPaintsInfo = (MMProductionNormItemPaintsInfo)GetObjectFromDataRow(row);
                    productionNormItemPaints.Add(objProductionNormItemPaintsInfo);
                }
            }
            return productionNormItemPaints;
        }

        public List<MMProductionNormItemPaintsInfo> GetProductionNormItemMeterialByProductionNormItemRef(string productionNormItemRef)
        {
            DataSet results = dal.GetDataSet("MMProductionNormItemPaints_GetProductionNormItemPaintsByProductionNormItemRef", productionNormItemRef);
            return (List<MMProductionNormItemPaintsInfo>)GetListFromDataSet(results);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMProductionNormItemPaintsInfo> productionNormItemPaintList = new List<MMProductionNormItemPaintsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemPaintsInfo objProductionNormItemPaintsInfo = (MMProductionNormItemPaintsInfo)GetObjectFromDataRow(row);
                    productionNormItemPaintList.Add(objProductionNormItemPaintsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemPaintList;
        }
    }
    #endregion
}