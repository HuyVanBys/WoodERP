using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProductionNormItemOperations
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProductionNormItemOperationsController
    //Created Date:Monday, November 09, 2015
    //-----------------------------------------------------------

    public class MMProductionNormItemOperationsController : BaseBusinessController
    {
        public MMProductionNormItemOperationsController()
        {
            dal = new DALBaseProvider("MMProductionNormItemOperations", typeof(MMProductionNormItemOperationsInfo));
        }

        public List<MMProductionNormItemOperationsInfo> GetProductionNormItemOperationsByProductionNormID(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemOperations_GetProductionNormItemOperationsByProductionNormID", productionNormID);
            List<MMProductionNormItemOperationsInfo> productionNormsList = new List<MMProductionNormItemOperationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemOperationsInfo obj = (MMProductionNormItemOperationsInfo)GetObjectFromDataRow(row);
                    productionNormsList.Add(obj);
                }
            }
            ds.Dispose();
            return productionNormsList;
        }
        public List<MMProductionNormItemOperationsInfo> GetProductionNormItemOperationsByProductionNormIDAndOperationID(int productionNormID, int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemOperations_GetProductionNormItemOperationsByProductionNormIDAndOperationID", productionNormID, OperationID);
            List<MMProductionNormItemOperationsInfo> productionNormsList = new List<MMProductionNormItemOperationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemOperationsInfo obj = (MMProductionNormItemOperationsInfo)GetObjectFromDataRow(row);
                    productionNormsList.Add(obj);
                }
            }
            ds.Dispose();
            return productionNormsList;
        }
        public List<MMProductionNormItemOperationsInfo> GetOperationsByProductionNormItem(int productionNormItemID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemOperations_GetOperationsByProductionNormItem", productionNormItemID);
            List<MMProductionNormItemOperationsInfo> productionNormsList = new List<MMProductionNormItemOperationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemOperationsInfo obj = (MMProductionNormItemOperationsInfo)GetObjectFromDataRow(row);
                    productionNormsList.Add(obj);
                }
            }
            ds.Dispose();
            return productionNormsList;
        }
        public List<MMProductionNormItemOperationsInfo> GetOperationsByProductionNorm(int productionNormID, int productionNormItemID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemOperations_GetOperationsByProductionNorm", productionNormID, productionNormItemID);
            List<MMProductionNormItemOperationsInfo> productionNormsList = new List<MMProductionNormItemOperationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemOperationsInfo obj = (MMProductionNormItemOperationsInfo)GetObjectFromDataRow(row);
                    productionNormsList.Add(obj);
                }
            }
            ds.Dispose();
            return productionNormsList;
        }

        public List<MMProductionNormItemOperationsInfo> GetOperationsByNonProductionNormItem(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemOperations_GetOperationsByNonProductionNormItem", productionNormID);
            List<MMProductionNormItemOperationsInfo> productionNormsList = new List<MMProductionNormItemOperationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemOperationsInfo obj = (MMProductionNormItemOperationsInfo)GetObjectFromDataRow(row);
                    productionNormsList.Add(obj);
                }
            }
            ds.Dispose();
            return productionNormsList;
        }
    }
    #endregion
}