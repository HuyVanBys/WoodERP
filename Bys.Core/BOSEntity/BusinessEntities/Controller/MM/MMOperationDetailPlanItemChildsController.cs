using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMOperationDetailPlanItemChilds
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMOperationDetailPlanItemChildsController
    //Created Date:Monday, August 15, 2016
    //-----------------------------------------------------------

    public class MMOperationDetailPlanItemChildsController : BaseBusinessController
    {
        public MMOperationDetailPlanItemChildsController()
        {
            dal = new DALBaseProvider("MMOperationDetailPlanItemChilds", typeof(MMOperationDetailPlanItemChildsInfo));
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildByBatchProductItem(int batchProductItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildByBatchProductItem", batchProductItemID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildByOperationAndCapacityDate(int OperationID, DateTime capacityDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildByOperationAndCapacityDate", OperationID, capacityDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildCapacityRemain(int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildCapacityRemain", OperationID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMOperationDetailPlanItemChildsInfo> list = new List<MMOperationDetailPlanItemChildsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
                ds.Dispose();
            }

            return list;
        }


        public List<MMOperationDetailPlanItemChildsInfo> GetSynchronousOperationDetailPlanData(int batchProductID, int detailPlanID, DateTime fromDate, DateTime toDate, int productID, int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductProductionNormItems_GetSynchronousOperationDetailPlanData", batchProductID, detailPlanID, fromDate, toDate, productID, OperationID);
            List<MMOperationDetailPlanItemChildsInfo> list = new List<MMOperationDetailPlanItemChildsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    if (obj.MMOperationDetailPlanItemChildPlanProductQty - obj.MMOperationDetailPlanItemChildCancelQty > 0)
                        obj.SynchronousPercent = obj.ReceiptedQty / (obj.MMOperationDetailPlanItemChildPlanProductQty - obj.MMOperationDetailPlanItemChildCancelQty) * 100;
                    else
                        if (obj.MMOperationDetailPlanItemChildPlanProductQty > 0)
                        obj.SynchronousPercent = obj.ReceiptedQty / obj.MMOperationDetailPlanItemChildPlanProductQty * 100;
                    obj.WoodQty = obj.ReceiptedQty * ((obj.MMOperationDetailPlanItemChildProductHeight *
                                        obj.MMOperationDetailPlanItemChildProductWidth *
                                        obj.MMOperationDetailPlanItemChildProductLength) / (decimal)Math.Pow(10, 9));
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetSynchronousOperationDetailPlanWeekData(int productID, int OperationID, int WorkShopID, int LineID, string week)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductProductionNormItems_GetSynchronousOperationDetailPlanWeekData", productID, OperationID, WorkShopID, LineID, week);
            List<MMOperationDetailPlanItemChildsInfo> list = new List<MMOperationDetailPlanItemChildsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    if (obj.MMOperationDetailPlanItemChildPlanProductQty - obj.MMOperationDetailPlanItemChildCancelQty > 0)
                        obj.SynchronousPercent = obj.ReceiptedQty / (obj.MMOperationDetailPlanItemChildPlanProductQty - obj.MMOperationDetailPlanItemChildCancelQty) * 100;
                    else
                        obj.SynchronousPercent = obj.ReceiptedQty / obj.MMOperationDetailPlanItemChildPlanProductQty * 100;
                    obj.WoodQty = obj.ReceiptedQty * ((obj.MMOperationDetailPlanItemChildProductHeight *
                                       obj.MMOperationDetailPlanItemChildProductWidth *
                                       obj.MMOperationDetailPlanItemChildProductLength) / (decimal)Math.Pow(10, 9));
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemForReport147(DateTime fromDate, DateTime toDate, int operationDetailPlanID, int productID, int operationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemForReport147", fromDate, toDate, operationDetailPlanID, productID, operationID);
            List<MMOperationDetailPlanItemChildsInfo> list = new List<MMOperationDetailPlanItemChildsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    obj.SLThieu = obj.MMOperationDetailPlanItemChildPlanProductQty - obj.SLNhap;
                    obj.KLNhap = obj.SLNhap * ((obj.MMOperationDetailPlanItemChildProductHeight *
                                       obj.MMOperationDetailPlanItemChildProductWidth *
                                       obj.MMOperationDetailPlanItemChildProductLength) / (decimal)Math.Pow(10, 9));
                    list.Add(obj);
                }
                ds.Dispose();
            }

            return list;
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemOperationDetailPlanItemChildReceipt(string BatchProductItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemOperationDetailPlanItemChildReceipt", BatchProductItemID);
            List<MMOperationDetailPlanItemChildsInfo> list = new List<MMOperationDetailPlanItemChildsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    obj.SLThieu = obj.MMOperationDetailPlanItemChildPlanProductQty - obj.SLNhap;
                    obj.KLNhap = obj.SLNhap * ((obj.MMOperationDetailPlanItemChildProductHeight *
                                       obj.MMOperationDetailPlanItemChildProductWidth *
                                       obj.MMOperationDetailPlanItemChildProductLength) / (decimal)Math.Pow(10, 9));
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildForCompensationByOperationDetailPlanID(int OperationDetailPlanID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildForCompensationByOperationDetailPlanID", OperationDetailPlanID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemByOperationDetailPlan(int? OperationDetailPlanID, int? OperationID, int? batchProductID, int? batchProductItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemByOperationDetailPlan", OperationDetailPlanID, OperationID, batchProductID, batchProductItemID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildForCompensation()
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildForCompensation");
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetAllOperationDetailPlanItemChildForCompensation(int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetAllOperationDetailPlanItemChildForCompensation", OperationID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemCapacityReportData(int OperationDetailPlanID, int operationID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemCapacityReportData", OperationDetailPlanID, operationID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemBatchProductCapacityReportData(int? customerID, int? saleorderID, int? ProductID, int? batchProductID, int? OperationDetailPlanID, int? operationID, int? workShopD, int? lineID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemBatchProductCapacityReportData", customerID, saleorderID, ProductID, batchProductID, OperationDetailPlanID, operationID, workShopD, lineID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemCapacityReportDataHaveCapacity(int OperationDetailPlanID, int operationID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemCapacityReportDataHaveCapacity", OperationDetailPlanID, operationID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }


        public List<MMOperationDetailPlanItemChildsInfo> GetItemBatchProductCapacityReportDataHaveCapacity(int? customerID, int? saleorderID, int? ProductID, int? batchProductID
            , int? OperationDetailPlanID, int? operationID, int? workShopD, int lineID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemBatchProductCapacityReportDataHaveCapacity", customerID, saleorderID, ProductID, batchProductID
                , OperationDetailPlanID, operationID, workShopD, lineID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetReceiptAnhCapacityData(int? customerID, int? saleorderID, int? ProductID, int? batchProductID
            , int? OperationDetailPlanID, int? operationID, int? workShopD, int lineID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetReceiptAnhCapacityData", customerID, saleorderID, ProductID, batchProductID
                , OperationDetailPlanID, operationID, workShopD, lineID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetReceiptAnhCapacityDataByBarcode(int? customerID, int? saleorderID, int? ProductID, int? batchProductID,
            int? OperationDetailPlanID, string BarcodeID, int? operationID, int? workShopD, int? lineID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetReceiptAnhCapacityDataByBarcode", customerID, saleorderID, ProductID, batchProductID,
                OperationDetailPlanID, BarcodeID == string.Empty ? null : BarcodeID, operationID, workShopD, lineID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetBatchProductReceiptAnhCapacityDataByBarcode(int? customerID, int? saleorderID, int? ProductID, int? batchProductID,
           int? OperationDetailPlanID, string BarcodeID, int? operationID, int? workShopD, int? lineID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetBatchProductReceiptAnhCapacityDataByBarcode", customerID, saleorderID, ProductID, batchProductID,
                OperationDetailPlanID, BarcodeID == string.Empty ? null : BarcodeID, operationID, workShopD, lineID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildByPlanIDAndBatchProductProductionNormItem(int OperationDetailPlanID, int BatchProductProductionNormItemID, int batchProductItem)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildByPlanIDAndBatchProductProductionNormItem", OperationDetailPlanID, BatchProductProductionNormItemID, batchProductItem);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public void DeleteOperationDetailPlanItemChildByOperationDetailPlanItemID(int OperationDetailPlanItemID)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_DeleteOperationDetailPlanItemChildByOperationDetailPlanItemID", OperationDetailPlanItemID);
        }
        public void InsertOperationDetailPlanItemChilds(int OperationDetailPlanItemID, decimal planProductQty, int batchProductItem, int FK_MMBatchProductID,
            int FK_ICProductForBatchID, string ProductForBatchNo, string Serial, string SaleOrdeNo, string CreatedUser, int OperationID, int FK_ARSaleOrderID, decimal PIProductQty, int FK_MMOperationDetailPlanID, decimal BatchProductItemProductQty)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_InsertOperationDetailPlanItemChilds", OperationDetailPlanItemID, planProductQty, batchProductItem, FK_MMBatchProductID,
            FK_ICProductForBatchID, ProductForBatchNo, Serial, SaleOrdeNo, CreatedUser, OperationID, FK_ARSaleOrderID, PIProductQty, FK_MMOperationDetailPlanID, BatchProductItemProductQty);
        }
        public void GeneralBarcode(int OperationDetailPlanID)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_GeneralBarcode", OperationDetailPlanID);
        }

        public void UpdateOperationDetailPlanItemChilds(int OperationDetailPlanItemID, decimal planProductQty, string CreatedUser)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_UpdateOperationDetailPlanItemChilds", OperationDetailPlanItemID, planProductQty, CreatedUser);
        }
        public void UpdateOperationDetailPlanItemChildProductNo(int ProductID, string ProductNo, string ParentNo)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_UpdateOperationDetailPlanItemChildProductNo", ProductID, ProductNo, ParentNo);
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildOutSourcingRemain()
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildOutSourcingRemain");
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemForCancel()
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemForCancel");
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public MMOperationDetailPlanItemChildsInfo GetItemForCancelByID(int itemChildID, int itemCancelID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemForCancelByID", itemChildID, itemCancelID);
            if (ds.Tables.Count > 0)
            {
                MMOperationDetailPlanItemChildsInfo objOperationDetailPlanItemChildsInfo = (MMOperationDetailPlanItemChildsInfo)dal.GetSingleObject(ds.Tables[0]);
                ds.Dispose();
                return objOperationDetailPlanItemChildsInfo;
            }
            ds.Dispose();
            return null;
        }
        public void UpdateOperationDetailPlanItemChildRefCompensateProductQty(int OperationDetailPlanItemChildID)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_UpdateOperationDetailPlanItemChildRefCompensateProductQty", OperationDetailPlanItemChildID);
        }
        public void UpdateDeleteOperationDetailPlanItemChildRefCompensateProductQty(int OperationDetailPlanItemChildID)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_UpdateDeleteOperationDetailPlanItemChildRefCompensateProductQty", OperationDetailPlanItemChildID);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetAllCompensateOperationDetailPlanItemChild()
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetAllCompensateOperationDetailPlanItemChild");
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public MMOperationDetailPlanItemChildsInfo GetItemCompensateOperationDetailPlanItemChild(int operationPlanID, int BPItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemCompensateOperationDetailPlanItemChild", operationPlanID, BPItemID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return obj;
                }
            }
            ds.Dispose();
            return null;
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetDeleteItemCompensateOperationDetailPlanItemChildByParentID(int ParentID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetDeleteItemCompensateOperationDetailPlanItemChildByParentID", ParentID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetPlanItemChildCompensateListByPlanItemChild(int operationDetailPlanItemChildID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetDeleteItemCompensateOperationDetailPlanItemChildByParentID", operationDetailPlanItemChildID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildByOperationDetailPlanID(int OperationDetailPlanID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildByOperationDetailPlanID", OperationDetailPlanID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetOperationDetailPlanItemChildByParentID(int ParentID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildByParentID", ParentID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetKhoiLuongDMLSXTrongKy(int batchProductID, DateTime fromDate, DateTime toDate, int operationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetKhoiLuongDMLSXTrongKy", batchProductID, fromDate, toDate, operationID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetKhoiTinhLSXDaKHSXCTCacKy(int batchProductID, int operationID, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetKhoiTinhLSXDaKHSXCTCacKy", batchProductID, operationID, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetKhoiTinhLSXTheoMaDaKHSXCTCacKy(int batchProductID, int operationID, int productID, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetKhoiTinhLSXTheoMaDaKHSXCTCacKy", batchProductID, operationID, productID, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetKhoiLuongHDLSXDaKHSXCTCacKy(int batchProductID, int operationID, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetKhoiLuongHDLSXDaKHSXCTCacKy", batchProductID, operationID, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetKhoiLuongHDLSXTheoMaDaKHSXCTCacKy(int batchProductID, int operationID, int productID, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetKhoiLuongHDLSXTheoMaDaKHSXCTCacKy", batchProductID, operationID, productID, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }

        public void InsertOperationDetailPlanItemChilds_6146(int OperationDetailPlanItemID, decimal planProductQty, int batchProductItem, int FK_MMBatchProductID,
         int FK_ICProductForBatchID, string ProductForBatchNo, string Serial, string SaleOrdeNo, string CreatedUser, int OperationID, int FK_ARSaleOrderID, decimal PIProductQty, int FK_MMOperationDetailPlanID, decimal BatchProductItemProductQty)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_InsertOperationDetailPlanItemChilds_6146", OperationDetailPlanItemID, planProductQty, batchProductItem, FK_MMBatchProductID,
            FK_ICProductForBatchID, ProductForBatchNo, Serial, SaleOrdeNo, CreatedUser, OperationID, FK_ARSaleOrderID, PIProductQty, FK_MMOperationDetailPlanID, BatchProductItemProductQty);
        }
        public MMOperationDetailPlanItemChildsInfo GetOperationDetailPlanItemChildBySomeCriteria(int OperationDetailPlanID
                                                                                                    , int BatchProductID
                                                                                                    , int BatchProductItemID
                                                                                                    , int SemiProductID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetOperationDetailPlanItemChildBySomeCriteria", OperationDetailPlanID, BatchProductID, BatchProductItemID, SemiProductID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanItemChildsInfo obj = (MMOperationDetailPlanItemChildsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return obj;
                }
            }
            ds.Dispose();
            return null;
        }

        public List<MMOperationDetailPlanItemChildsInfo> GetPlanDetailRemain(int? batchID
                                                                           , string planNo
                                                                           , DateTime? date
                                                                           , int? MMWorkShopID
                                                                           , int? MMLineID
                                                                           , int? HRDepartmentRoomGroupItemID
                                                                           , int? MMOperationID
                                                                           , int? productForbatchID
                                                                           , int? semiProductID
                                                                           )
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetPlanDetailRemain", batchID
                                       , planNo
                                       , date
                                       , MMWorkShopID
                                       , MMLineID
                                       , HRDepartmentRoomGroupItemID
                                       , MMOperationID
                                       , productForbatchID
                                       , semiProductID
                                       );
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemChildByOperationDetailPlanID(int operationDetailPlanID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemChildByOperationDetailPlanID", operationDetailPlanID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemMaterialChildForBatchProductShedule(int batchProductID, int productForBatchID, int semiProductID, int productID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemMaterialChildForBatchProductShedule", batchProductID, productForBatchID, semiProductID, productID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetListCapacityByDetailPlan(int iObjectID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetListCapacityByDetailPlan", iObjectID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetAllItemChildByPlanID(int iObjectID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetAllItemChildByPlanID", iObjectID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetAvailableSyncData(DataTable Type_StringDatas)
        {
            DataSet ds = SqlDatabaseHelper.GetDataUsingStringType(Type_StringDatas, "Type_StringDatas", "MMOperationDetailPlanItemChilds_GetAvailableSyncData");
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetRceiptAvailableSyncData(int receiptID, bool isCheckNew)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetRceiptAvailableSyncData", receiptID, isCheckNew);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemChildMaterialForBatchProductShedule(int batchProductID, int productForBatchID, int semiProductID, int productID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemChildMaterialForBatchProductShedule", batchProductID, productForBatchID, semiProductID, productID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemChildForBatchProductShedule(int batchProductID, int productForBatchID, int semiProductID, int productID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemChildForBatchProductShedule", batchProductID, productForBatchID, semiProductID, productID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetItemChildSemiProductForBatchProductShedule(int batchProductID, int productForBatchID, int semiProductID, int productID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetItemChildSemiProductForBatchProductShedule", batchProductID, productForBatchID, semiProductID, productID, fromDate, toDate);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanItemChildsInfo> SearchPlanDetaiBySomeCriteria(DateTime? fromDate, DateTime? toDate
            , int? CustomerID, string objectType
            , int? SaleOrderID, int? batchProductID
            , string listOperationID, string productNo
            , string productName, int? branchID, int userID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_SearchPlanDetaiBySomeCriteria", fromDate, toDate, CustomerID, objectType, SaleOrderID, batchProductID, listOperationID, productNo, productName, branchID, userID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
        public void CloseJobTicketByBatch(int FK_MMBatchProductID, string UpdateUser)
        {
            dal.ExecuteStoredProcedure("MMOperationDetailPlanItemChilds_CloseJobTicketByBatch", FK_MMBatchProductID, UpdateUser);
        }
        public List<MMOperationDetailPlanItemChildsInfo> GetCloseErrorListByBatch(int BatchID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanItemChilds_GetCloseErrorListByBatch", BatchID);
            return (List<MMOperationDetailPlanItemChildsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}