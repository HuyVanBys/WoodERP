using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMAllocationProposals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMAllocationProposalsController
    //Created Date:Tuesday, November 24, 2015
    //-----------------------------------------------------------

    public class MMAllocationProposalsController : BaseBusinessController
    {
        public MMAllocationProposalsController()
        {
            dal = new DALBaseProvider("MMAllocationProposals", typeof(MMAllocationProposalsInfo));
        }

        public DataSet GetAllMMAllocationProposalsForLookupControl()
        {

            DataSet ds = dal.GetDataSet("MMAllocationProposals_GetAllMMAllocationProposalsForLookupControl");
            return ds;
        }

        public DataSet GetAllocationProposalsBySomeCriteria(string allocationProposalNo, int employeeID, int batchProductID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMAllocationProposals_GetAllocationProposalsBySomeCriteria", allocationProposalNo, employeeID, batchProductID, fromDate, toDate);
            return ds;
        }
        public DataSet GetAllocationProposalsByMaintainProposal(string allocationProposalNo, int employeeID, int batchProductID, DateTime fromDate, DateTime toDate, string type)
        {
            DataSet ds = dal.GetDataSet("MMAllocationProposals_GetAllocationProposalsByMaintainProposal", allocationProposalNo, employeeID, batchProductID, fromDate, toDate, type);
            return ds;
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMAllocationProposalsInfo> allocationProposals = new List<MMAllocationProposalsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMAllocationProposalsInfo allocationProposal = (MMAllocationProposalsInfo)GetObjectFromDataRow(row);
                    allocationProposals.Add(allocationProposal);
                }
            }
            ds.Dispose();
            return allocationProposals;
        }



    }
    #endregion
}