using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProcessChangeItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProcessChangeItemsController
    //Created Date:Thursday, November 15, 2018
    //-----------------------------------------------------------

    public class MMProcessChangeItemsController : BaseBusinessController
    {
        public MMProcessChangeItemsController()
        {
            dal = new DALBaseProvider("MMProcessChangeItems", typeof(MMProcessChangeItemsInfo));
        }
        public List<MMProcessChangeItemsInfo> GetChangeItemRefeInfoByVoucherAndNormItemID(int? batchProductID, int productionNormItem, string processChangeVoucher, string ProductType)
        {
            DataSet ds = dal.GetDataSet("MMProcessChangeItems_GetChangeItemRefeInfoByVoucherAndNormItemID", batchProductID, productionNormItem, processChangeVoucher, ProductType);
            return (List<MMProcessChangeItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMProcessChangeItemsInfo> GetChangeItemRefeInfoByVoucherAndListNormItemID(int? batchProductID, string productionNormItem, string processChangeVoucher, string ProductType)
        {
            DataSet ds = dal.GetDataSet("MMProcessChangeItems_GetChangeItemRefeInfoByVoucherAndListNormItemID", batchProductID, productionNormItem, processChangeVoucher, ProductType);
            return (List<MMProcessChangeItemsInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMProcessChangeItemsInfo> ProcessChangeItems = new List<MMProcessChangeItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProcessChangeItemsInfo objProcessChangeItemsInfo = (MMProcessChangeItemsInfo)GetObjectFromDataRow(row);
                    ProcessChangeItems.Add(objProcessChangeItemsInfo);
                }
            }
            ds.Dispose();
            return ProcessChangeItems;
        }
    }
    #endregion
}