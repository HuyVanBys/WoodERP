using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMWoodPlans
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMWoodPlansController
    //Created Date:Friday, November 13, 2015
    //-----------------------------------------------------------

    public class MMWoodPlansController : BaseBusinessController
    {
        public MMWoodPlansController()
        {
            dal = new DALBaseProvider("MMWoodPlans", typeof(MMWoodPlansInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMWoodPlansInfo> woodPlanList = new List<MMWoodPlansInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMWoodPlansInfo obj = (MMWoodPlansInfo)GetObjectFromDataRow(row);
                    woodPlanList.Add(obj);
                }
            }
            ds.Dispose();
            return woodPlanList;
        }

        public List<MMWoodPlansInfo> GetWoodPlansByStatus(string status)
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlansByStatus", status);
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }

        public List<MMWoodPlansInfo> GetWoodPlansByPurchasePlan()
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlansByPurchasePlan");
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }

        public List<MMWoodPlansInfo> GetWoodPlanForSheduleByStatus(string status)
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlanForSheduleByStatus", status);
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }

        public List<MMWoodPlansInfo> GetWoodPlansForAllocationPlan()
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlansForAllocationPlan");
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }

        public List<MMWoodPlansInfo> GetWoodPlansForPurchasePlan()
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlansForPurchasePlan");
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }

        public List<MMWoodPlansInfo> GetWoodPlanFromOperationPlansForAllocationPlan()
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlanFromOperationPlansForAllocationPlan");
            return (List<MMWoodPlansInfo>)GetListFromDataSet(ds);
        }
        public int GetWoodPlanIDByBatchProductID(int BathProductID)
        {
            int woodPlanID = 0;
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlanIDByBatchProductID", BathProductID);
            if (ds.Tables[0].Rows.Count > 0)
            {
                MMWoodPlansInfo objWoodPlansInfo = (MMWoodPlansInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                if (objWoodPlansInfo != null)
                {
                    woodPlanID = objWoodPlansInfo.MMWoodPlanID;
                }
            }
            ds.Dispose();
            return woodPlanID;
        }
        public bool GetWoodPlanByBatchProduct(int BatchProductID)
        {
            bool flag = true;
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlanByBatchProduct", BatchProductID);
            if (ds.Tables[0].Rows.Count > 0)
            {
                MMWoodPlansInfo objWoodPlansInfo = (MMWoodPlansInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                if (objWoodPlansInfo != null)
                {
                    flag = false;
                }
                else
                {
                    flag = true;
                }
            }
            ds.Dispose();
            return flag;
        }

        public DataSet GetWoodPlansBySomeCriteria(string woodPlanNo,
            string woodPlanStatus,
            int customerID,
            int batchProductID,
            int saleOrderID,
            int employeeID,
            DateTime fromDate,
            DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMWoodPlans_GetWoodPlansBySomeCriteria",
                                                            woodPlanNo,
                                                            woodPlanStatus,
                                                            customerID,
                                                            batchProductID,
                                                            saleOrderID,
                                                            employeeID,
                                                            fromDate,
                                                            toDate);
            return ds;
        }
    }
    #endregion
}