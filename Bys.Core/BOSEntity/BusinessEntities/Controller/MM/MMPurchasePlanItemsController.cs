using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMPurchasePlanItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMPurchasePlanItemsController
    //Created Date:Saturday, November 14, 2015
    //-----------------------------------------------------------

    public class MMPurchasePlanItemsController : BaseBusinessController
    {
        public MMPurchasePlanItemsController()
        {
            dal = new DALBaseProvider("MMPurchasePlanItems", typeof(MMPurchasePlanItemsInfo));
        }

        public List<MMPurchasePlanItemsInfo> GetPurchasePlanWoodForPurchaseProposal(string purchaseType)
        {

            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemWoodForPurchaseProposal", purchaseType);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMPurchasePlanItemsInfo> list = new List<MMPurchasePlanItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMPurchasePlanItemsInfo obj = (MMPurchasePlanItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemByProposal(int purchsePlanID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemByProposal", purchsePlanID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemByBatchProductIDAndType(int batchproductID, string type)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemByBatchProductIDAndType", batchproductID, type);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemByBatchProductIDAndTypeisHWorPaint(int batchproductID, string type)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemByBatchProductIDAndTypeisHWorPaint", batchproductID, type);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemByBatchProductIDAndTypeisPLDG(int batchproductID, string type)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemByBatchProductIDAndTypeisPLDG", batchproductID, type);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemsNotInAPProposals()
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemsNotInAPProposals");
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemByPurchasePlanID(int purchasePlanID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemByPurchasePlanID", purchasePlanID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemForCheckingRemainPurchasePlanValidQty(int purchasePlanItemID, int canceledPurchasePlanItemID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemForCheckingRemainPurchasePlanValidQty", purchasePlanItemID, canceledPurchasePlanItemID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemQtyByBatchProductIDAndPurchasePlanType(int batchproductID, string PurchasePlanType, int purchasePlanID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemQtyByBatchProductIDAndPurchasePlanType", batchproductID, PurchasePlanType, purchasePlanID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetListCurrentForCheckQty(int purchasePlanID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetListCurrentForCheckQty", purchasePlanID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetMMPurchasePlanItemRealQtyByID(int purchasePlanItemID, int proposalItemID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetMMPurchasePlanItemRealQtyByID", purchasePlanItemID, proposalItemID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetPurchasePlanItemRemainQty(int productID, int BPProductionNormItemID, int purchasePlanItemID, string purchasePlanType)
        {
            return (decimal)dal.GetSingleValue("MMPurchasePlanItems_GetPurchasePlanItemRemainQty", productID, BPProductionNormItemID, purchasePlanItemID, purchasePlanType);
        }

        public List<MMPurchasePlanItemsInfo> GetPurchasePlanItemTotalByPurchasePlanID(int purchasePlanID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetPurchasePlanItemTotalByPurchasePlanID", purchasePlanID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetItemForPurchaseProposal(string planType, int purchasePlanID, int batchProductID, DateTime fromDate, DateTime toDate, int userID, string moduleName, string dataViewPermissionType, int branchID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetItemForPurchaseProposal", planType, purchasePlanID, batchProductID, fromDate, toDate, userID, moduleName, dataViewPermissionType, branchID);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetBPPniRemainQtyForPurchasePlan(string purchasePlanType, string batchProductRef, string purchasePlanItemRef)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetBPPniRemainQtyForPurchasePlan", purchasePlanType, batchProductRef, purchasePlanItemRef);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemsInfo> GetRemainQtyForPurchaseProsal(string purchasePlanItemRef, string purchaseProposalItemRef)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItems_GetRemainQtyForPurchaseProsal", purchasePlanItemRef, purchaseProposalItemRef);
            return (List<MMPurchasePlanItemsInfo>)GetListFromDataSet(ds);
        }

        public MMPurchasePlanItemsInfo GetRemainItemForPurchaseProposal(int purchasePlanItemID, int purchaseProposalItemID)
        {
            return (MMPurchasePlanItemsInfo)dal.GetDataObject("MMPurchasePlanItems_GetRemainItemForPurchaseProposal", purchasePlanItemID, purchaseProposalItemID);
        }
    }
    #endregion
}