using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMLines
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMLinesController
    //Created Date:Monday, October 19, 2015
    //-----------------------------------------------------------

    public class MMLinesController : BaseBusinessController
    {
        public MMLinesController()
        {
            dal = new DALBaseProvider("MMLines", typeof(MMLinesInfo));
        }

        public List<MMLinesInfo> GetAllAliveAndActiveLine()
        {
            DataSet ds = dal.GetDataSet("MMLines_GetAllAliveAndActiveLine");
            return (List<MMLinesInfo>)GetListFromDataSet(ds);
        }
        public List<MMLinesInfo> GetAllAliveAndActiveLineByWorkShopID(int workShopID
                                                                    , int userID
                                                                    , string moduleName
                                                                    , string dataViewPermissionType
                                                                    , int branchID)
        {
            DataSet ds = dal.GetDataSet("MMLines_GetAllAliveAndActiveLineByWorkShopID"
                , workShopID
                , userID
                , moduleName
                , dataViewPermissionType
                , branchID);
            return (List<MMLinesInfo>)GetListFromDataSet(ds);
        }
        public DataSet GetCatcheData(int branchID)
        {
            DataSet ds = dal.GetDataSet("MMLines_GetCatcheData", branchID);
            return ds;
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMLinesInfo> list = new List<MMLinesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMLinesInfo obj = (MMLinesInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }

        public DataSet GetDataSetOfBranch(string lineNo
                                        , string lineName
                                        , string lineContactTitle
                                        , string lineContactFirstName
                                        , string lineContactEmail
                                        , string lineContactRoom
                                        , string lineContactDepartment
                                        , int workShopID
                                        , string lineContactPhone
                                        , int branchID)
        {
            return dal.GetDataSet("MMLines_GetDataSetOfBranch", lineNo
                                                              , lineName
                                                              , lineContactTitle
                                                              , lineContactFirstName
                                                              , lineContactEmail
                                                              , lineContactRoom
                                                              , lineContactDepartment
                                                              , workShopID
                                                              , lineContactPhone
                                                              , branchID);
        }

        public DataSet GetDataSetOfBranchList(string lineNo
                                            , string lineName
                                            , string lineContactTitle
                                            , string lineContactFirstName
                                            , string lineContactEmail
                                            , string lineContactRoom
                                            , string lineContactDepartment
                                            , int workShopID
                                            , string lineContactPhone
                                            , List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetDataSetOfBranch(lineNo
                                              , lineName
                                              , lineContactTitle
                                              , lineContactFirstName
                                              , lineContactEmail
                                              , lineContactRoom
                                              , lineContactDepartment
                                              , workShopID
                                              , lineContactPhone
                                              , ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }
            return rtn;
        }
    }
    #endregion
}