using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProductionCostIngredientCosts
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProductionCostIngredientCostsController
    //Created Date:Tuesday, December 01, 2015
    //-----------------------------------------------------------

    public class MMProductionCostIngredientCostsController : BaseBusinessController
    {
        public MMProductionCostIngredientCostsController()
        {
            dal = new DALBaseProvider("MMProductionCostIngredientCosts", typeof(MMProductionCostIngredientCostsInfo));
        }

        public List<MMProductionCostIngredientCostsInfo> GetProductionCostIngredientCostByDateAndBatchID(DateTime fromDate, DateTime toDate, int batchID)
        {
            List<MMProductionCostIngredientCostsInfo> ingredientCostList = new List<MMProductionCostIngredientCostsInfo>();

            DataSet ds = dal.GetDataSet("MMProductionCostIngredientCosts_GetProductionCostIngredientCostByDateAndBatchID", fromDate, toDate, batchID);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionCostIngredientCostsInfo objIngredientCostsInfo = (MMProductionCostIngredientCostsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }

        public List<MMProductionCostIngredientCostsInfo> GetProductionCostIngredientCostByDateAndBatchIDAndOperationID(DateTime fromDate, DateTime toDate, int batchID, int operationID)
        {
            List<MMProductionCostIngredientCostsInfo> ingredientCostList = new List<MMProductionCostIngredientCostsInfo>();

            DataSet ds = dal.GetDataSet("MMProductionCostIngredientCosts_GetProductionCostIngredientCostByDateAndBatchIDAndOperationID", fromDate, toDate, batchID, operationID);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionCostIngredientCostsInfo objIngredientCostsInfo = (MMProductionCostIngredientCostsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }

        public List<MMProductionCostIngredientCostsInfo> GetProductionCostIngredientCostBySomeConditions(DateTime fromDate, DateTime toDate, int batchID, int operationID)
        {
            List<MMProductionCostIngredientCostsInfo> ingredientCostList = new List<MMProductionCostIngredientCostsInfo>();

            DataSet ds = dal.GetDataSet("MMProductionCostIngredientCosts_GetProductionCostIngredientCostBySomeConditions", fromDate, toDate, batchID, operationID);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionCostIngredientCostsInfo objIngredientCostsInfo = (MMProductionCostIngredientCostsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }


        public List<MMProductionCostIngredientCostsInfo> GetProductionCostIngredientCostBySomeConditionsCDSay(DateTime fromDate, DateTime toDate, int operationID)
        {
            List<MMProductionCostIngredientCostsInfo> ingredientCostList = new List<MMProductionCostIngredientCostsInfo>();

            DataSet ds = dal.GetDataSet("MMProductionCostIngredientCosts_GetProductionCostIngredientCostBySomeConditionsCDSay", fromDate, toDate, operationID);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionCostIngredientCostsInfo objIngredientCostsInfo = (MMProductionCostIngredientCostsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }

        public List<MMProductionCostIngredientCostsInfo> GetDDPhoiByProductionCostID(int productionCostID)
        {
            List<MMProductionCostIngredientCostsInfo> ingredientCostList = new List<MMProductionCostIngredientCostsInfo>();

            DataSet ds = dal.GetDataSet("MMProductionCostIngredientCosts_GetDDPhoiByProductionCostID", productionCostID);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionCostIngredientCostsInfo objIngredientCostsInfo = (MMProductionCostIngredientCostsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }
    }
    #endregion
}