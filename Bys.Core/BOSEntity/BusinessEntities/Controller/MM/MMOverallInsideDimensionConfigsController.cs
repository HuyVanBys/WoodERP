using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMOverallInsideDimensionConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMOverallInsideDimensionConfigsController
    //Created Date:Wednesday, December 09, 2015
    //-----------------------------------------------------------

    public class MMOverallInsideDimensionConfigsController : BaseBusinessController
    {
        public MMOverallInsideDimensionConfigsController()
        {
            dal = new DALBaseProvider("MMOverallInsideDimensionConfigs", typeof(MMOverallInsideDimensionConfigsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMOverallInsideDimensionConfigsInfo> ProductionNormItemConfigs = new List<MMOverallInsideDimensionConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOverallInsideDimensionConfigsInfo objProductionNormItemConfigsInfo = (MMOverallInsideDimensionConfigsInfo)GetObjectFromDataRow(row);
                    ProductionNormItemConfigs.Add(objProductionNormItemConfigsInfo);
                }
            }

            ds.Dispose();
            return ProductionNormItemConfigs;
        }
        public List<MMOverallInsideDimensionConfigsInfo> GetAllAliveConfigs()
        {
            DataSet ds = dal.GetDataSet("MMOverallInsideDimensionConfigs_GetAllAliveConfigs");
            return (List<MMOverallInsideDimensionConfigsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOverallInsideDimensionConfigsInfo> GetConfigByAttributeIDAndType(int attributeID, string type, int productGroupID)
        {
            DataSet ds = dal.GetDataSet("MMOverallInsideDimensionConfigs_GetConfigByAttributeIDAndType", attributeID, type, productGroupID);
            return (List<MMOverallInsideDimensionConfigsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}