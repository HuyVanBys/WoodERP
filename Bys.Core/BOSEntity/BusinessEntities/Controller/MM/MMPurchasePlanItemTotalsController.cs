using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMPurchasePlanItemTotals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMPurchasePlanItemTotalsController
    //Created Date:06 February, 2018
    //-----------------------------------------------------------

    public class MMPurchasePlanItemTotalsController : BaseBusinessController
    {
        public MMPurchasePlanItemTotalsController()
        {
            dal = new DALBaseProvider("MMPurchasePlanItemTotals", typeof(MMPurchasePlanItemTotalsInfo));
        }

        public List<MMPurchasePlanItemTotalsInfo> GetAllPurchasePlanItemTotalByMMBatchProductID(int batchProductID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItemTotals_GetAllPurchasePlanItemTotalByMMBatchProductID", batchProductID);
            List<MMPurchasePlanItemTotalsInfo> purchasePlanItemTotalList = new List<MMPurchasePlanItemTotalsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMPurchasePlanItemTotalsInfo objPurchasePlanItemTotalsInfo = (MMPurchasePlanItemTotalsInfo)GetObjectFromDataRow(row);
                    purchasePlanItemTotalList.Add(objPurchasePlanItemTotalsInfo);
                }
            }
            ds.Dispose();
            return purchasePlanItemTotalList;
        }

        public List<MMPurchasePlanItemTotalsInfo> GetPurchasePlanItemTotalWoodForPurchaseProposal(string purchaseType)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItemTotals_GetPurchasePlanItemTotalWoodForPurchaseProposal", purchaseType);
            return (List<MMPurchasePlanItemTotalsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPurchasePlanItemTotalsInfo> GetPurchasePlanItemTotalByMMBatchProductIDAndMMPurchasePlanIDAndICProductID(int MMBatchProductID, int MMPurchasePlanID, int ICProductID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlanItemTotals_GetPurchasePlanItemTotalByMMBatchProductIDAndMMPurchasePlanIDAndICProductID", MMBatchProductID, MMPurchasePlanID, ICProductID);
            return (List<MMPurchasePlanItemTotalsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMPurchasePlanItemTotalsInfo> list = new List<MMPurchasePlanItemTotalsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMPurchasePlanItemTotalsInfo obj = (MMPurchasePlanItemTotalsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
    }
    #endregion
}