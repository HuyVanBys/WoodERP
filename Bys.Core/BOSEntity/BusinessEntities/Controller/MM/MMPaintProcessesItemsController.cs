using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMPaintProcessesItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMPaintProcessesItemsController
    //Created Date:Tuesday, November 03, 2015
    //-----------------------------------------------------------

    public class MMPaintProcessesItemsController : BaseBusinessController
    {
        public MMPaintProcessesItemsController()
        {
            dal = new DALBaseProvider("MMPaintProcessesItems", typeof(MMPaintProcessesItemsInfo));
        }
        public List<MMPaintProcessesItemsInfo> GetPaintProcessesItemByPaintProcessesID(int paintProcessesID)
        {
            List<MMPaintProcessesItemsInfo> paintProcessesItemList = new List<MMPaintProcessesItemsInfo>();
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetPaintProcessesItemByPaintProcessesID", paintProcessesID);

            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMPaintProcessesItemsInfo> GetItemForProductionNorm(int paintProcessesID)
        {
            List<MMPaintProcessesItemsInfo> paintProcessesItemList = new List<MMPaintProcessesItemsInfo>();
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetItemForProductionNorm", paintProcessesID);

            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMPaintProcessesItemsInfo> PaintProcessesItemsList = new List<MMPaintProcessesItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMPaintProcessesItemsInfo objPaintProcessesItemsInfo = (MMPaintProcessesItemsInfo)GetObjectFromDataRow(row);
                    PaintProcessesItemsList.Add(objPaintProcessesItemsInfo);
                }
            }
            ds.Dispose();
            return PaintProcessesItemsList;
        }
        public DataSet GetParentOjects(int paintProcessesID)
        {
            return dal.GetDataSet("MMPaintProcessesItems_GetParentOjects", paintProcessesID);
        }

        public List<MMPaintProcessesItemsInfo> GetPaintProcessesItemForPrint(int paintProcessesID)
        {
            List<MMPaintProcessesItemsInfo> paintProcessesItemList = new List<MMPaintProcessesItemsInfo>();
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetPaintProcessesItemForPrint", paintProcessesID);

            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPaintProcessesItemsInfo> GetPaintProcessesItemByProductionNormID(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetPaintProcessesItemByProductionNormID", productionNormID);
            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPaintProcessesItemsInfo> GetPaintProcessesItemByProductionNormIDAndColorReference(int productionNormID, string colorReference)
        {
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetPaintProcessesItemByProductionNormIDAndColorReference", productionNormID, colorReference);
            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMPaintProcessesItemsInfo> GetPaintProcessesItemByProductAttributesPaintReference(string attributesPaintReference)
        {
            DataSet ds = dal.GetDataSet("MMPaintProcessesItems_GetPaintProcessesItemByProductAttributesPaintReference", attributesPaintReference);
            return (List<MMPaintProcessesItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}

