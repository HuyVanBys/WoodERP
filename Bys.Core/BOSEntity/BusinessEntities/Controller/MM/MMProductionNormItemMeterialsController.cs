using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProductionNormItemMeterials
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProductionNormItemMeterialsController
    //Created Date:Friday, April 13, 2018
    //-----------------------------------------------------------

    public class MMProductionNormItemMeterialsController : BaseBusinessController
    {
        public MMProductionNormItemMeterialsController()
        {
            dal = new DALBaseProvider("MMProductionNormItemMeterials", typeof(MMProductionNormItemMeterialsInfo));
        }

        public List<MMProductionNormItemMeterialsInfo> GetProductionNormItemMeterialsByProductionNormItemID(int ProductionNormItemID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_SelectByFK_MMProductionNormItemID", ProductionNormItemID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemMeterials;
        }

        public List<MMProductionNormItemMeterialsInfo> GetAllProductionNormItemMeterialsByProductionNormItemID(int ProductionNormItemID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_GetAllProductionNormItemMeterialsByProductionNormItemID", ProductionNormItemID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemMeterials;
        }

        public List<MMProductionNormItemMeterialsInfo> GetProductionNormItemMeterialsByProductionNormID(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_GetProductionNormItemMeterialsByProductionNormID", productionNormID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            return productionNormItemMeterials;
        }
        public List<MMProductionNormItemMeterialsInfo> GetAllMeterialsByProductionNormID(int ProductionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_GetAllProductionNormItemMeterialsByProductionNormID", ProductionNormID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemMeterials;
        }
        public List<MMProductionNormItemMeterialsInfo> GetAllProductionNormItemMeterialsByBatchProductID(int BatchProductID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_GetAllProductionNormItemMeterialsByBatchProductID", BatchProductID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemMeterials;
        }
        public void GenerateByCarcassID(int carcassID)
        {
            dal.ExecuteStoredProcedure("MMProductionNormItemMeterials_GenerateByCarcassID", carcassID);

        }
        public List<MMProductionNormItemMeterialsInfo> GetProductionNormItemMeterialsByProductionNormIDForReport(int productionNormID)
        {
            DataSet ds = dal.GetDataSet("MMProductionNormItemMeterials_GetProductionNormItemMeterialsByProductionNormIDForReport", productionNormID);
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterials = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterials.Add(objProductionNormItemMeterialsInfo);
                }
            }
            return productionNormItemMeterials;
        }

        public void InsertMeterialDetailFromProductionNormItem(int productionNormItemID, int productionNormItemReferenceID, string createdUser)
        {
            dal.ExecuteStoredProcedure("MMProductionNormItemMeterials_InsertMeterialDetailFromProductionNormItem", productionNormItemID, productionNormItemReferenceID, createdUser);
        }

        public void UpdateProductionNormItemMeterialStatusIsAlive(string productionNormItemMeterialReference, string updateUser)
        {
            dal.ExecuteStoredProcedure("MMProductionNormItemMeterials_UpdateProductionNormItemMeterialStatusIsAlive", productionNormItemMeterialReference, updateUser);
        }

        public List<MMProductionNormItemMeterialsInfo> GetProductionNormItemMeterialByProductionNormItemRef(string productionNormItemRef)
        {
            DataSet results = dal.GetDataSet("MMProductionNormItemMeterials_GetProductionNormItemMeterialByProductionNormItemRef", productionNormItemRef);
            return (List<MMProductionNormItemMeterialsInfo>)GetListFromDataSet(results);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMProductionNormItemMeterialsInfo> productionNormItemMeterialList = new List<MMProductionNormItemMeterialsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormItemMeterialsInfo objProductionNormItemMeterialsInfo = (MMProductionNormItemMeterialsInfo)GetObjectFromDataRow(row);
                    productionNormItemMeterialList.Add(objProductionNormItemMeterialsInfo);
                }
            }
            ds.Dispose();
            return productionNormItemMeterialList;
        }
    }
    #endregion
}