using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMLabourProductivityTargetConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMLabourProductivityTargetConfigsController
    //Created Date:Friday, April 14, 2017
    //-----------------------------------------------------------

    public class MMLabourProductivityTargetConfigsController : BaseBusinessController
    {
        public MMLabourProductivityTargetConfigsController()
        {
            dal = new DALBaseProvider("MMLabourProductivityTargetConfigs", typeof(MMLabourProductivityTargetConfigsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMLabourProductivityTargetConfigsInfo> LabourProductivityTargetConfigs = new List<MMLabourProductivityTargetConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMLabourProductivityTargetConfigsInfo objLabourProductivityTargetConfigsInfo = (MMLabourProductivityTargetConfigsInfo)GetObjectFromDataRow(row);
                    LabourProductivityTargetConfigs.Add(objLabourProductivityTargetConfigsInfo);
                }
            }
            ds.Dispose();
            return LabourProductivityTargetConfigs;
        }
        public MMLabourProductivityTargetConfigsInfo GetDataForReportLabourProductivityTargetByDate(int? FK_MMWorkShopID, DateTime searchToDate)
        {

            List<MMLabourProductivityTargetConfigsInfo> LabourProductivityTargetConfigList = new List<MMLabourProductivityTargetConfigsInfo>();
            DataSet ds = dal.GetDataSet("MMLabourProductivityTargetConfigs_GetDataForReportLabourProductivityTargetByDate", FK_MMWorkShopID, searchToDate);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMLabourProductivityTargetConfigsInfo objLabourProductivityTargetConfigsInfo = (MMLabourProductivityTargetConfigsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return objLabourProductivityTargetConfigsInfo;
                }
            }
            ds.Dispose();
            return null;
        }
        public MMLabourProductivityTargetConfigsInfo GetDataForReportLabourProductivityTargetByMonth(int? HRDeparmentID, int month, int year)
        {
            List<MMLabourProductivityTargetConfigsInfo> LabourProductivityTargetConfigList = new List<MMLabourProductivityTargetConfigsInfo>();
            DataSet ds = dal.GetDataSet("MMLabourProductivityTargetConfigs_GetDataForReportLabourProductivityTargetByMonth", HRDeparmentID, month, year);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMLabourProductivityTargetConfigsInfo objLabourProductivityTargetConfigsInfo = (MMLabourProductivityTargetConfigsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return objLabourProductivityTargetConfigsInfo;
                }
            }
            ds.Dispose();
            return null;
        }
        public MMLabourProductivityTargetConfigsInfo GetDataForReportLabourProductivityTargetByYear(int? HRDeparmentID, int year)
        {

            List<MMLabourProductivityTargetConfigsInfo> LabourProductivityTargetConfigList = new List<MMLabourProductivityTargetConfigsInfo>();
            DataSet ds = dal.GetDataSet("MMLabourProductivityTargetConfigs_GetDataForReportLabourProductivityTargetByYear", HRDeparmentID, year);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMLabourProductivityTargetConfigsInfo objLabourProductivityTargetConfigsInfo = (MMLabourProductivityTargetConfigsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return objLabourProductivityTargetConfigsInfo;
                }
            }
            ds.Dispose();
            return null;
        }
    }
    #endregion
}