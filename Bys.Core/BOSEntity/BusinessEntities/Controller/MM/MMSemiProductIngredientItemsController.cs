using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMSemiProductIngredientItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMSemiProductIngredientItemsController
    //Created Date:Saturday, August 13, 2016
    //-----------------------------------------------------------

    public class MMSemiProductIngredientItemsController : BaseBusinessController
    {
        public MMSemiProductIngredientItemsController()
        {
            dal = new DALBaseProvider("MMSemiProductIngredientItems", typeof(MMSemiProductIngredientItemsInfo));
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDPhoiForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDPhoiForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            ds.Dispose();
            return ingredientCostList;
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDSCForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDSCForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            ds.Dispose();
            return ingredientCostList;
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDTCForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDTCForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            ds.Dispose();
            return ingredientCostList;
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDLRForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDLRForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            ds.Dispose();
            return ingredientCostList;
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDSonForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDSonForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            ds.Dispose();
            return ingredientCostList;
        }

        public List<MMSemiProductIngredientItemsInfo> GetDDDGForShipment(int? batchProductID, int? operationID, DateTime month)
        {
            List<MMSemiProductIngredientItemsInfo> ingredientCostList = new List<MMSemiProductIngredientItemsInfo>();

            DataSet ds = dal.GetDataSet("MMSemiProductIngredientItems_GetDDDGForShipment", batchProductID, operationID, month);

            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMSemiProductIngredientItemsInfo objIngredientCostsInfo = (MMSemiProductIngredientItemsInfo)GetObjectFromDataRow(row);
                    ingredientCostList.Add(objIngredientCostsInfo);
                }
            }
            return ingredientCostList;
        }
    }
    #endregion
}