using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMOperationDetailPlanCapacityItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMOperationDetailPlanCapacityItemsController
    //Created Date:Thursday, August 18, 2016
    //-----------------------------------------------------------

    public class MMOperationDetailPlanCapacityItemsController : BaseBusinessController
    {
        public MMOperationDetailPlanCapacityItemsController()
        {
            dal = new DALBaseProvider("MMOperationDetailPlanCapacityItems", typeof(MMOperationDetailPlanCapacityItemsInfo));
        }

        public List<MMOperationDetailPlanCapacityItemsInfo> GetOperationDetailPlanCapacityItemByPlanItemChildIDAndOperation(int OperationDetailPlanItemChildID, int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetOperationDetailPlanCapacityItemByPlanItemChildIDAndOperation", OperationDetailPlanItemChildID, OperationID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMOperationDetailPlanCapacityItemsInfo> list = new List<MMOperationDetailPlanCapacityItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMOperationDetailPlanCapacityItemsInfo obj = (MMOperationDetailPlanCapacityItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetItemByOperationDetailPlanItemChildIDExcludeCurrentItemID(int operationDetailPlanItemChildID, int operationDetailPlanCapacityItemID, int OperationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetItemByOperationDetailPlanItemChildIDExcludeCurrentItemID", operationDetailPlanItemChildID, operationDetailPlanCapacityItemID, OperationID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanCapacityItemsInfo> GetOperationDetailPlanCapacityItemBySomeCriteria(int? FK_MMBatchProductID
                                                                                                            , int? FK_ARSaleOrderID
                                                                                                            , int? FK_MMOperationDetailPlanID
                                                                                                            , int? FK_MMBatchProductItemID
                                                                                                            , int? FK_MMWorkShopID
                                                                                                            , int? FK_MMLineID
                                                                                                            , string BarcodeID
                                                                                                            , int? FK_ICProductID
                                                                                                            , DateTime? FromDate
                                                                                                            , DateTime? ToDate
                                                                                                            , int? FK_MMOperationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetOperationDetailPlanCapacityItemBySomeCriteria",
                                                                                                              FK_MMBatchProductID
                                                                                                            , FK_ARSaleOrderID
                                                                                                            , FK_MMOperationDetailPlanID
                                                                                                            , FK_MMBatchProductItemID
                                                                                                            , FK_MMWorkShopID
                                                                                                            , FK_MMLineID
                                                                                                            , BarcodeID == string.Empty ? null : BarcodeID
                                                                                                            , FK_ICProductID
                                                                                                            , FromDate
                                                                                                            , ToDate
                                                                                                            , FK_MMOperationID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanCapacityItemsInfo> SearchItemBySomeConditions(DateTime fromDate
                                                                                       , DateTime toDate
                                                                                       , int productID
                                                                                       , int batchProductID
                                                                                       , int operationID
                                                                                       , int empGiveID
                                                                                       , int empTakeID
                                                                                       , int empQCID
                                                                                       , int productForBatchID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_SearchItemBySomeConditions", fromDate, toDate, productID, batchProductID, operationID, empGiveID, empTakeID, empQCID, productForBatchID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMOperationDetailPlanCapacityItemsInfo> SearchJobTicketItemBySomeConditions(DateTime? fromDate
                                                                                       , DateTime? toDate
                                                                                       , int? productID
                                                                                       , int? batchProductID
                                                                                       , int? operationID
                                                                                       , int? empGiveID
                                                                                       , int? empTakeID
                                                                                       , int? empQCID
                                                                                       , int? productForBatchID
                                                                                       , int FK_MMOperationDetailPlanItemChildID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_SearchJobTicketItemBySomeConditions", fromDate, toDate, productID, batchProductID, operationID, empGiveID, empTakeID, empQCID, productForBatchID, FK_MMOperationDetailPlanItemChildID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetCanCapacityQty(int batchProductID, int operationID, int productID, int roomID, string capacityID)
        {
            Object obj = dal.GetSingleValue("MMOperationDetailPlanCapacityItems_GetCanCapacityQty", batchProductID, operationID, productID, roomID, capacityID);
            decimal Debt = 0;
            if (obj != null)
                decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }

        public decimal GetRemainCapacityQty(int batchProductID, int operationID, int toOperationID, int toRoomID, int productID, string capacityID)
        {
            Object obj = dal.GetSingleValue("MMOperationDetailPlanCapacityItems_GetRemainCapacityQty", batchProductID, operationID, toOperationID, toRoomID, productID, capacityID);
            decimal Debt = 0;
            if (obj != null)
                decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetItemByBatchProductID(int batchProductID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetItemByBatchProductID", batchProductID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetDetailAvailableSyncData(int normID, int operationID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetDetailAvailableSyncData", normID, operationID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetReceiptDetailAvailableSyncData(int normID, int operationID, int ReceiptItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetReceiptDetailAvailableSyncData", normID, operationID, ReceiptItemID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetHistoryCapacityBySomeCriteria(DateTime? fromdate
                                                                                            , DateTime? todate
                                                                                            , int? batchID
                                                                                            , int? productOfBatchID
                                                                                            , string operationID
                                                                                            , string humanID
                                                                                            , string machineID
                                                                                            , string semiProductNo
                                                                                            , string semiProductName
                                                                                            , int? NormID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetHistoryCapacityBySomeCriteria", fromdate
                                                                                                            , todate
                                                                                                            , batchID
                                                                                                            , productOfBatchID
                                                                                                            , operationID
                                                                                                            , humanID
                                                                                                            , machineID
                                                                                                            , semiProductNo
                                                                                                            , semiProductName
                                                                                                            , NormID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMOperationDetailPlanCapacityItemsInfo> GetListDataByListItemID(string listItemID)
        {
            DataSet ds = dal.GetDataSet("MMOperationDetailPlanCapacityItems_GetListDataByListItemID", listItemID);
            return (List<MMOperationDetailPlanCapacityItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}