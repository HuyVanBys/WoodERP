using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProposalItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProposalItemsController
    //Created Date:Tuesday, November 03, 2015
    //-----------------------------------------------------------

    public class MMProposalItemsController : BaseBusinessController
    {
        public MMProposalItemsController()
        {
            dal = new DALBaseProvider("MMProposalItems", typeof(MMProposalItemsInfo));
        }

        /// <summary>
        /// Get sale order item by sale order status and sale order batch status
        /// </summary>
        /// <returns>List proposalItemsInfo</returns>
        public List<MMProposalItemsInfo> GetProposalItemsForBatchProduct()
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsForBatchProduct");
            List<MMProposalItemsInfo> proposalItems = new List<MMProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProposalItemsInfo objProposalItemsInfo = (MMProposalItemsInfo)GetObjectFromDataRow(row);
                    proposalItems.Add(objProposalItemsInfo);
                }
            }
            ds.Dispose();
            return proposalItems;
        }

        /// <summary>
        /// Get sale order item by sale order status and sale order batch status
        /// </summary>
        /// <returns>List proposalItemsInfo</returns>
        public List<MMProposalItemsInfo> GetProposalItemsByProposalID(int proposalID)
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsByProposalID", proposalID);
            List<MMProposalItemsInfo> proposalItems = new List<MMProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProposalItemsInfo objProposalItemsInfo = (MMProposalItemsInfo)GetObjectFromDataRow(row);
                    proposalItems.Add(objProposalItemsInfo);
                }
            }
            return proposalItems;
        }
        public List<MMProposalItemsInfo> GetProposalItemsAvailableToBatch()
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsAvailableToBatch");
            List<MMProposalItemsInfo> proposalItems = new List<MMProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProposalItemsInfo objProposalItemsInfo = (MMProposalItemsInfo)GetObjectFromDataRow(row);
                    proposalItems.Add(objProposalItemsInfo);
                }
            }
            return proposalItems;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMProposalItemsInfo> proposalList = new List<MMProposalItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProposalItemsInfo objProposalsInfo = (MMProposalItemsInfo)GetObjectFromDataRow(row);
                    proposalList.Add(objProposalsInfo);
                }
            }
            ds.Dispose();
            return proposalList;
        }
        public List<MMProposalItemsInfo> GetProposalItemsNotInBatchProductItems()
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsNotInBatchProductItems");
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }
        public List<MMProposalItemsInfo> GetProposalItemsForCheckingRemainProposalValidQty(int proposalItemID, int canceledProposalitemID)
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsForCheckingRemainProposalValidQty", proposalItemID, canceledProposalitemID);
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMProposalItemsInfo> GetProposalItemsInfoBySaleOrder(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsInfoBysaleOrder", saleOrderID);
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMProposalItemsInfo> GetAllProposalItemForBatchProduct()
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetAllProposalItemForBatchProduct");
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMProposalItemsInfo> GetProposalItemsForReport198(string proposalType, int proposalID, int objectID, string objectType, DateTime dateFrom, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsForReport198");
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMProposalItemsInfo> GetProposalItemsByARSaleOrderItemIDList(string saleOrderItemIDList)
        {
            DataSet ds = dal.GetDataSet("MMProposalItems_GetProposalItemsByARSaleOrderItemIDList", saleOrderItemIDList);
            return (List<MMProposalItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}