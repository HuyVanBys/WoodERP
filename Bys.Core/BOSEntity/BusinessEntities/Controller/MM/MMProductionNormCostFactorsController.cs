using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMProductionNormCostFactors
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMProductionNormCostFactorsController
    //Created Date:25 October 2018
    //-----------------------------------------------------------

    public class MMProductionNormCostFactorsController : BaseBusinessController
    {
        public MMProductionNormCostFactorsController()
        {
            dal = new DALBaseProvider("MMProductionNormCostFactors", typeof(MMProductionNormCostFactorsInfo));
        }

        public List<MMProductionNormCostFactorsInfo> GetAllAliveNormCost()
        {
            DataSet ds = dal.GetDataSet("MMProductionNormCostFactors_GetAllAliveNormCost");
            List<MMProductionNormCostFactorsInfo> CalculatorProductionNormCostList = new List<MMProductionNormCostFactorsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormCostFactorsInfo objCalculatorProductionNormCostItemsInfo = (MMProductionNormCostFactorsInfo)GetObjectFromDataRow(row);
                    CalculatorProductionNormCostList.Add(objCalculatorProductionNormCostItemsInfo);
                }
            }
            ds.Dispose();
            return CalculatorProductionNormCostList;
        }
        public List<MMProductionNormCostFactorsInfo> GetItemIsSetCostPrice()
        {
            DataSet ds = dal.GetDataSet("MMProductionNormCostFactors_GetItemIsSetCostPrice");
            List<MMProductionNormCostFactorsInfo> CalculatorProductionNormCostList = new List<MMProductionNormCostFactorsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMProductionNormCostFactorsInfo objCalculatorProductionNormCostItemsInfo = (MMProductionNormCostFactorsInfo)GetObjectFromDataRow(row);
                    CalculatorProductionNormCostList.Add(objCalculatorProductionNormCostItemsInfo);
                }
            }
            ds.Dispose();
            return CalculatorProductionNormCostList;
        }

    }
    #endregion
}