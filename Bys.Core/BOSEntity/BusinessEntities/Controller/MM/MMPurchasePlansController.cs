using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMPurchasePlans
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMPurchasePlansController
    //Created Date:Saturday, November 14, 2015
    //-----------------------------------------------------------

    public class MMPurchasePlansController : BaseBusinessController
    {
        public MMPurchasePlansController()
        {
            dal = new DALBaseProvider("MMPurchasePlans", typeof(MMPurchasePlansInfo));
        }
        public DataSet GetAllMMPurchasePlansForLookupControl()
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlans_GetAllMMPurchasePlansForLookupControl");
            return ds;
        }

        public DataSet GetSearchPurchasePlanOfBranch(string purchasePlanNo
                                                     , int? objectID
                                                     , string objectType
                                                     , int? batchProductID
                                                     , int? saleOrderID
                                                     , int? employeeID
                                                     , string purchasePlanStatus
                                                     , DateTime fromDate
                                                     , DateTime toDate
                                                     , int branchID)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlans_GetSearchPurchasePlanOfBranch", purchasePlanNo, objectID, objectType, batchProductID, saleOrderID, employeeID, purchasePlanStatus, fromDate, toDate, branchID);
            return ds;
        }

        public DataSet GetSearchPurchasePlanBranchList(string purchasePlanNo
                                                     , int? objectID
                                                     , string objectType
                                                     , int? batchProductID
                                                     , int? saleOrderID
                                                     , int? employeeID
                                                     , string purchasePlanStatus
                                                     , DateTime fromDate
                                                     , DateTime toDate
                                                     , List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = dal.GetDataSet("MMPurchasePlans_GetSearchPurchasePlanOfBranch", purchasePlanNo, objectID, objectType, batchProductID, saleOrderID, employeeID, purchasePlanStatus, fromDate, toDate, ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }
            return rtn;
        }

        public DataSet GetPurchasePlansBySomeCriteria(string purchasePlanNo,
                                                        string purchasePlanStatus,
                                                        int? acObjectID,
                                                        string acObjectType,
                                                        int batchProductID,
                                                        int saleOrderID,
                                                        int employeeID,
                                                        DateTime fromDate,
                                                        DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("MMPurchasePlans_GetPurchasePlansBySomeCriteria",
                                                                            purchasePlanNo,
                                                                            purchasePlanStatus,
                                                                            acObjectID,
                                                                            acObjectType,
                                                                            batchProductID,
                                                                            saleOrderID,
                                                                            employeeID,
                                                                            fromDate,
                                                                            toDate);
            return ds;
        }

    }
    #endregion
}