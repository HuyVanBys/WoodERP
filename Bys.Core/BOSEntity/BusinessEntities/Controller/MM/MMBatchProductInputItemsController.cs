using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region MMBatchProductInputItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:MMBatchProductInputItemsController
    //Created Date:Thursday, January 10, 2019
    //-----------------------------------------------------------

    public class MMBatchProductInputItemsController : BaseBusinessController
    {
        public MMBatchProductInputItemsController()
        {
            dal = new DALBaseProvider("MMBatchProductInputItems", typeof(MMBatchProductInputItemsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<MMBatchProductInputItemsInfo> products = new List<MMBatchProductInputItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    MMBatchProductInputItemsInfo objProductsInfo = (MMBatchProductInputItemsInfo)GetObjectFromDataRow(row);
                    products.Add(objProductsInfo);
                }
            }
            ds.Dispose();
            return products;
        }

        public List<MMBatchProductInputItemsInfo> GetItemForTransfer()
        {
            DataSet ds = dal.GetDataSet("MMBatchProductInputItems_GetItemForTransfer");
            return (List<MMBatchProductInputItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMBatchProductInputItemsInfo> GetInputItemByBatchProductLumber(int? batchProductID, string productType)
        {
            DataSet ds = dal.GetDataSet("MMBatchProductInputItems_GetInputItemByBatchProductLumber", batchProductID, productType);
            return (List<MMBatchProductInputItemsInfo>)GetListFromDataSet(ds);
        }

        public List<MMBatchProductInputItemsInfo> GetItemForPurchaseProposal()
        {
            DataSet ds = dal.GetDataSet("MMBatchProductInputItems_GetItemForPurchaseProposal");
            return (List<MMBatchProductInputItemsInfo>)GetListFromDataSet(ds);
        }

    }
    #endregion
}