using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using BOSLib;


namespace BOSERP
{
	#region MMFalseConditionalItems
	//-----------------------------------------------------------
	//Generated By: BOS Studio
	//Class:MMFalseConditionalItemsController
	//Created Date:21/02/2024 12:00:00 AM
	//-----------------------------------------------------------

	public class MMFalseConditionalItemsController : BaseBusinessController
	{
		public MMFalseConditionalItemsController()
		{
			dal = new DALBaseProvider("MMFalseConditionalItems", typeof(MMFalseConditionalItemsInfo));
		}

		public override System.Collections.IList GetListFromDataSet(DataSet ds)
		{
			List<MMFalseConditionalItemsInfo> items = new List<MMFalseConditionalItemsInfo>();
			if (ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					MMFalseConditionalItemsInfo item = (MMFalseConditionalItemsInfo)GetObjectFromDataRow(row);
					items.Add(item);
				}
			}
			return items;
		}
		public DataSet GetItemByFalseConditionalID(int falseConditionalID)
        {
			DataSet ds = dal.GetDataSet("MMFalseConditionalItems_GetItemByFalseConditionalID", falseConditionalID);
			return ds;
        }
		public MMFalseConditionalItemsInfo GetItemBySerialNo(string serialNo)
        {
			DataSet ds = dal.GetDataSet("MMFalseConditionalItems_GetItemBySerialNo", serialNo);
			if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
			{
				MMFalseConditionalItemsInfo objFalseConditionalItemsInfo = (MMFalseConditionalItemsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
				ds.Dispose();
				return objFalseConditionalItemsInfo;
			}
			return null;
		}
	}
	#endregion
}