using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region PMTasks
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:PMTasksController
    //Created Date:Saturday, March 24, 2018
    //-----------------------------------------------------------

    public class PMTasksController : BaseBusinessController
    {
        public PMTasksController()
        {
            dal = new DALBaseProvider("PMTasks", typeof(PMTasksInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<PMTasksInfo> tasks = new List<PMTasksInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    PMTasksInfo objTasksInfo = (PMTasksInfo)GetObjectFromDataRow(row);
                    tasks.Add(objTasksInfo);
                }
            }
            ds.Dispose();
            return tasks;
        }

        public List<PMTasksInfo> GetTasksByDeliveryPlanID(int deliveryPlanID)
        {
            DataSet ds = dal.GetDataSet("PMTasks_GetTasksByDeliveryPlanID", deliveryPlanID);

            return (List<PMTasksInfo>)GetListFromDataSet(ds);
        }

        public List<PMTasksInfo> GetTasksByObjectIDAndType(int objectID, string objectType)
        {
            DataSet ds = dal.GetDataSet("PMTasks_GetTasksByObjectIDAndType", objectID, objectType);

            return (List<PMTasksInfo>)GetListFromDataSet(ds);
        }

        public List<PMTasksInfo> GetTasksByObject01IDAndObject01Type(int object01ID, string objectType01)
        {
            DataSet ds = dal.GetDataSet("PMTasks_GetTasksByObject01IDAndObject01Type", object01ID, objectType01);

            return (List<PMTasksInfo>)GetListFromDataSet(ds);
        }

        public List<PMTasksInfo> GetTasksByDeliveryPlanIDs(string deliveryPlanIDs)
        {
            DataSet ds = dal.GetDataSet("PMTasks_GetDeliveryPlanWorksByDeliveryPlanIDs", deliveryPlanIDs);
            return (List<PMTasksInfo>)GetListFromDataSet(ds);
        }

        public void DeleteTasksByDeliveryPlanWorkID(int deliveryPlanWorkID)
        {
            dal.ExecuteStoredProcedure("PMTasks_DeleteTasksByDeliveryPlanWorkID", deliveryPlanWorkID);
        }
    }
    #endregion
}