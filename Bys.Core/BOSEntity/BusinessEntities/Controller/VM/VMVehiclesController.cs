using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region VMVehicles
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:VMVehiclesController
    //Created Date:Friday, June 21, 2013
    //-----------------------------------------------------------

    public class VMVehiclesController : BaseBusinessController
    {
        public VMVehiclesController()
        {
            dal = new DALBaseProvider("VMVehicles", typeof(VMVehiclesInfo));
        }
        public List<VMVehiclesInfo> GetAllVehicleList()
        {
            List<VMVehiclesInfo> vehicleList = new List<VMVehiclesInfo>();
            DataSet ds = GetAllObjects();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    VMVehiclesInfo objVehiclesInfo = (VMVehiclesInfo)GetObjectFromDataRow(row);
                    vehicleList.Add(objVehiclesInfo);
                }
            }
            ds.Dispose();
            return vehicleList;
        }
        public List<VMVehiclesInfo> SelectALLByVMVehicleIDsAndTruckType(string VMVehicleIDs, string truckType)
        {
            List<VMVehiclesInfo> vehicleList = new List<VMVehiclesInfo>();
            DataSet ds = dal.GetDataSet("VMVehicles_SelectALLByVMVehicleIDsAndTruckType", VMVehicleIDs, truckType);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    VMVehiclesInfo objVehiclesInfo = (VMVehiclesInfo)GetObjectFromDataRow(row);
                    vehicleList.Add(objVehiclesInfo);
                }
            }
            ds.Dispose();
            return vehicleList;
        }
        public List<VMVehiclesInfo> SelectALLNotInVMVehicleIDs(string VMVehicleIDs)
        {
            List<VMVehiclesInfo> vehicleList = new List<VMVehiclesInfo>();
            DataSet ds = dal.GetDataSet("VMVehicles_SelectALLNotInVMVehicleIDs", VMVehicleIDs);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    VMVehiclesInfo objVehiclesInfo = (VMVehiclesInfo)GetObjectFromDataRow(row);
                    vehicleList.Add(objVehiclesInfo);
                }
            }
            ds.Dispose();
            return vehicleList;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<VMVehiclesInfo> vehicles = new List<VMVehiclesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    VMVehiclesInfo vehicle = (VMVehiclesInfo)GetObjectFromDataRow(row);
                    vehicles.Add(vehicle);
                }
            }
            ds.Dispose();
            return vehicles;
        }

        public DataSet GetAllVehicles()
        {
            return dal.GetDataSet("VMVehicles_GetAllVehicles");
        }
    }
    #endregion
}