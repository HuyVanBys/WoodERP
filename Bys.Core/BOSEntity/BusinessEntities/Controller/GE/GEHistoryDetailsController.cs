using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region GEHistoryDetails
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:GEHistoryDetailsController
    //Created Date:Wednesday, August 31, 2011
    //-----------------------------------------------------------

    public class GEHistoryDetailsController : BaseBusinessController
    {
        public GEHistoryDetailsController()
        {
            dal = new DALBaseProvider("GEHistoryDetails", typeof(GEHistoryDetailsInfo));
        }

        /// <summary>
        /// Get history detail list
        /// </summary>
        /// <param name="objectName">Object history name</param>
        /// <param name="objectNo">Object no</param>
        /// <param name="fromDate">From date</param>
        /// <param name="toDate">To date</param>
        /// <returns>History detail list</returns>
        public List<GEHistoryDetailsInfo> GetHistoryDetailList(string objectName, int? objectID, string objectNo, DateTime? fromDate, DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("GEHistoryDetails_GetHistoryDetailList", objectName, objectID, objectNo, fromDate, toDate);
            List<GEHistoryDetailsInfo> historyDetailList = new List<GEHistoryDetailsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    GEHistoryDetailsInfo objHistoryDetailsInfo = (GEHistoryDetailsInfo)GetObjectFromDataRow(row);
                    historyDetailList.Add(objHistoryDetailsInfo);
                }
            }
            return historyDetailList;
        }

        /// <summary>
        /// Get history detail list
        /// </summary>
        /// <param name="objectName">Object history name</param>
        /// <param name="fromDate">Date the result will be filtered from</param>
        /// <param name="toDate">Date the result will be filtered to</param>
        /// <returns>History detail list</returns>
        public List<GEHistoryDetailsInfo> GetHistoryDetailList(string objectName, DateTime? fromDate, DateTime? toDate)
        {
            return GetHistoryDetailList(objectName, null, null, fromDate, toDate);
        }

        /// <summary>
        /// Get history detail list
        /// </summary>
        /// <param name="objectName">Object history name</param>
        /// <param name="objectNo">Object no</param>
        /// <param name="fromDate">Date the result will be filtered from</param>
        /// <param name="toDate">Date the result will be filtered to</param>
        /// <returns>History detail list</returns>
        public List<GEHistoryDetailsInfo> GetHistoryDetailList(string objectName, string objectNo, DateTime? fromDate, DateTime? toDate)
        {
            return GetHistoryDetailList(objectName, null, objectNo, fromDate, toDate);
        }

        /// <summary>
        /// Get history detail list
        /// </summary>
        /// <param name="objectName">Object history name</param>
        /// <param name="objectNo">Object no</param>
        /// <returns>History detail list</returns>
        public List<GEHistoryDetailsInfo> GetHistoryDetailList(string objectName, string objectNo)
        {
            return GetHistoryDetailList(objectName, null, objectNo, null, null);
        }

        /// <summary>
        /// Get change details of a history
        /// </summary>
        /// <param name="historyID">History id</param>
        /// <returns>List of history details objects contains change details</returns>
        public List<GEHistoryDetailsInfo> GetHistoryDetailsByHistoryID(int historyID)
        {
            DataSet ds = dal.GetDataSet("GEHistoryDetails_GetHistoryDetailsByHistoryID", historyID);
            List<GEHistoryDetailsInfo> historyDetailList = new List<GEHistoryDetailsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    GEHistoryDetailsInfo objHistoryDetailsInfo = (GEHistoryDetailsInfo)GetObjectFromDataRow(row);
                    historyDetailList.Add(objHistoryDetailsInfo);
                }
            }
            return historyDetailList;
        }
    }
    #endregion
}