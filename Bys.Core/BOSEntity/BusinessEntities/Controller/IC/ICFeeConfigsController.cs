using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICFeeConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICFeeConfigsController
    //Created Date:Thursday, May 10, 2018
    //-----------------------------------------------------------

    public class ICFeeConfigsController : BaseBusinessController
    {
        public ICFeeConfigsController()
        {
            dal = new DALBaseProvider("ICFeeConfigs", typeof(ICFeeConfigsInfo));
        }

        public DataSet GetAllAliveFeeConfig()
        {
            DataSet ds = dal.GetDataSet("ICFeeConfigs_GetAllAliveFeeConfig");
            return ds;
        }

        public ICFeeConfigsInfo GetFeeForPriceSheet(bool isCont, string lotNo, int measureUnitID)
        {
            DataSet ds = dal.GetDataSet("ICFeeConfigs_GetFeeForPriceSheet", isCont, lotNo, measureUnitID);
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICFeeConfigsInfo objFeeConfigsInfo = (ICFeeConfigsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return objFeeConfigsInfo;
            }

            return null;
        }

        public DataSet GetFeeConfigByFeeTypeAndTeminalType(string feeType, string TeminalType)
        {
            DataSet ds = dal.GetDataSet("ICFeeConfigs_GetFeeConfigByFeeTypeAndTeminalType", feeType, TeminalType);
            return ds;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICFeeConfigsInfo> FeeConfigs = new List<ICFeeConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICFeeConfigsInfo objFeeConfigsInfo = (ICFeeConfigsInfo)GetObjectFromDataRow(row);
                    FeeConfigs.Add(objFeeConfigsInfo);
                }
            }
            ds.Dispose();
            return FeeConfigs;
        }

        public DataSet GetFeeConfigByFeeTypeAndTeminalTypeAndPeriod(string feeType, string TeminalType, string period)
        {
            DataSet ds = dal.GetDataSet("ICFeeConfigs_GetFeeConfigByFeeTypeAndTeminalTypeAndPeriod", feeType, TeminalType, period);
            return ds;
        }

        public List<ICFeeConfigsInfo> GetFeeConfigByPeriod(string period)
        {
            DataSet ds = dal.GetDataSet("ICFeeConfigs_GetFeeConfigByPeriod", period);
            return (List<ICFeeConfigsInfo>)GetListFromDataSet(ds);
        }

        public List<ICFeeConfigsInfo> GetAllFeeConfig()
        {
            DataSet ds = GetAllAliveFeeConfig();
            return (List<ICFeeConfigsInfo>)GetListFromDataSet(ds);
        }


    }
    #endregion
}