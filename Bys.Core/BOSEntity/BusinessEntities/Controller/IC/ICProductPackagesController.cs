using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductPackages
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductPackagesController
    //Created Date:Wednesday, October 31, 2018
    //-----------------------------------------------------------

    public class ICProductPackagesController : BaseBusinessController
    {
        public ICProductPackagesController()
        {
            dal = new DALBaseProvider("ICProductPackages", typeof(ICProductPackagesInfo));
        }
        public List<ICProductPackagesInfo> GetPackageDataBySomeCriteria(string packNo, int? productID, int? supplierID
                                , string packName, string lotNo, string supplierLotNo
                                , int? attributeID, int? batchID, string barcodeNo)
        {
            DataSet ds = dal.GetDataSet("ICProductPackages_GetPackageDataBySomeCriteria", packNo, productID, supplierID
                                , packName, lotNo, supplierLotNo
                                , attributeID, batchID, barcodeNo);
            return (List<ICProductPackagesInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductPackagesInfo> GetPackageDataByBatchAndSomeCriteria(string packNo, int? productID, int? supplierID
                                , string packName, string lotNo, string supplierLotNo
                                , int? attributeID, int? batchID, string barcodeNo, bool isGetBatchInfo)
        {
            DataSet ds = dal.GetDataSet("ICProductPackages_GetPackageDataByBatchAndSomeCriteria", packNo, productID, supplierID
                                , packName, lotNo, supplierLotNo
                                , attributeID, batchID, barcodeNo, isGetBatchInfo);
            return (List<ICProductPackagesInfo>)GetListFromDataSet(ds);
        }
        public void SaveDetailByPackageNormItem(string productPackageID, string createdUser)
        {
            dal.ExecuteStoredProcedure("ICProductPackages_SaveDetailByPackageNormItem", productPackageID, createdUser);
        }
        public void DeleteProductPackage(int productPackageID, string createdUser)
        {
            dal.ExecuteStoredProcedure("ICProductPackages_DeleteProductPackage", productPackageID, createdUser);
        }
        public void DeleteProductPackageBOMDetail(int productPackageID, string createdUser)
        {
            dal.ExecuteStoredProcedure("ICProductPackages_DeleteProductPackageBOMDetail", productPackageID, createdUser);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICProductPackagesInfo> Lists = new List<ICProductPackagesInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductPackagesInfo item = (ICProductPackagesInfo)GetObjectFromDataRow(row);
                    Lists.Add(item);
                }
                ds.Dispose();
            }
            return Lists;
        }
        public void UpdateProductPackageStatus(string packageNoList, string updateUser)
        {
            dal.ExecuteStoredProcedure("ICProductPackages_UpdateProductPackageStatus", packageNoList, updateUser);
        }
        public void UpdateProductPackageStatusByID(string packageIDList, string updateUser)
        {
            dal.ExecuteStoredProcedure("ICProductPackages_UpdateProductPackageStatusByID", packageIDList, updateUser);
        }
        public List<ICProductPackagesInfo> GetPackageDataByPackageIDList(string packID)
        {
            DataSet ds = dal.GetDataSet("ICProductPackages_GetPackageDataByPackageIDList", packID);
            return (List<ICProductPackagesInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductPackagesInfo> GetPackageDataByProductIDList(string productID)
        {
            DataSet ds = dal.GetDataSet("ICProductPackages_GetPackageDataByProductIDList", productID);
            return (List<ICProductPackagesInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductPackagesInfo> GetPackageDataBySaleOrderItemList(string productID)
        {
            DataSet ds = dal.GetDataSet("ICProductPackages_GetPackageDataBySaleOrderItemList", productID);
            return (List<ICProductPackagesInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}