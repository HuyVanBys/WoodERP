using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductTypeAccountConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductTypeAccountConfigsController
    //Created Date:Wednesday, May 30, 2018
    //-----------------------------------------------------------

    public class ICProductTypeAccountConfigsController : BaseBusinessController
    {
        public ICProductTypeAccountConfigsController()
        {
            dal = new DALBaseProvider("ICProductTypeAccountConfigs", typeof(ICProductTypeAccountConfigsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICProductTypeAccountConfigsInfo> items = new List<ICProductTypeAccountConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductTypeAccountConfigsInfo item = (ICProductTypeAccountConfigsInfo)GetObjectFromDataRow(row);
                    items.Add(item);
                }
            }
            return items;
        }

        public List<ICProductTypeAccountConfigsInfo> GetAllAliveProductTypeAccountConfig()
        {
            List<ICProductTypeAccountConfigsInfo> invoices = new List<ICProductTypeAccountConfigsInfo>();
            DataSet ds = dal.GetDataSet("ICProductTypeAccountConfigs_GetAllAliveProductTypeAccountConfig");
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductTypeAccountConfigsInfo objInvoicesInfo = (ICProductTypeAccountConfigsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoices;
        }

        public ICProductTypeAccountConfigsInfo GetObjectByProductType(string productType)
        {
            DataSet ds = dal.GetDataSet("ICProductTypeAccountConfigs_GetObjectByProductType", productType);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductTypeAccountConfigsInfo objInvoicesInfo = (ICProductTypeAccountConfigsInfo)GetObjectFromDataRow(row);
                    return objInvoicesInfo;
                }
            }
            return null;
        }
    }
    #endregion
}