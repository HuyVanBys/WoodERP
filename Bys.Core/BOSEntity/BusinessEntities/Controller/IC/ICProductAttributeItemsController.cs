using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductAttributeItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductAttributeItemsController
    //Created Date:31 January, 2018
    //-----------------------------------------------------------

    public class ICProductAttributeItemsController : BaseBusinessController
    {
        public ICProductAttributeItemsController()
        {
            dal = new DALBaseProvider("ICProductAttributeItems", typeof(ICProductAttributeItemsInfo));
        }

        //Get MMOperations By FK_ICProductAttributeID
        public List<ICProductAttributeItemsInfo> GetMMOperationsByFK_ICProductAttributeID(int ICProductAttributeID)
        {
            DataSet ds = dal.GetDataSet("ICProductAttributeItems_GetMMOperationsByFK_ICProductAttributeID", ICProductAttributeID);
            List<ICProductAttributeItemsInfo> productAttributeItemsList = new List<ICProductAttributeItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductAttributeItemsInfo objProductAttributeItemsInfo = (ICProductAttributeItemsInfo)GetObjectFromDataRow(row);
                    productAttributeItemsList.Add(objProductAttributeItemsInfo);
                }
            }
            ds.Dispose();
            return productAttributeItemsList;
        }
        public List<ICProductAttributeItemsInfo> GetMMOperationsByProcessID(int ProcessID)
        {
            DataSet ds = dal.GetDataSet("ICProductAttributeItems_GetMMOperationsByProcessID", ProcessID);
            List<ICProductAttributeItemsInfo> productAttributeItemsList = new List<ICProductAttributeItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductAttributeItemsInfo objProductAttributeItemsInfo = (ICProductAttributeItemsInfo)GetObjectFromDataRow(row);
                    productAttributeItemsList.Add(objProductAttributeItemsInfo);
                }
            }
            ds.Dispose();
            return productAttributeItemsList;
        }
        public List<ICProductAttributeItemsInfo> GetAllObjectList()
        {
            DataSet ds = GetAllObjects();
            List<ICProductAttributeItemsInfo> productAttributeItemsList = new List<ICProductAttributeItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductAttributeItemsInfo objProductAttributeItemsInfo = (ICProductAttributeItemsInfo)GetObjectFromDataRow(row);
                    productAttributeItemsList.Add(objProductAttributeItemsInfo);
                }
            }
            ds.Dispose();
            return productAttributeItemsList;
        }
    }
    #endregion
}