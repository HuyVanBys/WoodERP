using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICPackagingNormItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICPackagingNormItemsController
    //Created Date:Monday, December 24, 2018
    //-----------------------------------------------------------

    public class ICPackagingNormItemsController : BaseBusinessController
    {
        public ICPackagingNormItemsController()
        {
            dal = new DALBaseProvider("ICPackagingNormItems", typeof(ICPackagingNormItemsInfo));
        }
        public List<ICPackagingNormItemsInfo> GetPackagingNormItemByParentProduct(int productID)
        {
            DataSet ds = dal.GetDataSet("ICPackagingNormItems_GetPackagingNormItemByParentProduct", productID);
            List<ICPackagingNormItemsInfo> packList = new List<ICPackagingNormItemsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICPackagingNormItemsInfo item = (ICPackagingNormItemsInfo)GetObjectFromDataRow(row);
                    packList.Add(item);
                }
            }
            return packList;
        }
        public List<ICPackagingNormItemsInfo> GetPackagingNormItemByPackProduct(int productID)
        {
            DataSet ds = dal.GetDataSet("ICPackagingNormItems_GetPackagingNormItemByPackProduct", productID);
            List<ICPackagingNormItemsInfo> packList = new List<ICPackagingNormItemsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICPackagingNormItemsInfo item = (ICPackagingNormItemsInfo)GetObjectFromDataRow(row);
                    packList.Add(item);
                }
            }
            return packList;
        }

        public List<ICPackagingNormItemsInfo> GetItemByParentProductID(int productID)
        {
            DataSet ds = dal.GetDataSet("ICPackagingNormItems_GetItemByParentProductID", productID);
            List<ICPackagingNormItemsInfo> packList = new List<ICPackagingNormItemsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICPackagingNormItemsInfo item = (ICPackagingNormItemsInfo)GetObjectFromDataRow(row);
                    packList.Add(item);
                }
            }
            return packList;
        }

        public void InsertPackagingComponent(int productionNormItemID, int productID, string userName)
        {
            dal.ExecuteStoredProcedure("ICPackagingNormItems_InsertPackagingComponent", productionNormItemID, productID, userName);
        }

    }
    #endregion
}