using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICMaterialConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICMaterialConfigsController
    //Created Date:21 December 2018
    //-----------------------------------------------------------

    public class ICMaterialConfigsController : BaseBusinessController
    {
        public ICMaterialConfigsController()
        {
            dal = new DALBaseProvider("ICMaterialConfigs", typeof(ICMaterialConfigsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICMaterialConfigsInfo> MaterialConfigs = new List<ICMaterialConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICMaterialConfigsInfo objMaterialConfigsInfo = (ICMaterialConfigsInfo)GetObjectFromDataRow(row);
                    MaterialConfigs.Add(objMaterialConfigsInfo);
                }
            }
            ds.Dispose();
            return MaterialConfigs;
        }
        public List<ICMaterialConfigsInfo> GetActiveConfigBySomeCriteria(string woodType, int? SpecialityID)
        {
            DataSet ds = dal.GetDataSet("ICMaterialConfigs_GetActiveConfigBySomeCriteria", woodType, SpecialityID);
            List<ICMaterialConfigsInfo> ConfigList = new List<ICMaterialConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICMaterialConfigsInfo obj = (ICMaterialConfigsInfo)GetObjectFromDataRow(row);
                    ConfigList.Add(obj);
                }
            }
            ds.Dispose();
            return ConfigList;
        }
        public List<ICMaterialConfigsInfo> GetAllAliveAndActiveConfig()
        {
            DataSet ds = dal.GetDataSet("ICMaterialConfigs_GetAllAliveAndActiveConfig");
            List<ICMaterialConfigsInfo> ConfigList = new List<ICMaterialConfigsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICMaterialConfigsInfo obj = (ICMaterialConfigsInfo)GetObjectFromDataRow(row);
                    ConfigList.Add(obj);
                }
            }
            ds.Dispose();
            return ConfigList;
        }


    }
    #endregion
}