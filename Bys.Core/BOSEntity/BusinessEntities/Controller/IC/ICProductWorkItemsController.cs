using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductWorkItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductWorkItemsController
    //Created Date:22 Tháng Mười Hai 2017
    //-----------------------------------------------------------

    public class ICProductWorkItemsController : BaseBusinessController
    {
        public ICProductWorkItemsController()
        {
            dal = new DALBaseProvider("ICProductWorkItems", typeof(ICProductWorkItemsInfo));
        }

        public List<ICProductWorkItemsInfo> GetProductWorkItemsByProductWorkItemParentID(int productWorkItemParentID)
        {
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetProductWorkItemsByProductWorkItemParentID", productWorkItemParentID);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }

        public List<ICProductWorkItemsInfo> GetMaterialProductWorkItemsByProductWorkItemParentID(int productWorkItemParentID)
        {
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetMaterialProductWorkItemsByProductWorkItemParentID", productWorkItemParentID);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }

        public List<ICProductWorkItemsInfo> GetProductWorkItemsByProductWorkItemParentID(int productWorkItemParentID, int productID)
        {
            //if (productID == 0)
            //{
            //    return GetProductWorkItemsByProductWorkItemParentID(productWorkItemParentID);
            //}
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetProductWorkItemsByProductWorkItemParentIDAndProductID", productWorkItemParentID, productID);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }

        public List<ICProductWorkItemsInfo> GetProductWorkItemsByProductWorkItemParentIDAndParentType(int productWorkItemParentID, string productWorkItemParentType)
        {
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetProductWorkItemsByProductWorkItemParentIDAndParentType", productWorkItemParentID, productWorkItemParentType);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }

        public List<ICProductWorkItemsInfo> GetProductWorkItemsByProductWorkType(string productWorkItemType)
        {
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetProductWorkItemsByProductWorkItemType", productWorkItemType);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }
        public List<ICProductWorkItemsInfo> GetItemByParentID(int parentID)
        {
            DataSet ds = dal.GetDataSet("ICProductWorkItems_GetItemByParentID", parentID);
            List<ICProductWorkItemsInfo> productWorkItems = new List<ICProductWorkItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ICProductWorkItemsController objProductWorkItemsController = new ICProductWorkItemsController();
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductWorkItemsInfo objProductBranchPricesInfo = (ICProductWorkItemsInfo)objProductWorkItemsController.GetObjectFromDataRow(row);
                    productWorkItems.Add(objProductBranchPricesInfo);
                }
            }
            return productWorkItems;
        }

    }
    #endregion
}