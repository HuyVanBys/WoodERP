using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICTransferProposals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICTransferProposalsController
    //Created Date:Tuesday, August 21, 2018
    //-----------------------------------------------------------

    public class ICTransferProposalsController : BaseBusinessController
    {
        public ICTransferProposalsController()
        {
            dal = new DALBaseProvider("ICTransferProposals", typeof(ICTransferProposalsInfo));
        }

        public void UpdateTransferProposalStatusReferenceByTransferProposalID(int transferProposalID)
        {
            dal.ExecuteStoredProcedure("ICTransferProposals_UpdateTransferProposalStatusReferenceByTransferProposalID", transferProposalID);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICTransferProposalsInfo> transferProposalList = new List<ICTransferProposalsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICTransferProposalsInfo objTransferProposalsInfo = (ICTransferProposalsInfo)GetObjectFromDataRow(row);
                    transferProposalList.Add(objTransferProposalsInfo);
                }
            }
            ds.Dispose();
            return transferProposalList;
        }

        public List<ICTransferProposalsInfo> ShowAllTransferProposalForHome(DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("ICTransferProposals_ShowAllTransferProposalForHome", fromDate, toDate);
            return (List<ICTransferProposalsInfo>)GetListFromDataSet(ds);
        }

        public DataSet GetSearchDataPermission(string transferProposalNo,
                                               string branchRef,
                                               int? employeeID,
                                               DateTime? dateFrom,
                                               DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("ICTransferProposals_GetSearchDataPermission", transferProposalNo, branchRef, employeeID, dateFrom, dateTo);
            return ds;
        }
    }
    #endregion
}