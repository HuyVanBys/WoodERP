using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICImportAndExportReasons
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICImportAndExportReasonsController
    //Created Date:Friday, April 27, 2018
    //-----------------------------------------------------------

    public class ICImportAndExportReasonsController : BaseBusinessController
    {
        public ICImportAndExportReasonsController()
        {
            dal = new DALBaseProvider("ICImportAndExportReasons", typeof(ICImportAndExportReasonsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICImportAndExportReasonsInfo> listImportAndExportReasonsInfo = new List<ICImportAndExportReasonsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICImportAndExportReasonsInfo objImportAndExportReasonsInfo = (ICImportAndExportReasonsInfo)GetObjectFromDataRow(row);
                    listImportAndExportReasonsInfo.Add(objImportAndExportReasonsInfo);
                }
            }
            ds.Dispose();
            return listImportAndExportReasonsInfo;
        }

        public List<ICImportAndExportReasonsInfo> GetListImportAndExportReasonsByType(string importAndExportReasonsType)
        {
            DataSet ds = dal.GetDataSet("ICImportAndExportReasons_GetListImportAndExportReasonsByType", importAndExportReasonsType);
            return (List<ICImportAndExportReasonsInfo>)GetListFromDataSet(ds);
        }

        public ICImportAndExportReasonsInfo GetImportAndExportReasonByModuleName(string moduleName)
        {
            DataSet ds = dal.GetDataSet("ICImportAndExportReasons_GetImportAndExportReasonByModuleName", moduleName);
            ICImportAndExportReasonsInfo reason = new ICImportAndExportReasonsInfo();
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                reason = (ICImportAndExportReasonsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return reason;
        }
    }

    #endregion
}