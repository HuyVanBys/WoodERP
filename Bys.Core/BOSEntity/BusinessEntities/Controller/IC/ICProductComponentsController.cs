using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductComponents
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductComponentsController
    //Created Date:Tuesday, September 20, 2011
    //-----------------------------------------------------------

    public class ICProductComponentsController : BaseBusinessController
    {
        public ICProductComponentsController()
        {
            dal = new DALBaseProvider("ICProductComponents", typeof(ICProductComponentsInfo));
        }

        /// <summary>
        /// Get component list of a product
        /// </summary>
        /// <param name="productID">ID of product</param>
        /// <returns>List of components</returns>
        public List<ICProductComponentsInfo> GetProductComponentListByProductID(int productID)
        {
            DataSet ds = dal.GetDataSet("ICProductComponents_GetProductComponentListByProductID", productID);
            List<ICProductComponentsInfo> productComponentList = new List<ICProductComponentsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductComponentsInfo objProductComponentsInfo = (ICProductComponentsInfo)GetObjectFromDataRow(row);
                    productComponentList.Add(objProductComponentsInfo);
                }

            }
            return productComponentList;
        }

        /// <summary>
        /// Get a component by its id and parent one
        /// </summary>
        /// <param name="parentProductID">Parent product id</param>
        /// <param name="childProductID">Component id</param>
        /// <returns>Component object</returns>
        public ICProductComponentsInfo GetComponentByParentAndChildProductID(int parentProductID, int childProductID)
        {
            return (ICProductComponentsInfo)dal.GetDataObject("ICProductComponents_GetComponentByParentAndChildProductID", parentProductID, childProductID);
        }
    }

    #endregion
}