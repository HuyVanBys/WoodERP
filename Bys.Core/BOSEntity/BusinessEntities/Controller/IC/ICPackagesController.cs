using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICPackages
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICPackagesController
    //Created Date:Tuesday, September 20, 2011
    //-----------------------------------------------------------

    public class ICPackagesController : BaseBusinessController
    {
        public ICPackagesController()
        {
            dal = new DALBaseProvider("ICPackages", typeof(ICPackagesInfo));
        }

        /// <summary>
        /// Get package list
        /// </summary>
        /// <param name="supplierID">Supplier id</param>
        /// <param name="packagePackNo">Reference to receipt package no</param>
        /// <param name="packageReceiptDate">Package receipt date</param>
        /// <returns>Package list</returns>
        public List<ICPackagesInfo> GetPackageList(int? supplierID, string packagePackNo, DateTime? packageReceiptDate)
        {
            List<ICPackagesInfo> packageList = new List<ICPackagesInfo>();
            DataSet ds = dal.GetDataSet("ICPackages_GetPackageList", supplierID, packagePackNo, packageReceiptDate);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICPackagesInfo objPackagesInfo = (ICPackagesInfo)GetObjectFromDataRow(row);
                    if (objPackagesInfo != null)
                        packageList.Add(objPackagesInfo);
                }
            }
            return packageList;
        }

        /// <summary>
        /// Get package count of a supplier by pack no
        /// </summary>        
        /// <param name="supplierID">Supplier id</param>
        /// <param name="packNo">Given pack no</param>
        /// <returns>Package count</returns>
        public int GetPackageCountBySupplierIDAndPackNo(int supplierID, string packNo)
        {
            int packageCount = 0;
            DataSet ds = dal.GetDataSet("ICPackages_GetPackageCountBySupplierIDAndPackNo", supplierID, packNo);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    packageCount = Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                }
            }
            return packageCount;
        }

        /// <summary>
        /// Get all packages of a product that still exist in a stock
        /// </summary>
        /// <param name="productID">Product id</param>
        /// <param name="stockID">Stock id</param>
        /// <returns>Package list</returns>
        public List<ICPackagesInfo> GetPackagesByProductIDAndStockID(int productID, int stockID)
        {
            DataSet ds = dal.GetDataSet("ICPackages_GetPackagesByProductIDAndStockID", productID, stockID);
            List<ICPackagesInfo> packages = new List<ICPackagesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICPackagesInfo objPackagesInfo = (ICPackagesInfo)GetObjectFromDataRow(row);
                    packages.Add(objPackagesInfo);
                }
            }
            return packages;
        }

        /// <summary>
        /// Delete packages of a supplier by pack no
        /// </summary>
        /// <param name="supplierID">Supplier id</param>
        /// <param name="packNo">Pack no</param>
        public void DeletePackagesBySupplierIDAndPackNo(int supplierID, string packNo)
        {
            dal.ExecuteStoredProcedure("ICPackages_DeletePackagesBySupplierIDAndPackNo", supplierID, packNo);
        }
    }
    #endregion
}