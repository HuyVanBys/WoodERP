using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICMeasureUnits
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICMeasureUnitsController
    //Created Date:Tuesday, November 23, 2010
    //-----------------------------------------------------------

    public class ICMeasureUnitsController : BaseBusinessController
    {
        public ICMeasureUnitsController()
        {
            dal = new DALBaseProvider("ICMeasureUnits", typeof(ICMeasureUnitsInfo));
        }
        public List<ICMeasureUnitsInfo> GetAllAliveMeasureUnit()
        {
            DataSet ds = dal.GetDataSet("ICMeasureUnits_GetAllAliveMeasureUnit");
            return (List<ICMeasureUnitsInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICMeasureUnitsInfo> products = new List<ICMeasureUnitsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICMeasureUnitsInfo objProductsInfo = (ICMeasureUnitsInfo)GetObjectFromDataRow(row);
                    products.Add(objProductsInfo);
                }
            }
            ds.Dispose();
            return products;
        }

        public DataSet GetMeasureUnitByProductID(int productID)
        {
            return dal.GetDataSet("ICMeasureUnits_GetMeasureUnitByProductID", productID);
        }
        public List<ICMeasureUnitsInfo> GetProductMeasureUnitByProductID(int productID)
        {
            DataSet ds = dal.GetDataSet("ICMeasureUnits_GetProductMeasureUnitByProductID", productID);
            return (List<ICMeasureUnitsInfo>)GetListFromDataSet(ds);
        }
        public List<ICMeasureUnitsInfo> GetM3AndSLInMeasureUnit()
        {
            DataSet ds = dal.GetDataSet("ICMeasureUnits_GetM3AndSLInMeasureUnit");
            return (List<ICMeasureUnitsInfo>)GetListFromDataSet(ds);
        }
        public bool CheckMeasureUnitExistInICTransaction(int measureUnitID)
        {
            DataSet ds = dal.GetDataSet("ICMeasureUnits_CheckMeasureUnitExistInICTransaction", measureUnitID);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
    #endregion
}