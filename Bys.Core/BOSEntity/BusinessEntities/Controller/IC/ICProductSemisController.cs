using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductSemis
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductSemisController
    //Created Date:Friday, October 04, 2019
    //-----------------------------------------------------------

    public class ICProductSemisController : BaseBusinessController
    {
        public ICProductSemisController()
        {
            dal = new DALBaseProvider("ICProductSemis", typeof(ICProductSemisInfo));
        }
        public List<ICProductSemisInfo> GetAllEquipmentBySemiProduct(int objectID)
        {
            DataSet ds = dal.GetDataSet("ICProductSemis_GetAllEquipmentBySemiProduct", objectID);
            return (List<ICProductSemisInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductSemisInfo> GetAllSemiProductByMachineAndOperation(int MMMachineUnitItemID, int operationID)
        {
            DataSet ds = dal.GetDataSet("ICProductSemis_GetAllSemiProductByMachineAndOperation", MMMachineUnitItemID, operationID);
            return (List<ICProductSemisInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductSemisInfo> GetListItemRemainBySomeCriteria(DateTime? fromdate, DateTime? todate, int? customerID, int? collectionID, int? branchID, int? TTMTID, string MMOperationID, int? batchProductID, int? userID)
        {
            DataSet ds = dal.GetDataSet("ICProductSemis_GetListItemRemainBySomeCriteria", fromdate, todate, customerID, collectionID, branchID, TTMTID, MMOperationID, batchProductID, userID);
            return (List<ICProductSemisInfo>)GetListFromDataSet(ds);
        }
        public List<ICProductSemisInfo> GetSemiProductByMachineOperation(int machineOperationID)
        {
            DataSet ds = dal.GetDataSet("ICProductSemis_GetSemiProductByMachineOperation", machineOperationID);
            return (List<ICProductSemisInfo>)GetListFromDataSet(ds);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICProductSemisInfo> list = new List<ICProductSemisInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductSemisInfo objProductsInfo = (ICProductSemisInfo)GetObjectFromDataRow(row);
                    list.Add(objProductsInfo);
                }
            }
            ds.Dispose();
            return list;
        }
    }
    #endregion
}