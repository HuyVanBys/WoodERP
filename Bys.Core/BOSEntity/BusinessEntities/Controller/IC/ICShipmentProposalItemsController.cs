using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICShipmentProposalItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICShipmentProposalItemsController
    //Created Date:Thursday, October 29, 2015
    //-----------------------------------------------------------

    public class ICShipmentProposalItemsController : BaseBusinessController
    {
        public ICShipmentProposalItemsController()
        {
            dal = new DALBaseProvider("ICShipmentProposalItems", typeof(ICShipmentProposalItemsInfo));
        }
        public DataSet GetAllShipmentProposalItemForLookupControl()
        {
            DataSet ds = dal.GetDataSet("ICShipmentProposalItems_GetAllICShipmentProposalItemsForLookupControl");
            return ds;

        }

        public List<ICShipmentProposalItemsInfo> GetShipmentProposalItemsForInvoicing()
        {
            DataSet ds = dal.GetDataSet("ICShipmentProposalItems_GetShipmentProposalItemsForInvoicing");
            List<ICShipmentProposalItemsInfo> list = new List<ICShipmentProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICShipmentProposalItemsInfo obj = (ICShipmentProposalItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            return list;
        }

        public List<ICShipmentProposalItemsInfo> GetShipmentProposalItemsByShipmentProposalID(int shipmentProposalID)
        {
            DataSet ds = dal.GetDataSet("ICShipmentProposalItems_GetShipmentProposalItemsByShipmentProposalID", shipmentProposalID);
            List<ICShipmentProposalItemsInfo> list = new List<ICShipmentProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICShipmentProposalItemsInfo obj = (ICShipmentProposalItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            return list;
        }
        public ICShipmentProposalItemsInfo GetItemForCheckingShipmentProposalValidQty(int shipmentProposalItemID)
        {
            return (ICShipmentProposalItemsInfo)dal.GetDataObject("ICShipmentProposalItems_GetItemForCheckingShipmentProposalValidQty", shipmentProposalItemID);

        }

        public List<ICShipmentProposalItemsInfo> GetItemForInvoice()
        {
            DataSet ds = dal.GetDataSet("ICShipmentProposalItems_GetItemForInvoice");
            List<ICShipmentProposalItemsInfo> list = new List<ICShipmentProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICShipmentProposalItemsInfo obj = (ICShipmentProposalItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            return list;
        }

        public ICShipmentProposalItemsInfo GetItemForCheckingInvoiceValidQty(int shipmentProposalItemID, int invoiceItemID, int invoiceID)
        {
            return (ICShipmentProposalItemsInfo)dal.GetDataObject("ICShipmentProposalItems_GetItemForCheckingInvoiceValidQty", shipmentProposalItemID, invoiceItemID, invoiceID);

        }
        public ICShipmentProposalItemsInfo GetQtyByContainerItemID(int ContainerItemID, int ShipmentProposalID)
        {
            return (ICShipmentProposalItemsInfo)dal.GetDataObject("ICShipmentProposalItems_GetQtyByContainerItemID", ContainerItemID, ShipmentProposalID);

        }

    }
    #endregion
}