using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICInitializedInventoryStocks
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICInitializedInventoryStocksController
    //Created Date:Thursday, April 19, 2018
    //-----------------------------------------------------------

    public class ICInitializedInventoryStocksController : BaseBusinessController
    {
        public ICInitializedInventoryStocksController()
        {
            dal = new DALBaseProvider("ICInitializedInventoryStocks", typeof(ICInitializedInventoryStocksInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ICInitializedInventoryStocksInfo> InitializedInventoryStocks = new List<ICInitializedInventoryStocksInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICInitializedInventoryStocksInfo objInitializedInventoryStocksInfo = (ICInitializedInventoryStocksInfo)GetObjectFromDataRow(row);
                    InitializedInventoryStocks.Add(objInitializedInventoryStocksInfo);
                }
            }
            ds.Dispose();
            return InitializedInventoryStocks;
        }
        public List<ICInitializedInventoryStocksInfo> GetInitializedInventoryStocksByDateTo(DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("ICInitializedInventoryStocks_GetInitializedInventoryStocksByDateTo", dateTo);
            return (List<ICInitializedInventoryStocksInfo>)GetListFromDataSet(ds);
        }

        public ICInitializedInventoryStocksInfo GetFirstInitializedInventoryStockByDateTo(DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("ICInitializedInventoryStocks_GetFirstInitializedInventoryStocksByDateTo", dateTo);
            if (ds.Tables[0].Rows.Count > 0)
            {
                return (ICInitializedInventoryStocksInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public List<ICInitializedInventoryStocksInfo> GetExistedInitializedInventoryStocksByDateTo(DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("ICInitializedInventoryStocks_GetExistedInitializedInventoryStocksByDateTo", dateTo);
            return (List<ICInitializedInventoryStocksInfo>)GetListFromDataSet(ds);
        }

        public DataSet GetInitializedInventoryStocks(String productNo, String productSerieNo, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("ICInitializedInventoryStocks_GetInitializedInventoryStocks", productNo, productSerieNo, dateTo);
            return ds;
        }
    }
    #endregion
}