using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ICProductItemProcessLogs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ICProductItemProcessLogsController
    //Created Date:Saturday, March 09, 2019
    //-----------------------------------------------------------

    public class ICProductItemProcessLogsController : BaseBusinessController
    {
        public ICProductItemProcessLogsController()
        {
            dal = new DALBaseProvider("ICProductItemProcessLogs", typeof(ICProductItemProcessLogsInfo));
        }

        public List<ICProductItemProcessLogsInfo> GetBySomeConditions(int batchProductID, int productionNormID, string type)
        {
            DataSet ds = dal.GetDataSet("ICProductItemProcessLogs_GetBySomeConditions", batchProductID, productionNormID, type);
            List<ICProductItemProcessLogsInfo> invoiceList = new List<ICProductItemProcessLogsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductItemProcessLogsInfo objInvoicesInfo = (ICProductItemProcessLogsInfo)GetObjectFromDataRow(row);
                    invoiceList.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoiceList;
        }

        public List<ICProductItemProcessLogsInfo> GetByApproveLogID(int approveID)
        {
            DataSet ds = dal.GetDataSet("ICProductItemProcessLogs_GetByApproveLogID", approveID);
            List<ICProductItemProcessLogsInfo> invoiceList = new List<ICProductItemProcessLogsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICProductItemProcessLogsInfo objInvoicesInfo = (ICProductItemProcessLogsInfo)GetObjectFromDataRow(row);
                    invoiceList.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoiceList;
        }


    }
    #endregion
}