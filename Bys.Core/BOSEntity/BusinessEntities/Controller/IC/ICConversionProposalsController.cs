using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using BOSLib;


namespace BOSERP
{
	#region ICConversionProposals
	//-----------------------------------------------------------
	//Generated By: BOS Studio
	//Class:ICConversionProposalsController
	//Created Date:23/03/2022 00:00:00
	//-----------------------------------------------------------

	public class ICConversionProposalsController : BaseBusinessController
	{
		public ICConversionProposalsController()
		{
			dal = new DALBaseProvider("ICConversionProposals", typeof(ICConversionProposalsInfo));
		}

		public override System.Collections.IList GetListFromDataSet(DataSet ds)
		{
			List<ICConversionProposalsInfo> items = new List<ICConversionProposalsInfo>();
			if (ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					ICConversionProposalsInfo item = (ICConversionProposalsInfo)GetObjectFromDataRow(row);
					items.Add(item);
				}
			}
			return items;
		}

        public DataSet GetConversionProposalListByListOfBranchID(string conversionProposalNo,
                                                                string conversionProposalEmployeeRecever,
                                                                int? employeeID,
                                                                int? stockID,
                                                                DateTime? dateFrom,
                                                                DateTime? dateTo,
                                                                List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetConversionProposalList(conversionProposalNo, conversionProposalEmployeeRecever, employeeID, ojbBranchsInfo.BRBranchID, stockID, dateFrom, dateTo);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetConversionProposalList(string conversionProposalNo,
                                                string conversionProposalEmployeeRecever,
                                                int? employeeID,
                                                int? branchID,
                                                int? stockID,
                                                DateTime? dateFrom,
                                                DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("ICConversionProposals_GetConversionProposalList", conversionProposalNo, conversionProposalEmployeeRecever, employeeID, branchID, stockID, dateFrom, dateTo);
            return ds;
        }
    }
	#endregion
}