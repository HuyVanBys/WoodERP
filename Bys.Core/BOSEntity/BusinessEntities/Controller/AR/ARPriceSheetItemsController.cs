using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARPriceSheetItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARCanceledDeliveryPlanItemsController
    //Created Date:Tuesday, June 26, 2018
    //-----------------------------------------------------------

    public class ARPriceSheetItemsController : BaseBusinessController
    {
        public ARPriceSheetItemsController()
        {
            dal = new DALBaseProvider("ARPriceSheetItems", typeof(ARPriceSheetItemsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARPriceSheetItemsInfo> priceSheetItemList = new List<ARPriceSheetItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARPriceSheetItemsInfo objPriceSheetItemsInfo = (ARPriceSheetItemsInfo)GetObjectFromDataRow(row);
                    priceSheetItemList.Add(objPriceSheetItemsInfo);
                }
            }
            ds.Dispose();
            return priceSheetItemList;
        }

        public List<ARPriceSheetItemsInfo> GetAllObjectByPriceSheetID(int priceSheetID)
        {
            DataSet ds = GetAllDataByForeignColumn("FK_ARPriceSheetID", priceSheetID);
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARPriceSheetItemsInfo> GetAllPriceSheetItemForProposal()
        {
            DataSet ds = dal.GetDataSet("ARPriceSheetItems_GetAllPriceSheetItemForProposal");
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARPriceSheetItemsInfo> GetAllObjectByICProductParentID(int ParentID)
        {
            DataSet ds = dal.GetDataSet("ARPriceSheetItems_GetAllObjectByICProductParentID", ParentID);
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARPriceSheetItemsInfo> getPriceSheetItemForReportByID(int priceSheetID)
        {
            DataSet ds = dal.GetDataSet("ARPriceSheetItems_GetPriceSheetItemForReportByID", priceSheetID);
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetUnitPriceByByDistributionChannelID(int productID, int distributionChannelID, DateTime toDate)
        {
            return (decimal)dal.GetSingleValue("ARPriceSheetItems_GetUnitPriceByByDistributionChannelID", productID, distributionChannelID, toDate);
        }

        public List<ARPriceSheetItemsInfo> GetPriceSheetItemsByDateActiveAndCustomer(string customerType, int customerID, DateTime fromDate, DateTime toDate, int? branchID, int currencyID)
        {
            DataSet ds = dal.GetDataSet("ARPriceSheetItems_GetPriceSheetItemsByDateActiveAndCustomer", customerType, customerID, fromDate, toDate, branchID, currencyID);
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARPriceSheetItemsInfo> GetPriceSheetInActiveByProductIDs(List<ARPriceSheetItemsInfo> productList)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add(new DataColumn("CustomerID", typeof(int)));
            dt.Columns.Add(new DataColumn("ProductID", typeof(int)));
            dt.Columns.Add(new DataColumn("MeasureUnitID", typeof(int)));
            dt.Columns.Add(new DataColumn("DateGet", typeof(DateTime)));

            foreach (ARPriceSheetItemsInfo item in productList)
            {
                DataRow r = dt.NewRow();
                r["CustomerID"] = item.FK_ACObjectID;
                r["ProductID"] = item.FK_ICProductID;
                r["MeasureUnitID"] = item.FK_ICMeasureUnitID;
                r["DateGet"] = item.ARPriceSheetItemsGetDate;
                dt.Rows.Add(r);
            }    
            DataSet ds = SqlDatabaseHelper.GetDataUsingStringType(dt, "Type_ParaGetPrices", "ARPriceSheetItems_GetPriceSheetInActiveByProductIDs");
            return (List<ARPriceSheetItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}