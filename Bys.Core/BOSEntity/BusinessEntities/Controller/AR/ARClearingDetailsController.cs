using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARClearingDetails
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARClearingDetailsController
    //Created Date:Wednesday, May 9, 2018
    //-----------------------------------------------------------

    public class ARClearingDetailsController : BaseBusinessController
    {
        public ARClearingDetailsController()
        {
            dal = new DALBaseProvider("ARClearingDetails", typeof(ARClearingDetailsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARClearingDetailsInfo> clearingDetails = new List<ARClearingDetailsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARClearingDetailsInfo objClearingDetailsInfo = (ARClearingDetailsInfo)GetObjectFromDataRow(row);
                    clearingDetails.Add(objClearingDetailsInfo);
                }
            }
            ds.Dispose();
            return clearingDetails;
        }

        public List<ARClearingDetailsInfo> GetClearingDetailBySaleOrderID(int saleOrderID)
        {
            List<ARClearingDetailsInfo> clearingDetails = new List<ARClearingDetailsInfo>();
            DataSet ds = this.GetAllDataByForeignColumn("FK_ARSaleOrderID", saleOrderID);
            return (List<ARClearingDetailsInfo>)GetListFromDataSet(ds);
        }
        public List<ARClearingDetailsInfo> GetClearingDetailFromARInvoiceID(int invoiceID)
        {
            DataSet ds = dal.GetDataSet("ARClearingDetails_GetClearingDetailFromARInvoiceID", invoiceID);
            return (List<ARClearingDetailsInfo>)GetListFromDataSet(ds);
        }

        public List<ARClearingDetailsInfo> GetClearingDetailsForSaleOrders(int aCObjectID, String ARObjectType, int projectID)
        {
            DataSet ds = dal.GetDataSet("ARClearingDetails_GetClearingDetailsForSaleOrders", aCObjectID, ARObjectType, projectID);
            return (List<ARClearingDetailsInfo>)GetListFromDataSet(ds);
        }

        public List<ARClearingDetailsInfo> GetReceiptVoucherForInvoiceClearing(int invoiceID, bool isSameSO, int branchID)
        {
            DataSet ds = dal.GetDataSet("ARClearingDetails_GetReceiptVoucherForInvoiceClearing", invoiceID, isSameSO, branchID);
            return (List<ARClearingDetailsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}