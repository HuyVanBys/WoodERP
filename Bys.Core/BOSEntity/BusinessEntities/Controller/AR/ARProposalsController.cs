using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARProposals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARProposalsController
    //Created Date:Sunday, March 23, 2008
    //-----------------------------------------------------------

    public class ARProposalsController : BaseBusinessController
    {
        public ARProposalsController()
        {
            dal = new DALBaseProvider("ARProposals", typeof(ARProposalsInfo));
        }

        /// <summary>
        /// Get the list of proposals based on some criteria
        /// </summary>
        /// <param name="customerID">Customer identifier</param>
        /// <param name="status">Proposal status</param>
        /// <param name="dateFrom">Date the result is searched from</param>
        /// <param name="dateTo">Date the result is searched to</param>
        /// <returns></returns>
        public DataSet GetProposalList(int? customerID,
                                        String status,
                                        DateTime? dateFrom,
                                        DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("ARProposals_GetProposalList", customerID, status, dateFrom, dateTo);
            return ds;
        }

        /// <summary>
        /// Get the proposal list for ordering
        /// </summary>
        /// <returns>List of proposals</returns>
        public List<ARProposalsInfo> GetProposalsForOrdering()
        {
            DataSet ds = dal.GetDataSet("ARProposals_GetProposalsForOrdering");
            List<ARProposalsInfo> proposalList = new List<ARProposalsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARProposalsInfo objProposalsInfo = (ARProposalsInfo)GetObjectFromDataRow(row);
                    proposalList.Add(objProposalsInfo);
                }
            }
            return proposalList;
        }

        public DataSet GetProposalListBySomeCriteria(string proposalNo,
                                                     string proposalName,
                                                     int? projectID,
                                                     int? employeeID,
                                                     DateTime? dateFrom,
                                                     DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("ARProposals_GetProposalListBySomeCriteria",
                                        proposalNo,
                                        proposalName,
                                        projectID,
                                        employeeID,
                                        dateFrom,
                                        dateTo);
            return ds;
        }

        public List<ARProposalsInfo> GetAllProposals()
        {
            List<ARProposalsInfo> proposalList = new List<ARProposalsInfo>();
            DataSet results = dal.GetAllObject();

            if (results.Tables.Count > 0)
            {
                foreach (DataRow row in results.Tables[0].Rows)
                {
                    ARProposalsInfo objEstimatesInfo = (ARProposalsInfo)GetObjectFromDataRow(row);
                    proposalList.Add(objEstimatesInfo);
                }
            }
            return proposalList;
        }

        public DataSet GetProposalDataSet(string proposalNo,
                                          int? fk_ACObjectID,
                                          string objectType,
                                          int? fk_HREmployeeID,
                                          DateTime proposalFromDate,
                                          DateTime proposalToDate,
                                          DateTime proposalDeliveryFromDate,
                                          DateTime proposalDeliveryToDate,
                                          DateTime proposalValidateFromDate,
                                          DateTime proposalValidateToDate)
        {
            DataSet ds = dal.GetDataSet("ARProposals_GetProposalDataSet",
                                                                    proposalNo,
                                                                    fk_ACObjectID,
                                                                    objectType,
                                                                    fk_HREmployeeID,
                                                                    proposalFromDate,
                                                                    proposalToDate,
                                                                    proposalDeliveryFromDate,
                                                                    proposalDeliveryToDate,
                                                                    proposalValidateFromDate,
                                                                    proposalValidateToDate);
            return ds;
        }

        public DataSet GetProposalByBranchID(string proposalNo,
                                          int? fk_ACObjectID,
                                          string objectType,
                                          int? fk_HREmployeeID,
                                          DateTime proposalFromDate,
                                          DateTime proposalToDate,
                                          DateTime proposalDeliveryFromDate,
                                          DateTime proposalDeliveryToDate,
                                          DateTime proposalValidateFromDate,
                                          DateTime proposalValidateToDate,
                                          int? productID,
                                          int? branchID)
        {
            return dal.GetDataSet("ARProposals_GetProposalListByBranchID",
                                                                    proposalNo,
                                                                    fk_ACObjectID,
                                                                    objectType,
                                                                    fk_HREmployeeID,
                                                                    proposalFromDate,
                                                                    proposalToDate,
                                                                    proposalDeliveryFromDate,
                                                                    proposalDeliveryToDate,
                                                                    proposalValidateFromDate,
                                                                    proposalValidateToDate,
                                                                    productID,
                                                                    branchID);
        }

        public DataSet GetProposalByListOfBranchID(string proposalNo,
                                                              int? fk_ACObjectID,
                                                              string objectType,
                                                              int? fk_HREmployeeID,
                                                              DateTime proposalFromDate,
                                                              DateTime proposalToDate,
                                                              DateTime proposalDeliveryFromDate,
                                                              DateTime proposalDeliveryToDate,
                                                              DateTime proposalValidateFromDate,
                                                              DateTime proposalValidateToDate,
                                                              int? productID,
                                                              List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetProposalByBranchID(proposalNo,
                                                      fk_ACObjectID,
                                                      objectType,
                                                      fk_HREmployeeID,
                                                      proposalFromDate,
                                                      proposalToDate,
                                                      proposalDeliveryFromDate,
                                                      proposalDeliveryToDate,
                                                      proposalValidateFromDate,
                                                      proposalValidateToDate,
                                                      productID,
                                                      ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public void UpdatePriceSheetReferenceObject(int proposalID, string currentUser)
        {
            dal.ExecuteStoredProcedure("ARProposals_UpdatePriceSheetReferenceObject", proposalID, currentUser);
        }

        public ARProposalsInfo GetProposalByIDForReport(int proposalID)
        {
            ARProposalsInfo objProposalInfo = new ARProposalsInfo();
            DataSet results = dal.GetDataSet("ARProposals_GetProposalByIDForReport", proposalID);
            if (results.Tables.Count > 0)
            {
                objProposalInfo = (ARProposalsInfo)GetObjectFromDataRow(results.Tables[0].Rows[0]);
            }
            return objProposalInfo;
        }

        public ARProposalsInfo GetDataSourceForRPProposalTV(int proposalID)
        {
            return (ARProposalsInfo)GetDataObject("ARProposals_GetDataSourceForRPProposalTV", proposalID);
        }
    }
    #endregion
}