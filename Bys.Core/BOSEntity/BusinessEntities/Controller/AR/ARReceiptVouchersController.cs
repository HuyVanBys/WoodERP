using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARReceiptVouchers
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARReceiptVouchersController
    //Created Date:Wednesday, June 29, 2011
    //-----------------------------------------------------------

    public class ARReceiptVouchersController : BaseBusinessController
    {
        public ARReceiptVouchersController()
        {
            dal = new DALBaseProvider("ARReceiptVouchers", typeof(ARReceiptVouchersInfo));
        }

        /// <summary>
        /// Get the list of receipt vouchers based on some criteria
        /// </summary>
        /// <param name="receiptVoucherNo">Receipt voucher no</param>
        /// <param name="objectID">Object id</param>
        /// <param name="receiptVoucherType">Recepipt voucher type</param>
        /// <param name="employeeID">Employee id</param>
        /// <param name="fromDate">Date the result will be filtered from</param>
        /// <param name="toDate">Date the result will be filtered to</param>
        /// <returns>List of receipt vouchers</returns>
        public DataSet GetReceiptVoucherList(
                                    string receiptVoucherNo,
                                    int? objectID,
                                    string objectType,
                                    string receiptVoucherType,
                                    int? employeeID,
                                    DateTime? fromDate,
                                    DateTime? toDate)
        {
            return dal.GetDataSet("ARReceiptVouchers_GetReceiptVoucherList",
                                receiptVoucherNo,
                                objectID,
                                objectType,
                                receiptVoucherType,
                                employeeID,
                                fromDate,
                                toDate);
        }

        /// <summary>
        /// Get a receipt voucher by its reference info
        /// </summary>
        /// <param name="reference">Reference info</param>
        /// <returns>Receipt voucher object</returns>
        public ARReceiptVouchersInfo GetReceiptVoucherByReference(string reference)
        {
            return (ARReceiptVouchersInfo)dal.GetDataObject("ARReceiptVouchers_GetReceiptVoucherByReference", reference);
        }

        /// <summary>
        /// Get receipt vouchers for transferring
        /// </summary>
        /// <returns>List of transferred receipt vouchers</returns>
        public List<ARReceiptVouchersInfo> GetReceiptVouchersForTransferring()
        {
            DataSet ds = dal.GetDataSet("ARReceiptVouchers_GetReceiptVouchersForTransferring");
            return (List<ARReceiptVouchersInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get receipt vouchers for broadcasting to a branch
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <returns>List of broadcasted receipt vouchers</returns>
        public List<ARReceiptVouchersInfo> GetReceiptVouchersForBroadcasting(int branchID)
        {
            DataSet ds = dal.GetDataSet("ARReceiptVouchers_GetReceiptVouchersForBroadcasting", branchID);
            return (List<ARReceiptVouchersInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get Segments for report
        /// </summary>
        /// <param name="segmentID"></param>
        /// <param name="objectID"></param>
        /// <returns></returns>
        //NUThao [EDIT] [10/16/2014] [DB centre] [Report Permission], START
        //public List<ARReceiptVouchersInfo> GetSegmentsForReport(int segmentID, int objectID)
        //{
        //    DataSet ds = dal.GetDataSet("ARReceiptVouchers_GetSegmentsForReport", segmentID, objectID);
        public List<ARReceiptVouchersInfo> GetSegmentsForReport(int segmentID, int objectID, int branchID)
        {
            DataSet ds = dal.GetDataSet("ARReceiptVouchers_GetSegmentsForReport", segmentID, objectID, branchID);
            //NUThao [EDIT] [10/16/2014] [DB centre] [Report Permission], END

            List<ARReceiptVouchersInfo> objReceiptVouchers = new List<ARReceiptVouchersInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARReceiptVouchersInfo objARReceiptVouchersInfo = (ARReceiptVouchersInfo)GetObjectFromDataRow(row);
                    objReceiptVouchers.Add(objARReceiptVouchersInfo);
                }
            }

            return objReceiptVouchers;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARReceiptVouchersInfo> receiptVouchers = new List<ARReceiptVouchersInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARReceiptVouchersInfo receiptVoucher = (ARReceiptVouchersInfo)GetObjectFromDataRow(row);
                    receiptVouchers.Add(receiptVoucher);
                }
            }
            ds.Dispose();
            return receiptVouchers;
        }

        public DataSet GetReceiptVoucherListDatasetByListOfBranchID(
                                                            string receiptVoucherNo,
                                                            int? objectID,
                                                            string objectType,
                                                            string receiptVoucherType,
                                                            int? employeeID,
                                                            DateTime? fromDate,
                                                            DateTime? toDate,
                                                            List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetReceiptVoucherListDataset(receiptVoucherNo,
                                                            objectID,
                                                            objectType,
                                                            receiptVoucherType,
                                                            employeeID,
                                                            fromDate,
                                                            toDate,
                                                            ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetReceiptVoucherListDataset(
                                    string receiptVoucherNo,
                                    int? objectID,
                                    string objectType,
                                    string receiptVoucherType,
                                    int? employeeID,
                                    DateTime? fromDate,
                                    DateTime? toDate,
                                    int? branchID)
        {
            return dal.GetDataSet("ARReceiptVouchers_GetReceiptVoucherListDataset",
                                receiptVoucherNo,
                                objectID,
                                objectType,
                                receiptVoucherType,
                                employeeID,
                                fromDate,
                                toDate,
                                branchID);
        }
    }
    #endregion
}