using BOSLib;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace BOSERP
{
    #region ARContainerLoaderItemDetails
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARContainerLoaderItemDetailsController
    //Created Date:Wednesday, November 02, 2016
    //-----------------------------------------------------------

    public class ARContainerLoaderItemDetailsController : BaseBusinessController
    {
        public ARContainerLoaderItemDetailsController()
        {
            dal = new DALBaseProvider("ARContainerLoaderItemDetails", typeof(ARContainerLoaderItemDetailsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARContainerLoaderItemDetailsInfo> ContainerLoaderItemDetailList = new List<ARContainerLoaderItemDetailsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARContainerLoaderItemDetailsInfo objContainerLoaderItemDetailsInfo = (ARContainerLoaderItemDetailsInfo)GetObjectFromDataRow(row);
                    ContainerLoaderItemDetailList.Add(objContainerLoaderItemDetailsInfo);
                }
            }
            ds.Dispose();
            return ContainerLoaderItemDetailList;
        }
        public DataSet GetContainerLoaderItemDetailByContainerLoader(int containerLoaderID)
        {
            DataSet ds = dal.GetDataSet("ARContainerLoaderItemDetails_GetContainerLoaderItemDetailByContainerLoader", containerLoaderID);
            return ds;
        }
        public List<ARContainerLoaderItemDetailsInfo> GetByContainerLoaderID(int containerLoaderID)
        {
            DataSet ds = dal.GetDataSet("ARContainerLoaderItemDetails_GetByContainerLoaderID", containerLoaderID);
            List<ARContainerLoaderItemDetailsInfo> ContainerLoaderItemDetailList = new List<ARContainerLoaderItemDetailsInfo>();
            if (ds.Tables.Count > 0)
            {
                int recordNumber = 0;
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    List<ARContainerLoaderItemDetailsInfo> checkList = new List<ARContainerLoaderItemDetailsInfo>();
                    ARContainerLoaderItemDetailsInfo objContainerLoaderItemDetailsInfo = (ARContainerLoaderItemDetailsInfo)GetObjectFromDataRow(row);
                    if (objContainerLoaderItemDetailsInfo != null && ContainerLoaderItemDetailList.Count > 0)
                    {
                        checkList = ContainerLoaderItemDetailList.Where(c => c.FK_ARContainerLoaderItemID == objContainerLoaderItemDetailsInfo.FK_ARContainerLoaderItemID).ToList();
                    }
                    if (checkList.Count > 0)
                    {
                        objContainerLoaderItemDetailsInfo.ICProductNo = string.Empty;
                        //objContainerLoaderItemDetailsInfo.ARContainerLoaderItemDetailProductQty = 0;
                        //objContainerLoaderItemDetailsInfo.ARContainerLoaderItemDetailTotalCMB = 0;
                        //objContainerLoaderItemDetailsInfo.ARContainerLoaderItemDetailTotalGrossWeight = 0;
                        objContainerLoaderItemDetailsInfo.ICProductPicture = null;
                        objContainerLoaderItemDetailsInfo.ARSaleOrderNo = string.Empty;
                        objContainerLoaderItemDetailsInfo.ARSaleOrderItemProductQty = 0;
                        objContainerLoaderItemDetailsInfo.ARContainerLoaderItemTotalBlock = 0;
                        ContainerLoaderItemDetailList.Add(objContainerLoaderItemDetailsInfo);
                    }
                    else
                    {
                        recordNumber++;
                        objContainerLoaderItemDetailsInfo.RecordNumber = recordNumber;
                        ContainerLoaderItemDetailList.Add(objContainerLoaderItemDetailsInfo);

                    }
                }
            }
            ds.Dispose();
            return ContainerLoaderItemDetailList;
        }
        public DataSet GetByContainerLoaderReturndataset(int containerLoaderID)
        {
            DataSet ds = dal.GetDataSet("ARContainerLoaderItemDetails_GetByContainerLoaderID", containerLoaderID);
            return ds;
        }
    }
    #endregion
}