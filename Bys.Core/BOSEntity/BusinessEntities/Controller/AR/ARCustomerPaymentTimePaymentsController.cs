using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARCustomerPaymentTimePayments
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARCustomerPaymentTimePaymentsController
    //Created Date:Wednesday, July 22, 2015
    //-----------------------------------------------------------

    public class ARCustomerPaymentTimePaymentsController : BaseBusinessController
    {
        public ARCustomerPaymentTimePaymentsController()
        {
            dal = new DALBaseProvider("ARCustomerPaymentTimePayments", typeof(ARCustomerPaymentTimePaymentsInfo));
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetDocumentsForCustomerPayment()
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_GetDocumentsForCustomerPayment");
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }
        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimePaymentsForCustomerPayment()
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_GetCustomerPaymentTimePaymentsForCustomerPayment");
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimePaymentsFromPaymentProposalItems()
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_GetCustomerPaymentTimePaymentsFromPaymentProposalItems");
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARCustomerPaymentTimePaymentsInfo> invoices = new List<ARCustomerPaymentTimePaymentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARCustomerPaymentTimePaymentsInfo objInvoicesInfo = (ARCustomerPaymentTimePaymentsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoices;
        }

        public int GetCountInvoice(int invoiceID)
        {
            Object obj = dal.GetSingleValue("ARCustomerPaymentTimePayments_GetCountInvoice", invoiceID);
            int Debt = 0;
            if (obj != null)
                int.TryParse(obj.ToString(), out Debt);

            return Debt;
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimePaymentsByPaymentProposalID(int paymentProposalID)
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_GetARCustomerPaymentTimePaymentsByPaymentProposalID", paymentProposalID);
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimePaymentsByCustomerPaymentID(int customerPaymentID)
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_ByCustomerPaymentID", customerPaymentID);
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimeBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARPaymentTimePayments_GetPaymentTimeBySaleOrderID", saleOrderID);
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }
        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimeForPrintMutiAcceptanceReport(string acceptanceID)
        {
            DataSet ds = dal.GetDataSet("ARPaymentTimePayments_GetCustomerPaymentTimeForPrintMutiAcceptance", acceptanceID);
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public List<ARCustomerPaymentTimePaymentsInfo> GetCustomerPaymentTimePaymentsForPaymentNoneProposal(int branchID)
        {
            DataSet ds = dal.GetDataSet("ARCustomerPaymentTimePayments_GetCustomerPaymentTimePaymentsForPayment", branchID);
            return (List<ARCustomerPaymentTimePaymentsInfo>)GetListFromDataSet(ds);
        }

        public void UpdateReferPaymentDataByCustomerPayment(int customerPaymentID, bool isRollBack)
        {
            dal.ExecuteStoredProcedure("ARCustomerPaymentTimePayments_UpdateReferPaymentDataByCustomerPayment", customerPaymentID, isRollBack);
        }
    }
    #endregion
}