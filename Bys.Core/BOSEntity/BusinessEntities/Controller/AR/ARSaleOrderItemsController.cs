using BOSCommon;
using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;

namespace BOSERP
{
    #region ARSaleOrderItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARSaleOrderItemsController
    //Created Date:Wednesday, March 26, 2008
    //-----------------------------------------------------------

    public class ARSaleOrderItemsController : BaseBusinessController
    {
        public ARSaleOrderItemsController()
        {
            dal = new DALBaseProvider("ARSaleOrderItems", typeof(ARSaleOrderItemsInfo));
        }

        /// <summary>
        /// Get sale order item list including the item's components of a sale order
        /// </summary>
        /// <param name="saleOrderID">Sale order id</param>
        /// <returns>List of sale order items</returns>
        public List<ARSaleOrderItemsInfo> GetComponentItemsBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetComponentItemsBySaleOrderID", saleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }

        /// <summary>
        /// Delete all items and their relative data of a sale order
        /// </summary>
        /// <param name="saleOrderID">Sale order id</param>
        public void DeleteBySaleOrderID(int saleOrderID)
        {
            dal.ExecuteStoredProcedure("ARSaleOrderItems_DeleteBySaleOrderID", saleOrderID);
        }

        /// <summary>
        /// Update the shipped quantity of an item
        /// </summary>
        /// <param name="saleOrderItemID">Item ID</param>
        /// <param name="shippedQty">Updated shipped quantity</param>
        public void UpdateShippedQty(int saleOrderItemID, decimal shippedQty)
        {
            dal.ExecuteStoredProcedure("ARSaleOrderItems_UpdateShippedQty", saleOrderItemID, shippedQty);
        }


        public ARSaleOrderItemsInfo GetSaleOrderItemBySaleForecastItemID(int saleForecastItemID)
        {
            return (ARSaleOrderItemsInfo)dal.GetDataObject("ARSaleOrderItems_GetSaleOrderItemBySaleForecastItemID", saleForecastItemID);
        }

        /// <summary>
        /// Get all items of a sale order
        /// </summary>
        /// <param name="saleOrderID">Sale order id</param>
        /// <returns>List of items</returns>
        public List<ARSaleOrderItemsInfo> GetItemsBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetItemsBySaleOrderID", saleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrder_ItemsForBatchProduct()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsForBatchProduct");
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            ds.Dispose();
            return saleOrderItems;
        }
        public DataSet GetAllDataBySaleOrderID(int SaleOrderID)
        {
            return dal.GetDataSet("ARSaleOrderItems_GetAllDataBySaleOrderID", SaleOrderID);
        }

        public List<ARSaleOrderItemsInfo> GetSaleOrderItemsForBatchProposal()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsForBatchProposal");
            List<ARSaleOrderItemsInfo> SaleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    SaleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return SaleOrderItems;
        }

        public List<ARSaleOrderItemsInfo> GetSaleOrderItemBySaleOrderID(int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemBySaleOrderID", SaleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }


        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForCancelVoucherBySaleOrderID(int SaleOrderID, int saleOrderItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForCancelVoucherBySaleOrderID", SaleOrderID, saleOrderItemID);
            List<ARSaleOrderItemsInfo> SaleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    if (objSaleOrderItemsInfo.ARSaleOrderItemRemainedQty > 0)
                    {
                        SaleOrderItems.Add(objSaleOrderItemsInfo);
                    }
                }
            }
            return SaleOrderItems;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForCheckingCancelVoucherValidQty(int saleOrderItemID, int cancelVoucherItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForCheckingCancelVoucherValidQty", saleOrderItemID, cancelVoucherItemID);
            List<ARSaleOrderItemsInfo> SaleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    SaleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return SaleOrderItems;
        }

        public ARSaleOrderItemsInfo GetItemForCheckingShipmentProposalValidQty(int saleOrderItemID, int shipmentProposalItemID)
        {
            return (ARSaleOrderItemsInfo)dal.GetDataObject("ARSaleOrderItems_GetItemForCheckingShipmentProposalValidQty", saleOrderItemID, shipmentProposalItemID);
        }

        public List<ARSaleOrderItemsInfo> GetItemForInvoice(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetItemForInvoice", saleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrdersInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderList.Add(objSaleOrdersInfo);
                }
            }
            return saleOrderList;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemByNotinInvoice()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemByNotinInvoice");
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrdersInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderList.Add(objSaleOrdersInfo);
                }
            }
            return saleOrderList;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForCheckingAdjustSaleOrderValidQty(int saleOrderItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForCheckingAdjustSaleOrderValidQty", saleOrderItemID);
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrdersInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderList.Add(objSaleOrdersInfo);
                }
            }
            return saleOrderList;
        }

        public List<ARSaleOrderItemsInfo> GetSaleOrderItemAndBatchProductForReport(DateTime FromDate, DateTime ToDate, int CustomerID, int SaleOrderID, int BatchProductID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemAndBatchProductForReport", FromDate, ToDate, CustomerID, SaleOrderID, BatchProductID);
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderList.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderList;
        }
        public List<ARSaleOrderItemsInfo> GetItemForReport143(DateTime FromDate, DateTime ToDate, int BatchProductID, int CustomerID, int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetItemForReport143", FromDate, ToDate, BatchProductID, CustomerID, SaleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderList.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderList;
        }

        public List<ARSaleOrderItemsInfo> GetListItemForContainerLoader()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetListItemForContainerLoader");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForCheckingRemainSaleOrderItemValidQty(int saleOrderItemID, int containerLoaderItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsForCheckingRemainSaleOrderValidQty", saleOrderItemID, containerLoaderItemID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetAllitemBySaleOrderID(int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllDataBySaleOrderID", SaleOrderID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get all approved proposal items by user's permission
        /// </summary>
        /// <returns>Proposal item list</returns>
        public List<ARSaleOrderItemsInfo> GetAllSaleOrderItemsByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllSaleOrderItemsByUserPermission", userID, moduleName, dataViewPermissionType);
            List<ARSaleOrderItemsInfo> saleOrderItemList = new List<ARSaleOrderItemsInfo>();
            ARSaleOrderItemsController objSaleOrderItemController = new ARSaleOrderItemsController();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)objSaleOrderItemController.GetObjectFromDataRow(dr);
                    if (objSaleOrderItemsInfo != null)
                    {
                        objSaleOrderItemsInfo.ARSaleOrderItemProductQty -= (objSaleOrderItemsInfo.ARSaleOrderItemPOIQty + objSaleOrderItemsInfo.APPurchaseOrderItemProductQty);

                        if (objSaleOrderItemsInfo.ICProductType == ProductType.IngredientPaint.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.Roundwood.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.Reuse.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.Lumber.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.ArtificialBoard.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.Verneer.ToString() ||
                                            objSaleOrderItemsInfo.ICProductType == ProductType.ArtificialBoard.ToString())
                        {
                            objSaleOrderItemsInfo.ARSaleOrderItemProductQty = Math.Round(objSaleOrderItemsInfo.ARSaleOrderItemProductQty, 4, MidpointRounding.AwayFromZero);
                        }
                        else
                        {
                            objSaleOrderItemsInfo.ARSaleOrderItemProductQty = Math.Round(objSaleOrderItemsInfo.ARSaleOrderItemProductQty, 2, MidpointRounding.AwayFromZero);
                        }

                    }
                    saleOrderItemList.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItemList;
        }
        public List<ARSaleOrderItemsInfo> GetListItemForProductionPlanning(DateTime fromDate, DateTime toDate, int userID, string moduleName, string dataViewPermissionType, int branchID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetListItemForProductionPlanning", fromDate, toDate, userID, moduleName, dataViewPermissionType, branchID);
            List<ARSaleOrderItemsInfo> saleOrderList = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(ARSaleOrderItemsInfo));
                    objSaleOrderItemsInfo.ARSaleOrderItemProductionPlanningRemainedQty = objSaleOrderItemsInfo.ARSaleOrderItemRemainedQty;
                    saleOrderList.Add(objSaleOrderItemsInfo);
                }
            }
            ds.Dispose();
            return saleOrderList;
        }
        public List<ARSaleOrderItemsInfo> GetSOItemsListByListID(string ItemListID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSOItemsListByListID", ItemListID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForDeliveryPlansByUserPermission(int userID
                                                                                            , string moduleName
                                                                                            , string dataViewPermissionType
                                                                                            , DateTime? saleOrderDeliveryDateFrom
                                                                                            , DateTime? saleOrderDeliveryDateTo
                                                                                            , int? saleOrderID
                                                                                            , int? customerID
                                                                                            , string saleOrderSaleAgreement
                                                                                            , int? deliveryPlanID
                                                                                            , string deliveryPlanAddNewType)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForDeliveryPlansByUserPermission", userID
                                                                                                           , moduleName
                                                                                                           , dataViewPermissionType
                                                                                                           , saleOrderDeliveryDateFrom
                                                                                                           , saleOrderDeliveryDateTo
                                                                                                           , saleOrderID
                                                                                                           , customerID
                                                                                                           , saleOrderSaleAgreement
                                                                                                           , deliveryPlanID
                                                                                                           , deliveryPlanAddNewType);
            List<ARSaleOrderItemsInfo> saleOrderItemList = new List<ARSaleOrderItemsInfo>();
            ARSaleOrderItemsController objSaleOrderItemController = new ARSaleOrderItemsController();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)objSaleOrderItemController.GetObjectFromDataRow(dr);
                    saleOrderItemList.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItemList;
        }

        //public List<ARSaleOrderItemsInfo> GetSaleOrderItemForPurchaseProposal()
        //{
        //    DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForPurchaseProposal");
        //    List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
        //    if (ds.Tables.Count > 0)
        //    {
        //        foreach (DataRow row in ds.Tables[0].Rows)
        //        {
        //            ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
        //            saleOrderItems.Add(objSaleOrderItemsInfo);
        //        }
        //    }
        //    return saleOrderItems;
        //}
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForPurchaseProposal(DateTime? saleOrderDeliveryDateFrom
                                                                                            , DateTime? saleOrderDeliveryDateTo
                                                                                            , int? saleOrderID
                                                                                            , int? customerID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForPurchaseProposal", saleOrderDeliveryDateFrom
                                                                                                           , saleOrderDeliveryDateTo
                                                                                                           , saleOrderID
                                                                                                           , customerID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            ARSaleOrderItemsController objSaleOrderItemController = new ARSaleOrderItemsController();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)objSaleOrderItemController.GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }

        public List<ARSaleOrderItemsInfo> GetItemsByProductionSaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetItemsByProductionSaleOrderID", saleOrderID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }
        public List<ARSaleOrderItemsInfo> GetRemainQtyBySOItemListAndProductionPlanningID(int productionPlanningID, string soItemListID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetRemainQtyBySOItemListAndProductionPlanningID", productionPlanningID, soItemListID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            ds.Dispose();
            return saleOrderItems;
        }
        public List<ARSaleOrderItemsInfo> GetShipmentProposalByListSOItemID(int ShipmentProposalID, string soItemListID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetShipmentProposalByListSOItemID", ShipmentProposalID, soItemListID);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(ARSaleOrderItemsInfo));
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            ds.Dispose();
            return saleOrderItems;
        }

        public List<ARSaleOrderItemsInfo> GetBatchProductRemainQtyBySomeCriteria(int? customerID, int? saleOrderID, DateTime? deliveryFromDate, DateTime? deliveryToDate)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetBatchProductRemainQtyBySomeCriteria", customerID, saleOrderID, deliveryFromDate, deliveryToDate);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(ARSaleOrderItemsInfo));
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            ds.Dispose();
            return saleOrderItems;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemForAcceptancesByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemForAcceptancesByUserPermission", userID, moduleName, dataViewPermissionType);
            List<ARSaleOrderItemsInfo> saleOrderItemList = new List<ARSaleOrderItemsInfo>();
            ARSaleOrderItemsController objSaleOrderItemController = new ARSaleOrderItemsController();
            if (ds != null && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)objSaleOrderItemController.GetObjectFromDataRow(dr);
                    saleOrderItemList.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItemList;
        }

        public ARSaleOrderItemsInfo GetSaleOrderProductQtyAllowToProposal(int saleOrderItemsID, int proposalItemID)
        {
            return (ARSaleOrderItemsInfo)dal.GetDataObject("ARSaleOrderItems_GetSaleOrderProductQtyAllowToProposal", saleOrderItemsID, proposalItemID);
        }

        /// <summary>
        /// Get the sale order list for canceling
        /// </summary>
        /// <returns>List of sale orders</returns>
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemsForCancelingByUserPermission(int userID
                                                                                        , string moduleName
                                                                                        , string dataViewPermissionType
                                                                                        , int saleOrderID
                                                                                        , int acObjectID
                                                                                        , string acObjectType
                                                                                        , string saleOrderProductType
                                                                                        , string saleOrderSaleAgreement
                                                                                        , DateTime? fromDate
                                                                                        , DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsForCancelingByUserPermission", userID
                                                                                                        , moduleName
                                                                                                        , dataViewPermissionType
                                                                                                        , saleOrderID
                                                                                                        , acObjectID
                                                                                                        , acObjectType
                                                                                                        , saleOrderProductType
                                                                                                        , saleOrderSaleAgreement
                                                                                                        , fromDate
                                                                                                        , toDate);
            List<ARSaleOrderItemsInfo> saleOrderItems = new List<ARSaleOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }

        public List<ARSaleOrderItemsInfo> GetSaleOrderItemsListForLookupEdit(int productID, string acObjectAccessKey)
        {
            ACObjectsController objObjectsController = new ACObjectsController();
            ACObjectsInfo objObjectsInfo = objObjectsController.GetObjectByAccessKey(acObjectAccessKey);
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsListForLookupEdit", productID, objObjectsInfo.ACObjectID, objObjectsInfo.ACObjectType);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARSaleOrderItemsInfo> GetAllSaleOrderItemsForLookupEdit()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllSaleOrderItemsForLookupEdit");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public ARSaleOrderItemsInfo GetSaleOrderItemBySaleOrderItemID(int saleOrderItemsID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemBySaleOrderItemID", saleOrderItemsID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo obj = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    return obj;
                }
            }
            return null;
        }

        public List<ARSaleOrderItemsInfo> GetARSaleOrderItemsFromTransferProposal(int objectID, string objectType, DateTime? fromDate, DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetARSaleOrderItemsFromTransferProposal", objectID, objectType, fromDate, toDate);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public ARSaleOrderItemsInfo GetSaleOrderNoFromSaleOrderItemID(int saleOrderItemsID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderNoFromSaleOrderItemID", saleOrderItemsID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo obj = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    return obj;
                }
            }
            return null;
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemsForRPHandoverProducts(int saleOrdersID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsForRPHandoverProducts", saleOrdersID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARSaleOrderItemsInfo> GetAllHardwareItemBySaleOrderID(int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllHardwareItemBySaleOrderID", SaleOrderID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARSaleOrderItemsInfo> GetDataSourceForRPSaleOrderTV(int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetDataSourceForRPSaleOrderTV", SaleOrderID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARSaleOrderItemsInfo> GetSaleOrderItemStatusByID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemStatusByID", saleOrderID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARSaleOrderItemsInfo> GeSaleOrderItemsForShipmentSaleOrder()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GeSaleOrderItemsForShipmentSaleOrder");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetSaleOrderItemsService(int saleOderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetSaleOrderItemsService", saleOderID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetAllSaleOrderItemsService()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllSaleOrderItemsService");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetAllInvoiceAndShipment()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetAllInvoiceAndShipment");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetListForContainerLoader()
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetListForContainerLoader");
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<ARSaleOrderItemsInfo> GetItemByViewHitorySF(DateTime datefrom, DateTime dateto, int customerID, int productGroupID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetItemByViewHitorySF", datefrom, dateto, customerID, productGroupID);
            return (List<ARSaleOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public ARSaleOrderItemsInfo GetObjectForCheckValidQuantyInProductionPlanning(int saleOrderItemID, int productionPlanningItemID, int productID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetObjectForCheckValidQuantyInProductionPlanning", saleOrderItemID, productionPlanningItemID, productID);
            ARSaleOrderItemsInfo objSaleOrderItemsInfo = new ARSaleOrderItemsInfo();
            if (ds != null && ds.Tables.Count > 0)
            {
                objSaleOrderItemsInfo = (ARSaleOrderItemsInfo)dal.GetSingleObject(ds.Tables[0]);
            }
            return objSaleOrderItemsInfo;
        }
        public ARSaleOrderItemsInfo GetPlanSaleOrderItemBySaleOrderItemID(int saleOrderItemsID, int deliveryPlanItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetPlanSaleOrderItemBySaleOrderItemID", saleOrderItemsID, deliveryPlanItemID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo obj = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    return obj;
                }
            }
            return null;
        }
        public ARSaleOrderItemsInfo GetPlanedBySaleOrderItemID(int saleOrderItemsID, int planItemID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderItems_GetPlanedBySaleOrderItemID", saleOrderItemsID, planItemID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo obj = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    return obj;
                }
            }
            return null;
        }
        public ARSaleOrderItemsInfo GetRemainSaleOrderItemQtyByShipmentItemID(int shipmentID, int saleOrderItemID)
        {
            DataSet ds = dal.GetDataSet("ARDeliveryPlanItems_GetRemainSaleOrderItemQtyByShipmentItemID", shipmentID, saleOrderItemID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleOrderItemsInfo obj = (ARSaleOrderItemsInfo)GetObjectFromDataRow(row);
                    return obj;
                }
            }
            return null;
        }
    }
    #endregion
}