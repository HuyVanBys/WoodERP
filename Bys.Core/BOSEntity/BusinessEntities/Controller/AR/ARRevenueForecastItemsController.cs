using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using BOSLib;


namespace BOSERP
{
	#region ARRevenueForecastItems
	//-----------------------------------------------------------
	//Generated By: BOS Studio
	//Class:ARRevenueForecastItemsController
	//Created Date:26/03/2024 12:00:00 AM
	//-----------------------------------------------------------

	public class ARRevenueForecastItemsController : BaseBusinessController
	{
		public ARRevenueForecastItemsController()
		{
			dal = new DALBaseProvider("ARRevenueForecastItems", typeof(ARRevenueForecastItemsInfo));
		}

		public override System.Collections.IList GetListFromDataSet(DataSet ds)
		{
			List<ARRevenueForecastItemsInfo> items = new List<ARRevenueForecastItemsInfo>();
			if (ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					ARRevenueForecastItemsInfo item = (ARRevenueForecastItemsInfo)GetObjectFromDataRow(row);
					items.Add(item);
				}
			}
			return items;
		}
		public List<ARRevenueForecastItemsInfo> GetRevenueByCustomer(int year, int customerID, string customerType, int employeeID, bool isDiscount, int revenueForecastID)
        {
			DataSet ds = dal.GetDataSet("ARRevenueForecastItems_GetRevenueByCustomer", year, customerID, customerType, employeeID, isDiscount, revenueForecastID);
			return (List<ARRevenueForecastItemsInfo>)GetListFromDataSet(ds);
        }
		public ARRevenueForecastItemsInfo GetRealityRevenueByCustomer(int customerID, bool checkDiscount)
        {
			DataSet ds = dal.GetDataSet("ARRevenueForecastItems_GetRealityRevenueByCustomer",  customerID, checkDiscount);
			if (ds != null && ds.Tables.Count > 0)
			{
				foreach (DataRow row in ds.Tables[0].Rows)
				{
					ARRevenueForecastItemsInfo item = (ARRevenueForecastItemsInfo)GetObjectFromDataRow(row);
					return item;
				}
			}
			return null;
		}
		public DataSet GetRevenueForecastItemsByRevenueForecastID(int revenueForecastID)
        {
			return dal.GetDataSet("ARRevenueForecastItems_GetRevenueForecastItemsByRevenueForecastID", revenueForecastID);
		}
	}
	#endregion
}