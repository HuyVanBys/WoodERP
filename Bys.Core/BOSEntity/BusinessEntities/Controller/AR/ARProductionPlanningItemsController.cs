using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARProductionPlanningItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARProductionPlanningItemsController
    //Created Date:Tuesday, February 21, 2017
    //-----------------------------------------------------------

    public class ARProductionPlanningItemsController : BaseBusinessController
    {
        public ARProductionPlanningItemsController()
        {
            dal = new DALBaseProvider("ARProductionPlanningItems", typeof(ARProductionPlanningItemsInfo));
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARProductionPlanningItemsInfo> productionPlanningItemList = new List<ARProductionPlanningItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARProductionPlanningItemsInfo objProductionPlanningItemsInfo = (ARProductionPlanningItemsInfo)GetObjectFromDataRow(row);
                    productionPlanningItemList.Add(objProductionPlanningItemsInfo);
                }
            }
            ds.Dispose();
            return productionPlanningItemList;
        }
        /// <summary>
        /// GetProductionPlanning item reamin parent(ProductionPlanningID)
        /// </summary>
        /// <returns>List of ProductionPlanning items</returns>
        public List<ARProductionPlanningItemsInfo> GetProductionPlanningItemRemainByParent(int productionPlanningID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemRemainByParent", productionPlanningID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetListItemForContainerLoader()
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetListItemForContainerLoader");
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetProductionPlanningItemsByProductionPlanningID(int productionPlanningID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemsByProductionPlanningID", productionPlanningID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetProductionPlanningItemsBySaleOrderID(int SaleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemsBySaleOrderID", SaleOrderID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetProductionPlanningItemsForBatchProduct(int planingID
                                                                                             , int saleOrderID
                                                                                             , int objectID
                                                                                             , string objectType
                                                                                             , DateTime fromDate
                                                                                             , DateTime toDate
                                                                                             , int userID
                                                                                             , string moduleName
                                                                                             , string dataViewPermissionType
                                                                                             , int branchID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemsForBatchProduct", planingID, saleOrderID, objectID, objectType, fromDate, toDate, userID, moduleName, dataViewPermissionType, branchID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetItemForClosePlanByProductionPlanningID(int productionPlanningID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetItemForClosePlanByProductionPlanningID", productionPlanningID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARProductionPlanningItemsInfo> GetProductionPlanningItemListByProductionPlanningID(int productionPlanningID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemListByProductionPlanningID", productionPlanningID);
            return (List<ARProductionPlanningItemsInfo>)GetListFromDataSet(ds);
        }
        public DataSet GetProductionPlanningItemListDataSetByProductionPlanningID(int productionPlanningID)
        {
            DataSet ds = dal.GetDataSet("ARProductionPlanningItems_GetProductionPlanningItemListDataSetByProductionPlanningID", productionPlanningID);
            return ds;
        }
    }
    #endregion
}