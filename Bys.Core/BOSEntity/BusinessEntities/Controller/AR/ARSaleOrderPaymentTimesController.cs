using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARSaleOrderPaymentTimes
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARSaleOrderPaymentTimesController
    //Created Date:Tuesday, April 07, 2015
    //-----------------------------------------------------------

    public class ARSaleOrderPaymentTimesController : BaseBusinessController
    {
        public ARSaleOrderPaymentTimesController()
        {
            dal = new DALBaseProvider("ARSaleOrderPaymentTimes", typeof(ARSaleOrderPaymentTimesInfo));
        }

        public List<ARSaleOrderPaymentTimesInfo> GetItemsBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderPaymentTimes_GetItemsBySaleOrderID", saleOrderID);
            List<ARSaleOrderPaymentTimesInfo> saleOrderItems = new List<ARSaleOrderPaymentTimesInfo>();
            ARSaleOrderPaymentTimesInfo objSaleOrderItemsInfo;
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    objSaleOrderItemsInfo = (ARSaleOrderPaymentTimesInfo)GetObjectFromDataRow(row);
                    saleOrderItems.Add(objSaleOrderItemsInfo);
                }
            }
            return saleOrderItems;
        }

        public List<ARSaleOrderPaymentTimesInfo> GetSaleOrderPaymentTimesForInvoicingByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderPaymentTimes_GetSaleOrderrPaymentTimesForInvoicingByUserPermission", userID, moduleName, dataViewPermissionType);
            List<ARSaleOrderPaymentTimesInfo> purchaseOrderPaymentList = new List<ARSaleOrderPaymentTimesInfo>();
            ARSaleOrderPaymentTimesInfo obj;
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    obj = (ARSaleOrderPaymentTimesInfo)GetObjectFromDataRow(row);
                    purchaseOrderPaymentList.Add(obj);
                }
            }
            return purchaseOrderPaymentList;
        }

        public decimal GetPercentDepositPerOneInvoice(int saleOrderID)
        {
            Object obj = dal.GetSingleValue("ARSaleOrderPaymentTimes_GetPercentDepositPerOneInvoice", saleOrderID);
            decimal Debt = 0;
            if (obj != null)
                decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }

        public List<ARSaleOrderPaymentTimesInfo> GetListPaymentTimeBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARSaleOrderPaymentTimes_GetListPaymentTimeBySaleOrderID", saleOrderID);
            List<ARSaleOrderPaymentTimesInfo> purchaseOrderPaymentList = new List<ARSaleOrderPaymentTimesInfo>();
            ARSaleOrderPaymentTimesInfo obj;
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    obj = (ARSaleOrderPaymentTimesInfo)GetObjectFromDataRow(row);
                    purchaseOrderPaymentList.Add(obj);
                }
            }
            return purchaseOrderPaymentList;
        }

        public void UpdateSaleOrderPaymentTimesByCancelVoucherID(int cancelVoucherID)
        {
            dal.ExecuteStoredProcedure("ARSaleOrderPaymentTimes_UpdateSaleOrderPaymentTimesByCancelVoucherID", cancelVoucherID);
        }
    }
    #endregion
}