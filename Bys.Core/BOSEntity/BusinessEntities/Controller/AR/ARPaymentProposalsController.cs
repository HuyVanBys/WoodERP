using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARPaymentProposals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARPaymentProposalsController
    //Created Date:Friday, May 4, 2018
    //-----------------------------------------------------------

    public class ARPaymentProposalsController : BaseBusinessController
    {
        public ARPaymentProposalsController()
        {
            dal = new DALBaseProvider("ARPaymentProposals", typeof(ARPaymentProposalsInfo));

        }

        public DataSet GetPaymentProposalsBySomeCriteria(
                                                    string paymentProposalNo,
                                                    int? employeeID,
                                                    string paymentProposalType,
                                                    int departmentID,
                                                    int? objectID,
                                                    string objectType,
                                                    string paymentProposalStatus,
                                                    string priority,
                                                    DateTime? fromDate,
                                                    DateTime? toDate)
        {
            DataSet ds = dal.GetDataSet("ARPaymentProposals_GetPaymentProposalsBySomeCriteria",
                                                    paymentProposalNo,
                                                    employeeID,
                                                    paymentProposalType,
                                                    departmentID,
                                                    objectID,
                                                    objectType,
                                                    paymentProposalStatus,
                                                    priority,
                                                    fromDate,
                                                    toDate);
            return ds;
        }

        public List<ARPaymentProposalsInfo> GetPaymentProposalBySaleOrderID(int saleOrderID)
        {
            List<ARPaymentProposalsInfo> invoices = new List<ARPaymentProposalsInfo>();
            DataSet ds = dal.GetDataSet("ARPaymentProposals_GetPaymentProposalBySaleOrderID", saleOrderID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARPaymentProposalsInfo objInvoicesInfo = (ARPaymentProposalsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            return invoices;
        }

        public List<ARPaymentProposalsInfo> GetPaymentProposalByInvoiceID(int invoiceID)
        {
            List<ARPaymentProposalsInfo> invoices = new List<ARPaymentProposalsInfo>();
            DataSet ds = dal.GetDataSet("ARPaymentProposals_GetPaymentProposalByInvoiceID", invoiceID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARPaymentProposalsInfo objInvoicesInfo = (ARPaymentProposalsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            return invoices;
        }

        public DataSet GetPaymentProposalsByBranchID(string paymentProposalNo,
                                                    int? employeeID,
                                                    string paymentProposalType,
                                                    int departmentID,
                                                    int? objectID,
                                                    string objectType,
                                                    string paymentProposalStatus,
                                                    string priority,
                                                    DateTime? fromDate,
                                                    DateTime? toDate,
                                                    int branchID)
        {
            return dal.GetDataSet("ARPaymentProposals_GetPaymentProposalsByBranchID", paymentProposalNo,
                                                    employeeID,
                                                    paymentProposalType,
                                                    departmentID,
                                                    objectID,
                                                    objectType,
                                                    paymentProposalStatus,
                                                    priority,
                                                    fromDate,
                                                    toDate,
                                                    branchID);
        }

        public DataSet GetPaymentProposalsByListOfBranchID(string paymentProposalNo,
                                                    int? employeeID,
                                                    string paymentProposalType,
                                                    int departmentID,
                                                    int? objectID,
                                                    string objectType,
                                                    string paymentProposalStatus,
                                                    string priority,
                                                    DateTime? fromDate,
                                                    DateTime? toDate,
                                                    List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetPaymentProposalsByBranchID(paymentProposalNo,
                                                    employeeID,
                                                    paymentProposalType,
                                                    departmentID,
                                                    objectID,
                                                    objectType,
                                                    paymentProposalStatus,
                                                    priority,
                                                    fromDate,
                                                    toDate,
                                                    ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

    }
    #endregion
}