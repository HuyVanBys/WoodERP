using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARDocumentPayments
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARDocumentPaymentsController
    //Created Date:Monday, June 09, 2008
    //-----------------------------------------------------------

    public class ARDocumentPaymentsController : BaseBusinessController
    {
        public ARDocumentPaymentsController()
        {
            dal = new DALBaseProvider("ARDocumentPayments", typeof(ARDocumentPaymentsInfo));
        }

        /// <summary>
        /// Get all document payments of an invoice
        /// </summary>
        /// <param name="invoiceID">Invoice id</param>
        /// <returns>List of document payments</returns>
        public List<ARDocumentPaymentsInfo> GetDocumentPaymentsByInvoiceID(int? invoiceID)
        {
            DataSet ds = dal.GetDataSet("ARDocumentPayments_GetDocumentPaymentsByInvoiceID", invoiceID);
            List<ARDocumentPaymentsInfo> documentPayments = new List<ARDocumentPaymentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARDocumentPaymentsInfo objDocumentPaymentsInfo = (ARDocumentPaymentsInfo)GetObjectFromDataRow(row);
                    documentPayments.Add(objDocumentPaymentsInfo);
                }
            }
            return documentPayments;
        }

        /// <summary>
        /// Get all payments of a sale order
        /// </summary>
        /// <param name="saleOrderNo">Sale order no</param>
        /// <returns>List of payments</returns>
        public List<ARDocumentPaymentsInfo> GetDocumentPaymentsBySaleOrderNo(string saleOrderNo)
        {
            ARCustomerPaymentsController customerPaymentController = new ARCustomerPaymentsController();
            DataSet ds = dal.GetDataSet("ARDocumentPayments_GetDocumentPaymentsBySaleOrderNo", saleOrderNo);
            List<ARDocumentPaymentsInfo> payments = new List<ARDocumentPaymentsInfo>();
            foreach (DataRow row in ds.Tables[0].Rows)
            {
                ARDocumentPaymentsInfo objDocumentPaymentsInfo = (ARDocumentPaymentsInfo)GetObjectFromDataRow(row);
                objDocumentPaymentsInfo.TransferedDepositAmount = customerPaymentController.GetTransferedDepositAmountByASpecifiedDeposit(objDocumentPaymentsInfo.ARCustomerPaymentNo);
                objDocumentPaymentsInfo.AROpenDocumentBalanceDue = objDocumentPaymentsInfo.ARDocumentPaymentAmount - objDocumentPaymentsInfo.TransferedDepositAmount;
                payments.Add(objDocumentPaymentsInfo);
            }
            return payments;
        }

        /// <summary>
        /// Get all payments of a sale forecast
        /// </summary>
        /// <param name="saleOrderNo">Sale forecast no</param>
        /// <returns>List of payments</returns>
        public List<ARDocumentPaymentsInfo> GetDocumentPaymentsBySaleForecastNo(string saleForecastNo)
        {
            ARCustomerPaymentsController customerPaymentController = new ARCustomerPaymentsController();
            DataSet ds = dal.GetDataSet("ARDocumentPayments_GetDocumentPaymentsBySaleForecastNo", saleForecastNo);
            List<ARDocumentPaymentsInfo> payments = new List<ARDocumentPaymentsInfo>();
            foreach (DataRow row in ds.Tables[0].Rows)
            {
                ARDocumentPaymentsInfo objDocumentPaymentsInfo = (ARDocumentPaymentsInfo)GetObjectFromDataRow(row);
                objDocumentPaymentsInfo.TransferedDepositAmount = customerPaymentController.GetTransferedDepositAmountByASpecifiedDeposit(objDocumentPaymentsInfo.ARCustomerPaymentNo);
                objDocumentPaymentsInfo.AROpenDocumentBalanceDue = objDocumentPaymentsInfo.ARDocumentPaymentAmount - objDocumentPaymentsInfo.TransferedDepositAmount;
                payments.Add(objDocumentPaymentsInfo);
            }
            return payments;
        }

        /// <summary>
        /// Get all document payments for open documents of a customer payment
        /// </summary>
        /// <param name="customerPaymentID">Customer payment id</param>
        /// <returns>List of document payments</returns>
        public List<ARDocumentPaymentsInfo> GetDocumentPaymentsByCustomerPaymentID(int customerPaymentID)
        {
            DataSet ds = dal.GetDataSet("ARDocumentPayments_GetDocumentPaymentsByCustomerPaymentID", customerPaymentID);
            List<ARDocumentPaymentsInfo> documentPayments = new List<ARDocumentPaymentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARDocumentPaymentsInfo objDocumentPaymentsInfo = (ARDocumentPaymentsInfo)GetObjectFromDataRow(row);
                    documentPayments.Add(objDocumentPaymentsInfo);
                }
            }
            return documentPayments;
        }
    }
    #endregion
}