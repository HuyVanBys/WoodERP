using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARSaleReturnItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARSaleReturnItemsController
    //Created Date:Thursday, April 01, 2010
    //-----------------------------------------------------------

    public class ARSaleReturnItemsController : BaseBusinessController
    {
        public ARSaleReturnItemsController()
        {
            dal = new DALBaseProvider("ARSaleReturnItems", typeof(ARSaleReturnItemsInfo));
        }

        /// <summary>
        /// Get sale return item list including the item's components of an sale return
        /// </summary>
        /// <param name="saleOrderID">Sale return id</param>
        /// <returns>List of sale return items</returns>
        public List<ARSaleReturnItemsInfo> GetComponentItemsBySaleReturnID(int saleReturnID)
        {
            DataSet ds = dal.GetDataSet("ARSaleReturnItems_GetComponentItemsBySaleReturnID", saleReturnID);
            List<ARSaleReturnItemsInfo> saleReturnItems = new List<ARSaleReturnItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleReturnItemsInfo objSaleReturnItemsInfo = (ARSaleReturnItemsInfo)GetObjectFromDataRow(row);
                    saleReturnItems.Add(objSaleReturnItemsInfo);
                }
            }
            ds.Dispose();
            return saleReturnItems;
        }

        /// <summary>
        /// Get all items of a sale return
        /// </summary>
        /// <param name="saleReturnID">Sale return id</param>
        /// <returns>List of items</returns>
        public List<ARSaleReturnItemsInfo> GetItemsBySaleReturnID(int saleReturnID)
        {
            DataSet ds = dal.GetDataSet("ARSaleReturnItems_GetItemsBySaleReturnID", saleReturnID);
            List<ARSaleReturnItemsInfo> saleReturnItems = new List<ARSaleReturnItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleReturnItemsInfo objSaleReturnItemsInfo = (ARSaleReturnItemsInfo)GetObjectFromDataRow(row);
                    saleReturnItems.Add(objSaleReturnItemsInfo);
                }
            }
            ds.Dispose();
            return saleReturnItems;
        }

        public List<ARSaleReturnItemsInfo> GetSaleReturnItemsByInvoiceItemID(int invoiceItemID)
        {
            DataSet ds = dal.GetAllDataByForeignColumn("FK_ARInvoiceItemID", invoiceItemID);
            List<ARSaleReturnItemsInfo> saleReturnItems = new List<ARSaleReturnItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleReturnItemsInfo objSaleReturnItemsInfo = (ARSaleReturnItemsInfo)GetObjectFromDataRow(row);
                    saleReturnItems.Add(objSaleReturnItemsInfo);
                }
            }
            return saleReturnItems;
        }

        public List<ARSaleReturnItemsInfo> GetSaleReturnItemForDeliveryPlansByUserPermission(int userID
                                                                                            , string moduleName
                                                                                            , string dataViewPermissionType
                                                                                            , DateTime? saleOrderDeliveryDateFrom
                                                                                            , DateTime? saleOrderDeliveryDateTo
                                                                                            , int? saleReturnID
                                                                                            , int? customerID
                                                                                             )
        {
            DataSet ds = dal.GetDataSet("ARSaleReturnItems_GetSaleReturnItemForDeliveryPlansByUserPermission", userID
                                                                                                           , moduleName
                                                                                                           , dataViewPermissionType
                                                                                                           , saleOrderDeliveryDateFrom
                                                                                                           , saleOrderDeliveryDateTo
                                                                                                           , saleReturnID
                                                                                                           , customerID
                                                                                                            );
            List<ARSaleReturnItemsInfo> saleOrderItemList = new List<ARSaleReturnItemsInfo>();
            ARSaleReturnItemsController objSaleReturnItemsController = new ARSaleReturnItemsController();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    ARSaleReturnItemsInfo objSaleReturnItemsInfo = (ARSaleReturnItemsInfo)objSaleReturnItemsController.GetObjectFromDataRow(dr);
                    saleOrderItemList.Add(objSaleReturnItemsInfo);
                }
            }
            return saleOrderItemList;
        }

        public List<ARSaleReturnItemsInfo> GetInvalidSerialNoSaleReturnItem(int saleReturnID)
        {
            DataSet ds = dal.GetDataSet("ARSaleReturnItems_GetInvalidSerialNoSaleReturnItem", saleReturnID);
            return (List<ARSaleReturnItemsInfo>)GetListFromDataSet(ds);
        }
        public void UpdateDefualtSerialByObject(int saleReturnID)
        {
            dal.ExecuteStoredProcedure("ARSaleReturnItems_UpdateDefualtSerialByObject", saleReturnID);
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARSaleReturnItemsInfo> saleReturnItems = new List<ARSaleReturnItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARSaleReturnItemsInfo objSaleReturnItemsInfo = (ARSaleReturnItemsInfo)GetObjectFromDataRow(row);
                    saleReturnItems.Add(objSaleReturnItemsInfo);
                }
            }
            ds.Dispose();
            return saleReturnItems;
        }

        public List<ARSaleReturnItemsInfo> GetItemForInvalidProductUnitCost(int saleReturnID)
        {
            DataSet ds = dal.GetDataSet("ARSaleReturnItems_GetItemForInvalidProductUnitCost", saleReturnID);            
            return (List<ARSaleReturnItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}