using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARCalculateDiscountItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARCalculateDiscountItemsController
    //Created Date:Friday, July 26, 2019
    //-----------------------------------------------------------

    public class ARCalculateDiscountItemsController : BaseBusinessController
    {
        public ARCalculateDiscountItemsController()
        {
            dal = new DALBaseProvider("ARCalculateDiscountItems", typeof(ARCalculateDiscountItemsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARCalculateDiscountItemsInfo> calculateDiscountItemsList = new List<ARCalculateDiscountItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARCalculateDiscountItemsInfo objCalculateDiscountItemsInfo = (ARCalculateDiscountItemsInfo)GetObjectFromDataRow(row);
                    calculateDiscountItemsList.Add(objCalculateDiscountItemsInfo);
                }
            }
            ds.Dispose();
            return calculateDiscountItemsList;
        }

        public List<ARCalculateDiscountItemsInfo> GetItemByCalculateDiscountID(int calculateDiscountID)
        {
            DataSet ds = dal.GetDataSet("ARCalculateDiscountItems_GetItemByCalculateDiscountID", calculateDiscountID);
            return (List<ARCalculateDiscountItemsInfo>)GetListFromDataSet(ds);
        }

        public List<ARCalculateDiscountItemsInfo> GetSalesByDistributionChannel(int discountProgramID, string calculateDiscountType, int distributionChannelID, int objectID, string objectType)
        {
            DataSet ds = dal.GetDataSet("ARCalculateDiscountItems_GetSalesByDistributionChannel", discountProgramID, calculateDiscountType, distributionChannelID, objectID, objectType);
            return (List<ARCalculateDiscountItemsInfo>)GetListFromDataSet(ds);
        }

        //public List<ARCalculateDiscountItemsInfo> UpdateCalculationDiscount(int discountProgramID, string calculateDiscountType, int distributionChannelID, int objectID, string objectType)
        //{
        //    DataSet ds = dal.GetDataSet("ARCalculateDiscountItems_UpdateCalculationDiscount", discountProgramID, calculateDiscountType, distributionChannelID, objectID, objectType);
        //    return (List<ARCalculateDiscountItemsInfo>)GetListFromDataSet(ds);
        //}
    }
    #endregion
}