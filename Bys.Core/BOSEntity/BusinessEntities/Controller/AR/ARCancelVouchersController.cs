using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ARCancelVouchers
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ARCancelVouchersController
    //Created Date:Friday, August 26, 2011
    //-----------------------------------------------------------

    public class ARCancelVouchersController : BaseBusinessController
    {
        public ARCancelVouchersController()
        {
            dal = new DALBaseProvider("ARCancelVouchers", typeof(ARCancelVouchersInfo));
        }

        /// <summary>
        /// Get cancel vouchers for transferring
        /// </summary>
        /// <returns>List of transferred cancel vouchers</returns>
        public List<ARCancelVouchersInfo> GetCancelVouchersForTransferring()
        {
            DataSet ds = dal.GetDataSet("ARCancelVouchers_GetCancelVouchersForTransferring");
            List<ARCancelVouchersInfo> cancelVouchers = new List<ARCancelVouchersInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARCancelVouchersInfo objCancelVouchersInfo = (ARCancelVouchersInfo)GetObjectFromDataRow(row);
                    cancelVouchers.Add(objCancelVouchersInfo);
                }
            }
            return cancelVouchers;
        }

        /// <summary>
        /// Get cancel voucher list based on some criteria
        /// </summary>
        /// <param name="cancelVoucherNo">Cancel voucher no</param>
        /// <param name="saleOrderNo">Sale order no</param>
        /// <param name="customerID">Customer id</param>
        /// <param name="employeeID">Employee id</param>
        /// <param name="fromDate">Date the result will be filtered from</param>
        /// <param name="toDate">Date the result will be filtered to</param>
        /// <returns>List of cancel vouchers</returns>
        public DataSet GetCancelVoucherList(string cancelVoucherNo, string saleOrderNo, int? customerID, int? employeeID, DateTime? fromDate, DateTime? toDate)
        {
            return dal.GetDataSet("ARCancelVouchers_GetCancelVoucherList", cancelVoucherNo, saleOrderNo, customerID, employeeID, fromDate, toDate);
        }

        /// <summary>
        /// Get cancel vouchers for broadcasting to a branch
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <returns>List of broadcasted cancel vouchers</returns>
        public List<ARCancelVouchersInfo> GetCancelVouchersForBroadcasting(int branchID)
        {
            DataSet ds = dal.GetDataSet("ARCancelVouchers_GetCancelVouchersForBroadcasting", branchID);
            return (List<ARCancelVouchersInfo>)GetListFromDataSet(ds);
        }

        public List<ARCancelVouchersInfo> GetCancelVoucherListBySaleOrderID(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARCancelVouchers_GetCancelVoucherListBySaleOrderID", saleOrderID);
            return (List<ARCancelVouchersInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<ARCancelVouchersInfo> cancelVouchers = new List<ARCancelVouchersInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ARCancelVouchersInfo objCancelVouchersInfo = (ARCancelVouchersInfo)GetObjectFromDataRow(row);
                    cancelVouchers.Add(objCancelVouchersInfo);
                }
            }
            ds.Dispose();
            return cancelVouchers;
        }

        public DataSet GetCancelVoucherListDatasetByListOfBranchID(string cancelVoucherNo,
                                                                string saleOrderNo,
                                                                int? acObjectID,
                                                                string acObjectType,
                                                                int? employeeID,
                                                                DateTime? fromDate,
                                                                DateTime? toDate,
                                                                List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetCancelVoucherListDataset(cancelVoucherNo,
                                                        saleOrderNo,
                                                        acObjectID,
                                                        acObjectType,
                                                        employeeID,
                                                        fromDate,
                                                        toDate,
                                                        ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetCancelVoucherListDataset(string cancelVoucherNo, string saleOrderNo, int? acObjectID, string acObjectType, int? employeeID, DateTime? fromDate, DateTime? toDate, int brandID)
        {
            return dal.GetDataSet("ARCancelVouchers_GetCancelVoucherListDataset", cancelVoucherNo, saleOrderNo, acObjectID, acObjectType, employeeID, fromDate, toDate, brandID);
        }

        public List<ARCancelVouchersInfo> GetCancelVoucherBySaleOrderIDForCheckPaymentProposal(int saleOrderID)
        {
            DataSet ds = dal.GetDataSet("ARCancelVouchers_GetCancelVoucherBySaleOrderIDForCheckPaymentProposal", saleOrderID);
            return (List<ARCancelVouchersInfo>)GetListFromDataSet(ds);
        }

    }
    #endregion
}