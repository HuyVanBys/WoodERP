using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region ADOperationProductTypeConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ADOperationProductTypeConfigsController
    //Created Date:Thursday, April 04, 2019
    //-----------------------------------------------------------

    public class ADOperationProductTypeConfigsController : BaseBusinessController
    {
        public ADOperationProductTypeConfigsController()
        {
            dal = new DALBaseProvider("ADOperationProductTypeConfigs", typeof(ADOperationProductTypeConfigsInfo));
        }

        public List<ADOperationProductTypeConfigsInfo> GetAllAliveOperationProductTypeConfig()
        {
            List<ADOperationProductTypeConfigsInfo> invoices = new List<ADOperationProductTypeConfigsInfo>();
            DataSet ds = dal.GetDataSet("ADOperationProductTypeConfigs_GetAllAliveOperationProductTypeConfig");
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ADOperationProductTypeConfigsInfo objInvoicesInfo = (ADOperationProductTypeConfigsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoices;
        }

        public List<ADOperationProductTypeConfigsInfo> GetConfigByProductType(string productType)
        {
            List<ADOperationProductTypeConfigsInfo> invoices = new List<ADOperationProductTypeConfigsInfo>();
            DataSet ds = dal.GetDataSet("ADOperationProductTypeConfigs_GetConfigByProductType", productType);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ADOperationProductTypeConfigsInfo objInvoicesInfo = (ADOperationProductTypeConfigsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoices;
        }

        public List<ADOperationProductTypeConfigsInfo> GetConfigByOperation(int operationID)
        {
            List<ADOperationProductTypeConfigsInfo> invoices = new List<ADOperationProductTypeConfigsInfo>();
            DataSet ds = dal.GetDataSet("ADOperationProductTypeConfigs_GetConfigByOperation", operationID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ADOperationProductTypeConfigsInfo objInvoicesInfo = (ADOperationProductTypeConfigsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoicesInfo);
                }
            }
            ds.Dispose();
            return invoices;
        }


    }
    #endregion
}