using BOSLib;
using System.Collections.Generic;
using System.Data;
using Dapper;
using BOSLib.Extensions;
using System.Linq;

namespace BOSERP
{
    #region ADCompletePermissionConfigs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ADCompletePermissionConfigsController
    //Created Date:Friday, April 5, 2019
    //-----------------------------------------------------------

    public class ADCompletePermissionConfigsController : BaseBusinessController
    {
        public ADCompletePermissionConfigsController()
        {
            dal = new DALBaseProvider("ADCompletePermissionConfigs", typeof(ADCompletePermissionConfigsInfo));
        }

        public List<STModulesInfo> GetModuleForCompletePermissionConfig(string languageName)
        {
            DataSet ds = dal.GetDataSet("STModules_GetModuleForCompletePermissionConfig", languageName);
            STModulesController objModulesController = new STModulesController();
            List<STModulesInfo> moduleList = new List<STModulesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    STModulesInfo objModulesInfo = (STModulesInfo)objModulesController.GetObjectFromDataRow(row);
                    moduleList.Add(objModulesInfo);
                }
            }
            return moduleList;
        }

        public bool CheckCompletePermissionByUserGroupID(int userGroupID, string moduleName, string tableName, string strPrimaryColumn, int objectId)
        {
            DynamicParameters parameters = new DynamicParameters();
            parameters.Add("@UserGroupID", userGroupID, DbType.Int32);
            parameters.Add("@ModuleName", moduleName, DbType.String);
            parameters.Add("@TableName", tableName, DbType.String);
            parameters.Add("@PrimaryColumn", strPrimaryColumn, DbType.String);
            parameters.Add("@ObjectId", objectId, DbType.Int32);
            return dal.Connection.QueryFirstOrDefault<bool>("ADCompletePermissionConfigs_CheckCompletePermissionByUserGroupID", parameters, commandType: CommandType.StoredProcedure);
        }

        public bool CheckCompletePermission(int userGroupID, string moduleName, string documentType, decimal totalAmount)
        {
            return (bool)dal.GetSingleValue("ADCompletePermissionConfigs_CheckCompletePermission", userGroupID, moduleName, documentType, totalAmount);
        }
    }
    #endregion
}