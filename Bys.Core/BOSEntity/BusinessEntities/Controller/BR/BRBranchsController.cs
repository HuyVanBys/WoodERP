using BOSCommon;
using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region BRBranchs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:BRBranchsController
    //Created Date:Monday, June 16, 2008
    //-----------------------------------------------------------

    public class BRBranchsController : BaseBusinessController
    {
        public BRBranchsController()
        {
            dal = new DALBaseProvider("BRBranchs", typeof(BRBranchsInfo));
        }

        /// <summary>
        /// Get central branch
        /// </summary>
        /// <returns>Branch object</returns>
        public BRBranchsInfo GetCentre()
        {
            BRBranchsController objBranchesController = new BRBranchsController();
            List<BRBranchsInfo> branches = GetBranchesByType(BranchType.Central.ToString());
            if (branches.Count > 0)
            {
                return branches[0];
            }
            return null;
        }

        /// <summary>
        /// Get branches by given type
        /// </summary>
        /// <param name="type">Given type</param>
        /// <returns>List of branches</returns>
        public List<BRBranchsInfo> GetBranchesByType(string type)
        {
            DataSet ds = GetAllObjects();
            List<BRBranchsInfo> branches = new List<BRBranchsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    BRBranchsInfo objBranchsInfo = (BRBranchsInfo)GetObjectFromDataRow(row);
                    if (objBranchsInfo.BRBranchType == type)
                    {
                        branches.Add(objBranchsInfo);
                    }
                }
            }
            return branches;
        }

        /// <summary>
        /// Get the current branch
        /// </summary>
        /// <returns>Branch object</returns>
        public BRBranchsInfo GetCurrentBranch(int companyID)
        {
            return (BRBranchsInfo)dal.GetDataObject("BRBranchs_GetCurrentBranch", companyID);
        }

        /// <summary>
        /// Get all branches
        /// </summary>
        /// <returns>List of branches</returns>
        public List<BRBranchsInfo> GetAllBranches()
        {
            DataSet ds = GetAllObjects();
            return (List<BRBranchsInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get all branches belonging to a location
        /// </summary>
        /// <param name="locationID">Location id</param>
        /// <returns>List of branches</returns>
        public List<BRBranchsInfo> GetBranchesByLocationID(int locationID)
        {
            DataSet ds = dal.GetDataSet("BRBranchs_GetBranchesByLocationID", locationID);
            return (List<BRBranchsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<BRBranchsInfo> branches = new List<BRBranchsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    BRBranchsInfo branch = (BRBranchsInfo)GetObjectFromDataRow(row);
                    branches.Add(branch);
                }
            }
            ds.Dispose();
            return branches;
        }

        /// <summary>
        /// Get all branches belonging to a location
        /// </summary>
        /// <param name="locationID">Location id</param>
        /// <returns>List of branches</returns>
        public List<BRBranchsInfo> GetAllActiveBranches()
        {
            DataSet ds = dal.GetDataSet("BRBranchs_GetAllActiveBranches");
            return (List<BRBranchsInfo>)GetListFromDataSet(ds);
        }

        //NUThao [ADD] [10/16/2014] [DB centre] [Report Permission], START
        /// <summary>
        /// Get all branches belonging to a location
        /// </summary>
        /// <param name="locationID">Location id</param>
        /// <returns>List of branches</returns>
        public List<BRBranchsInfo> GetAllBranchesByUserPermission(int userID, string objectNo, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("BRBranchs_GetBranchesByUserIDAndObjectNoAndDataViewPermissionType", userID, objectNo, dataViewPermissionType);
            return (List<BRBranchsInfo>)GetListFromDataSet(ds);
        }
        //NUThao [ADD] [10/16/2014] [DB centre] [Report Permission], END

        public List<BRBranchsInfo> GetAllBranchByUserPermission(int userID, int branchID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("ADUsers_GetAllBranchByUserPermission", userID, branchID, moduleName, dataViewPermissionType);
            return (List<BRBranchsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}