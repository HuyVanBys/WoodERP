using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region APPurchaseOrderItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APPurchaseOrderItemsController
    //Created Date:Sunday, November 14, 2010
    //-----------------------------------------------------------

    public class APPurchaseOrderItemsController : BaseBusinessController
    {
        public APPurchaseOrderItemsController()
        {
            dal = new DALBaseProvider("APPurchaseOrderItems", typeof(APPurchaseOrderItemsInfo));
        }

        /// <summary>
        /// Get purchase order item list including the item's components of an purchase order
        /// </summary>
        /// <param name="purchaseOrderID">Purchase order id</param>
        /// <returns>List of purchase order items</returns>
        public List<APPurchaseOrderItemsInfo> GetComponentItemsByPurchaseOrderID(int purchaseOrderID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetComponentItemsByPurchaseOrderID", purchaseOrderID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }
        public DataSet GetAllDataByPurchaseOrderID(int PurchaseOrderID)
        {
            return dal.GetDataSet("APPurchaseOrderItems_GetAllDataByPurchaseOrderID", PurchaseOrderID);
        }
        public List<APPurchaseOrderItemsInfo> GetAllItemsByPurchaseOrderID(int purchaseOrderID)
        {
            DataSet ds = GetAllDataByPurchaseOrderID(purchaseOrderID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }
        /// <summary>
        /// Update the packaged quantity of an item
        /// </summary>
        /// <param name="purchaseOrderItemID">Item id</param>
        /// <param name="packagedQty">Updated packaged quantity</param>
        public void UpdatePackagedQty(int purchaseOrderItemID, decimal packagedQty)
        {
            dal.ExecuteStoredProcedure("APPurchaseOrderItems_UpdatePackagedQty", purchaseOrderItemID, packagedQty);
        }

        /// <summary>
        /// Update the receipted quantity of an item
        /// </summary>
        /// <param name="invoiceItemID">Item id</param>
        /// <param name="receiptedQty">Updated receipted quantity</param>
        public void UpdateReceiptedQty(int purchaseOrderItemID, decimal receiptedQty)
        {
            dal.ExecuteStoredProcedure("APPurchaseOrderItems_UpdateReceiptedQty", purchaseOrderItemID, receiptedQty);
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsForPurchaseReceipt()
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemsForPurchaseReceipt");
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsForPurchaseReceiptAndProductQty()
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemsForPurchaseReceiptAndProductQty");
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsForWoodPurchaseReceipt()
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemsForWoodPurchaseReceipt");
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }


        public List<APPurchaseOrderItemsInfo> GetOtherPurchaseItemListByPurchaseAndProposalItem(int purchaseOrderID, int ProposalItemID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetOtherPurchaseItemListByPurchaseAndProposalItem", purchaseOrderID, ProposalItemID);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }

        /// <summary>
        /// Get the purchase order list for invoicing
        /// </summary>
        /// <returns>List of purchase orders</returns>
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsByPurchaseOrderID(int purchaseOrderID)
        {
            DataSet ds = dal.GetAllDataByForeignColumn("FK_APPurchaseOrderID", purchaseOrderID);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }
        public List<APPurchaseOrderItemsInfo> GetListPurchaseOrderItemsByPurchaseOrderID(int purchaseOrderID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetListPurchaseOrderItemsByPurchaseOrderID", purchaseOrderID);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItemList;
        }
        //[NKVung]  [Discard Error Message]   [START]
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemByProposalIDAndPurchaseOrderStatus(int proposalID, string purchaseOrderStatus)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemByProposalIDAndPurchaseOrderStatus", proposalID, purchaseOrderStatus);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItems;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemByProposalItemIDAndPurchaseOrderStatus(int proposalItemID, string purchaseOrderStatus)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemByProposalItemIDAndPurchaseOrderStatus", proposalItemID, purchaseOrderStatus);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return PurchaseOrderItems;
        }
        //[NKVung]  [Discard Error Message]   [END]
        public List<APPurchaseOrderItemsInfo> GetAllDataByProposalID(int APProposalID)
        {
            DataSet ds = dal.GetAllDataByForeignColumn("FK_APProposalID", APProposalID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }

        public List<APPurchaseOrderItemsInfo> GetListItemForCancel()
        {

            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetListItemForCancel");
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }
        public List<APPurchaseOrderItemsInfo> GetListObjectByFK_APPurchaseOrderID(int FK_APPurchaseOrderID)
        {

            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetListObjectByFK_APPurchaseOrderID", FK_APPurchaseOrderID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemForCheckingCancelPurchaseValidQty(int FK_APPurchaseOrderItemID, int cancelPurchaseID)
        {

            DataSet ds = dal.GetDataSet("ARPurchaseOrderItems_GetPurchaseOrderItemForCheckingCancelPurchaseValidQty", FK_APPurchaseOrderItemID, cancelPurchaseID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemForCheckingReceiptValidQty(int FK_APPurchaseOrderItemID, int receiptItemID)
        {

            DataSet ds = dal.GetDataSet("ARPurchaseOrderItems_GetPurchaseOrderItemForCheckingReceiptValidQty", FK_APPurchaseOrderItemID, receiptItemID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }


        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemForCheckingRemainPurchaseValidQty(int FK_APPurchaseOrderItemID, int cancelPurchaseID)
        {

            DataSet ds = dal.GetDataSet("ARPurchaseOrderItems_GetPurchaseOrderItemForCheckingRemainPurchaseValidQty", FK_APPurchaseOrderItemID, cancelPurchaseID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }

        public decimal GetQuantityPerOnePurchaseOrder(int purchaseOrderID,
                                                        int productID,
                                                        int ICModelID,
                                                        int GECountryID,
                                                        int ICModelDetailID,
                                                        decimal APPurchaseOrderItemProductUnitCost,
                                                        string APPurchaseOrderItemComment,
                                                        int ICMeasureUnitID,
                                                        string APPurchaseOrderItemProductDesc)
        {
            Object obj = dal.GetSingleValue("ARPurchaseOrderItems_GetQuantityPerOnePurchaseOrder", purchaseOrderID,
                                                                                                    productID,
                                                                                                    ICModelID,
                                                                                                    GECountryID,
                                                                                                    ICModelDetailID,
                                                                                                    APPurchaseOrderItemProductUnitCost,
                                                                                                    APPurchaseOrderItemComment,
                                                                                                    ICMeasureUnitID,
                                                                                                    APPurchaseOrderItemProductDesc);
            decimal Debt = 0;
            if (obj != null)
                decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }
        public decimal GetQuantityPerOnePurchaseOrderOutSourcing(int purchaseOrderID,
                                                       int productID,
                                                        string APPurchaseOrderItemProductDesc,
                                                        decimal APPurchaseOrderItemProductLenght,
                                                        decimal APPurchaseOrderItemProductWidth,
                                                        decimal APPurchaseOrderItemProductHeight,
                                                        decimal APPurchaseOrderItemProductUnitCost,
                                                        string APPurchaseOrderItemComment,
                                                        int ICMeasureUnitID)
        {
            Object obj = dal.GetSingleValue("ARPurchaseOrderItems_GetQuantityPerOnePurchaseOrderOutSourcing", purchaseOrderID,
                                                                                                    productID,
                                                                                                    APPurchaseOrderItemProductDesc,
                                                                                                    APPurchaseOrderItemProductLenght,
                                                                                                    APPurchaseOrderItemProductWidth,
                                                                                                    APPurchaseOrderItemProductHeight,
                                                                                                    APPurchaseOrderItemProductUnitCost,
                                                                                                    APPurchaseOrderItemComment,
                                                                                                    ICMeasureUnitID);
            decimal Debt = 0;
            if (obj != null)
                decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }


        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemAndReceiptQty(int purchaseOrderID)
        {
            DataSet ds = dal.GetDataSet("ARPurchaseOrderItems_CheckCompletedPurchaseOrder", purchaseOrderID);
            List<APPurchaseOrderItemsInfo> purchaseOrderItems = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            return purchaseOrderItems;
        }

        public List<APPurchaseOrderItemsInfo> GetAllPurchaseOrderItemsForTransferOutsourcing()
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetAllPurchaseOrderItemsForTransferOutsourcing");
            return (List<APPurchaseOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APPurchaseOrderItemsInfo> proposals = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    proposals.Add(objPurchaseOrderItemsInfo);
                }
            }
            ds.Dispose();
            return proposals;
        }

        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsForOutsourcingReceipt()
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemsForOutsourcingReceipt");
            return (List<APPurchaseOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APPurchaseOrderItemsInfo> GetDataSourceForRPPurchaseOrderTV(int purchaseOrderID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetDataSourceForRPPurchaseOrderTV", purchaseOrderID);
            return (List<APPurchaseOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemByProposalID(int proposalID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemByProposalID", proposalID);
            return (List<APPurchaseOrderItemsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetPurchaseOrderItemRemainQty(int receiptItemID, int purchaseOrderItemID)
        {
            return (decimal)dal.GetSingleValue("APPurchaseOrderItems_GetPurchaseOrderItemRemainQty", receiptItemID, purchaseOrderItemID);
        }

        public List<APPurchaseOrderItemForViews> GetPurchaseOrderItemByPurchaseOrderNoList(string purchaseOrderNoList)
        {

            DataSet ds = dal.GetDataSet("PurchaseOrderItem_GetPurchaseOrderItemByPurchaseOrderNoList", purchaseOrderNoList);
            List<APPurchaseOrderItemForViews> purchaseOrderItems = new List<APPurchaseOrderItemForViews>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemForViews objPurchaseOrderItemsInfo = (APPurchaseOrderItemForViews)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(APPurchaseOrderItemForViews));
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            ds.Dispose();
            return purchaseOrderItems;
        }

        public List<APPurchaseOrderItemForViews> GetPurchaseOrderItemByPurchaseOrderOutsourcingNoList(string purchaseOrderNoList)
        {

            DataSet ds = dal.GetDataSet("PurchaseOrderItem_GetPurchaseOrderItemByPurchaseOrderOutsourcingNoList", purchaseOrderNoList);
            List<APPurchaseOrderItemForViews> purchaseOrderItems = new List<APPurchaseOrderItemForViews>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemForViews objPurchaseOrderItemsInfo = (APPurchaseOrderItemForViews)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(APPurchaseOrderItemForViews));
                    purchaseOrderItems.Add(objPurchaseOrderItemsInfo);
                }
            }
            ds.Dispose();
            return purchaseOrderItems;
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderItemsByListItemID(string listItemID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItems_GetPurchaseOrderItemsByListItemID", listItemID);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            ds.Dispose();
            return PurchaseOrderItemList;
        }
        public void UpdatePurchaseReceiptQty(int purchaseOrderItemID, decimal ReceiptQty)
        {
            dal.ExecuteStoredProcedure("APPurchaseOrderItems_UpdatePurchaseReceiptQty", purchaseOrderItemID, ReceiptQty);
        }
        public List<APPurchaseOrderItemsInfo> GetPurchaseOrderNosByProductIDs(List<int> productIDsList)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add(new DataColumn("Id", typeof(int)));

            foreach (int iD in productIDsList)
            {
                DataRow r = dt.NewRow();
                r["Id"] = iD;
                dt.Rows.Add(r);
            }
            DataSet ds = SqlDatabaseHelper.GetDataUsingStringType(dt, "Type_ObjectID", "APPurchaseOrderItems_GetPurchaseOrderNosByProductIDs");
            return (List<APPurchaseOrderItemsInfo>)GetListFromDataSet(ds);
        }
        public List<APPurchaseOrderItemsInfo> GetRemainPurchaseOrderItemForInvoiceIn(string purchaseOrderItemIDs, int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APPurchaseOrderItem_GetRemainPurchaseOrderItemForInvoiceIn", purchaseOrderItemIDs, invoiceInID);
            List<APPurchaseOrderItemsInfo> PurchaseOrderItemList = new List<APPurchaseOrderItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APPurchaseOrderItemsInfo objPurchaseOrderItemsInfo = (APPurchaseOrderItemsInfo)GetObjectFromDataRow(row);
                    PurchaseOrderItemList.Add(objPurchaseOrderItemsInfo);
                }
            }
            ds.Dispose();
            return PurchaseOrderItemList;
        }
    }
    #endregion
}