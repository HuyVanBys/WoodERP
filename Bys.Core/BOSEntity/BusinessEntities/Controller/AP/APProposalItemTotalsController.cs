using BOSCommon;
using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region APProposalItemTotals
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APProposalItemTotalsController
    //Created Date:28 February, 2018
    //-----------------------------------------------------------

    public class APProposalItemTotalsController : BaseBusinessController
    {
        public APProposalItemTotalsController()
        {
            dal = new DALBaseProvider("APProposalItemTotals", typeof(APProposalItemTotalsInfo));
        }

        public List<APProposalItemTotalsInfo> GetAllAPProposalItemTotalsByUserPermissionAndProductType(int userID, string moduleName, string dataViewPermissionType, string productType)
        {
            DataSet ds = dal.GetDataSet("APProposalItemTotals_GetAllAPProposalItemTotalsByUserPermissionAndProductType", userID, moduleName, dataViewPermissionType, productType);
            APProposalItemTotalsController objProposalItemTotalsController = new APProposalItemTotalsController();
            List<APProposalItemTotalsInfo> proposalItemTotalList = new List<APProposalItemTotalsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    APProposalItemTotalsInfo objProposalItemTotalsInfo = (APProposalItemTotalsInfo)objProposalItemTotalsController.GetObjectFromDataRow(dr);
                    if (objProposalItemTotalsInfo != null)
                    {
                        objProposalItemTotalsInfo.APProposalItemTotalProductQty -= (objProposalItemTotalsInfo.APProposalItemTotalPurchaseOrderQty + objProposalItemTotalsInfo.APPurchaseOrderItemTotalProductQty);
                        objProposalItemTotalsInfo.APProposalItemTotalWoodQty -= (objProposalItemTotalsInfo.APProposalItemTotalPurchaseOrderWoodQty + objProposalItemTotalsInfo.APPurchaseOrderItemTotalWoodQty);

                        if (objProposalItemTotalsInfo.ICProductType == ProductType.IngredientPaint.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.Roundwood.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.Reuse.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.Lumber.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.ArtificialBoard.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.Verneer.ToString() ||
                                            objProposalItemTotalsInfo.ICProductType == ProductType.ArtificialBoard.ToString())
                        {
                            objProposalItemTotalsInfo.APProposalItemTotalProductQty = Math.Round(objProposalItemTotalsInfo.APProposalItemTotalProductQty, 4, MidpointRounding.AwayFromZero);
                        }
                        else
                        {
                            objProposalItemTotalsInfo.APProposalItemTotalProductQty = Math.Round(objProposalItemTotalsInfo.APProposalItemTotalProductQty, 2, MidpointRounding.AwayFromZero);
                        }

                    }
                    proposalItemTotalList.Add(objProposalItemTotalsInfo);
                }
            }
            ds.Dispose();
            return proposalItemTotalList;
        }

        public List<APProposalItemTotalsInfo> GetProposalItemTotalByAPProposalIDAndMMPurchasePlanIDAndICProductID(int APProposalID, int MMPurchasePlanID, int ICProductID)
        {
            DataSet ds = dal.GetDataSet("APProposalItemTotals_GetProposalItemTotalByAPProposalIDAndMMPurchasePlanIDAndICProductID", APProposalID, MMPurchasePlanID, ICProductID);
            return (List<APProposalItemTotalsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APProposalItemTotalsInfo> list = new List<APProposalItemTotalsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APProposalItemTotalsInfo obj = (APProposalItemTotalsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
    }
    #endregion
}