using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region APReturnSuppliers
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APReturnSuppliersController
    //Created Date:Sunday, March 14, 2010
    //-----------------------------------------------------------

    public class APReturnSuppliersController : BaseBusinessController
    {
        public APReturnSuppliersController()
        {
            dal = new DALBaseProvider("APReturnSuppliers", typeof(APReturnSuppliersInfo));
        }

        public DataSet GetSupplierReturnsByDateRange(DateTime from, DateTime to)
        {
            String strQuery = String.Format("SELECT * FROM [dbo].[APReturnSuppliers] WHERE CONVERT(VARCHAR(10),[APReturnSupplierDate],112)>= CONVERT(VARCHAR(10),'{0}',112) AND CONVERT(VARCHAR(10),[APReturnSupplierDate],112) <= CONVERT(VARCHAR(10),'{1}',112) AND [AAStatus]='{2}'", from.ToString("yyyyMMdd"), to.ToString("yyyyMMdd"), BusinessObject.DefaultAAStatus);
            return GetDataSet(strQuery);
        }

        /// <summary>
        /// Get the list of supplier returns based on some criteria
        /// </summary>
        /// <param name="supplierID">Supplier ID</param>
        /// <param name="dateFrom">Date which the result is searched from</param>
        /// <param name="dateTo">Date which the result is searched to</param>
        /// <returns>List of supplier returns</returns>
        public DataSet GetSupplierReturnList(int? supplierID, DateTime? dateFrom, DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("APReturnSuppliers_GetReturnList", supplierID, dateFrom, dateTo);
            return ds;
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APReturnSuppliersInfo> listReturnSuppliers = new List<APReturnSuppliersInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APReturnSuppliersInfo objlistReturnSuppliers = (APReturnSuppliersInfo)GetObjectFromDataRow(row);
                    listReturnSuppliers.Add(objlistReturnSuppliers);
                }
            }
            ds.Dispose();
            return listReturnSuppliers;
        }
        public List<APReturnSuppliersInfo> GetReturnSuppliersForReceiptVoucher(int? branchID)
        {
            DataSet ds = dal.GetDataSet("APReturnSuppliers_GetReturnSuppliersForReceiptVoucher", branchID);
            return (List<APReturnSuppliersInfo>)GetListFromDataSet(ds);
        }
        public DataSet GetReturnSupplierListDataSetByListOfBranchID(string ReturnSupplierNo,
                                                int? supplierID,
                                                int? branchID,
                                                int? employeeID,
                                                DateTime? dateFrom,
                                                DateTime? dateTo, List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            List<int> collections = new List<int>();
            int rowIndex = 0;
            DataRow row;
            DataRowCollection rows;
            bool isValid = true;
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetReturnSupplierListDataSet(ReturnSupplierNo, supplierID, ojbBranchsInfo.BRBranchID, employeeID, dateFrom, dateTo);
                if (ds != null && ds.Tables.Count != 0 && ds.Tables[0].Rows.Count != 0)
                {
                    rowIndex = 0;
                    rows = ds.Tables[0].Rows;
                    isValid = true;
                    while (isValid)
                    {
                        row = rows[rowIndex];
                        int id = row["APReturnSupplierID"] is DBNull ? -1 : Convert.ToInt32(row["APReturnSupplierID"].ToString());
                        if (id != -1 && !collections.Contains(id))
                        {
                            collections.Add(id);
                            rowIndex++;
                        }
                        else
                        {
                            rows.Remove(row);
                        }
                        if (rows.Count == 0 || rows.Count == rowIndex)
                            isValid = false;
                    }
                }
                rtn.Merge(ds);
            }
            if (rtn.Tables.Count != 0)
            {
                DataView dataView = rtn.Tables[0].DefaultView;
                dataView.Sort = "APReturnSupplierNo ASC";
            }
            return rtn;
        }
        public DataSet GetReturnSupplierListDataSet(string ReturnSupplierNo,
                                                int? supplierID,
                                                int? branchID,
                                                int? employeeID,
                                                DateTime? dateFrom,
                                                DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("APReturnSuppliers_GetReturnSuppliersDataset", ReturnSupplierNo, supplierID, branchID, employeeID, dateFrom, dateTo);
            return ds;
        }
    }
    #endregion
}