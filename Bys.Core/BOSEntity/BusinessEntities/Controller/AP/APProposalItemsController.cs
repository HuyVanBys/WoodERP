using BOSCommon;
using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;

namespace BOSERP
{
    #region APProposalItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APProposalItemsController
    //Created Date:Friday, September 16, 2011
    //-----------------------------------------------------------

    public class APProposalItemsController : BaseBusinessController
    {
        public APProposalItemsController()
        {
            dal = new DALBaseProvider("APProposalItems", typeof(APProposalItemsInfo));
        }

        /// <summary>
        /// Get all proposal item 
        /// </summary>
        /// <returns></returns>
        public DataSet GetAllProposalItem()
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllProposalItem");
            return ds;
        }

        /// <summary>
        /// Get all proposal item by user's permission
        /// </summary>
        /// <returns></returns>
        public DataSet GetAllProposalItemByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllProposalItemByUserPermission", userID, moduleName, dataViewPermissionType);
            return ds;
        }


        /// <summary>
        /// Get all approved proposal items
        /// </summary>
        /// <returns>Proposal item list</returns>
        public List<APProposalItemsInfo> GetAllApprovedProposalItems()
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllApprovedProposalItems");
            APProposalItemsController objProposalItemsController = new APProposalItemsController();
            List<APProposalItemsInfo> proposalItemList = new List<APProposalItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    APProposalItemsInfo objProposalItemsInfo = (APProposalItemsInfo)objProposalItemsController.GetObjectFromDataRow(dr);
                    if (objProposalItemsInfo != null)
                    {
                        if (objProposalItemsInfo.APPurchaseProposalType != PurchaseProposalType.OutSourcing.ToString())
                        {
                            objProposalItemsInfo.APPurchaseProposalTypeVN = "Khác";
                        }
                    }
                    proposalItemList.Add(objProposalItemsInfo);
                }
            }
            return proposalItemList;
        }

        /// <summary>
        /// Get all approved proposal items by user's permission
        /// </summary>
        /// <returns>Proposal item list</returns>
        public List<APProposalItemsInfo> GetAllApprovedProposalItemsByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllApprovedProposalItemsByUserPermission", userID, moduleName, dataViewPermissionType);
            APProposalItemsController objProposalItemsController = new APProposalItemsController();
            List<APProposalItemsInfo> proposalItemList = new List<APProposalItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    APProposalItemsInfo objProposalItemsInfo = (APProposalItemsInfo)objProposalItemsController.GetObjectFromDataRow(dr);
                    if (objProposalItemsInfo != null)
                    {
                        if (objProposalItemsInfo.APPurchaseProposalType != PurchaseProposalType.OutSourcing.ToString())
                        {
                            objProposalItemsInfo.APPurchaseProposalTypeVN = "Khác";
                        }

                        objProposalItemsInfo.APProposalItemProductQty -= (objProposalItemsInfo.APProposalItemPurchaseOrderQty + objProposalItemsInfo.APPurchaseOrderItemProductQty);
                        objProposalItemsInfo.APProposalItemWoodQty -= (objProposalItemsInfo.APProposalItemPurchaseOrderWoodQty + objProposalItemsInfo.APPurchaseOrderItemWoodQty);

                        if (objProposalItemsInfo.ICProductType == ProductType.IngredientPaint.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.Roundwood.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.Reuse.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.Lumber.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.ArtificialBoard.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.Verneer.ToString() ||
                                            objProposalItemsInfo.ICProductType == ProductType.ArtificialBoard.ToString())
                        {
                            objProposalItemsInfo.APProposalItemProductQty = Math.Round(objProposalItemsInfo.APProposalItemProductQty, 4, MidpointRounding.AwayFromZero);
                        }
                        else
                        {
                            objProposalItemsInfo.APProposalItemProductQty = Math.Round(objProposalItemsInfo.APProposalItemProductQty, 2, MidpointRounding.AwayFromZero);
                        }
                    }
                    proposalItemList.Add(objProposalItemsInfo);
                }
            }
            return proposalItemList;
        }

        /// <summary>
        /// Get all proposal item by supplier id and branch id
        /// </summary>
        /// <param name="supplierID"></param>
        /// <param name="branchID"></param>
        /// <returns></returns>
        public DataSet GetAllProposalItemBySupplierIDAndBranchID(int branchID, int supplierID)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllProposalItemBySupplierIDAndBranchID", branchID, supplierID);
            return ds;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APProposalItemsInfo> list = new List<APProposalItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APProposalItemsInfo obj = (APProposalItemsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }

        public List<APProposalItemsInfo> GetProposalItemsForCheckingRemainPurchaseValidQty(int proposalItemID, int purchaseOrderItemID)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetProposalItemsForCheckingRemainPurchaseValidQty", proposalItemID, purchaseOrderItemID);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APProposalItemsInfo> GetActiveProposalItemByUserPermission(int userID, string moduleName, string dataViewPermissionType)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetActiveProposalItemByUserPermission", userID, moduleName, dataViewPermissionType);
            APProposalItemsController objProposalItemsController = new APProposalItemsController();
            List<APProposalItemsInfo> proposalItemList = new List<APProposalItemsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    APProposalItemsInfo objProposalItemsInfo = (APProposalItemsInfo)objProposalItemsController.GetObjectFromDataRow(dr);
                    if (objProposalItemsInfo != null && objProposalItemsInfo.APProposalItemProductQty > 0)
                    {
                        if (objProposalItemsInfo.APPurchaseProposalType != PurchaseProposalType.OutSourcing.ToString())
                        {
                            objProposalItemsInfo.APPurchaseProposalTypeVN = "Khác";
                        }
                        objProposalItemsInfo.APProposalItemPurchaseOrderQty = objProposalItemsInfo.APCancelPurchaseProposalItemPurchaseOrderQtyByNewAndPurchased;
                        proposalItemList.Add(objProposalItemsInfo);
                    }

                }
            }
            return proposalItemList;
        }

        public List<APProposalItemsInfo> GetItemByPurchasePlanItemIDForCancelPurchasePlan(int purchasePlanItemID)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetItemByPurchasePlanItemIDForCancelPurchasePlan", purchasePlanItemID);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APProposalItemsInfo> GetAllApprovedProposalItemsByUserPermissionAndProductType(int userID, string moduleName, string dataViewPermissionType, string productType)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetAllApprovedProposalItemsByUserPermissionAndProductType", userID, moduleName, dataViewPermissionType, productType);
            List<APProposalItemsInfo> proposalItemList = (List<APProposalItemsInfo>)GetListFromDataSet(ds);
            proposalItemList.ForEach(o =>
            {
                if (o.APPurchaseProposalType != PurchaseProposalType.OutSourcing.ToString())
                {
                    o.APPurchaseProposalTypeVN = "Khác";
                }
            });
            return proposalItemList;
        }

        public List<APProposalItemsInfo> GetItemForPurchaseProposal(int userID
                                                                    , string moduleName
                                                                    , string dataViewPermissionType
                                                                    , int proposalID
                                                                    , int departmentID
                                                                    , int departmentRoomID
                                                                    , DateTime fromDate
                                                                    , DateTime toDate
                                                                    , string productType
                                                                    , bool isProposalMaterial)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetItemForPurchaseProposal", userID
                                                                                    , moduleName
                                                                                    , dataViewPermissionType
                                                                                    , proposalID
                                                                                    , departmentID
                                                                                    , departmentRoomID
                                                                                    , fromDate
                                                                                    , toDate
                                                                                    , productType
                                                                                    , isProposalMaterial);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APProposalItemsInfo> GetBPRemainQtyForPurchaseOrderByID(int proposalItemID, int purchaseOrderItemID)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetBPRemainQtyForPurchaseOrderByID", proposalItemID, purchaseOrderItemID);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APProposalItemsInfo> GetRemainQtyForPurchaseOrder(string proposalItemRef, string purchaseOrderItemRef)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetRemainQtyForPurchaseOrder", proposalItemRef, purchaseOrderItemRef);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APProposalItemsInfo> GetItemByProposalID(int proposalID)
        {
            DataSet ds = dal.GetDataSet("APProposalItems_GetItemByProposalID", proposalID);
            return (List<APProposalItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}