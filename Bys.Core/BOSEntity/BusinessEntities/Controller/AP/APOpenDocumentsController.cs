using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region APOpenDocuments
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APOpenDocumentsController
    //Created Date:Saturday, December 11, 2010
    //-----------------------------------------------------------

    public class APOpenDocumentsController : BaseBusinessController
    {
        public APOpenDocumentsController()
        {
            dal = new DALBaseProvider("APOpenDocuments", typeof(APOpenDocumentsInfo));
        }

        public APOpenDocumentsInfo GetOpenDocumentByInvoiceInID(int invoiceInID)
        {
            DataSet ds = dal.GetAllDataByForeignColumn("FK_APInvoiceInID", invoiceInID);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                APOpenDocumentsInfo objOpenDocumentsInfo = (APOpenDocumentsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return objOpenDocumentsInfo;
            }
            return null;
        }

        /// <summary>
        /// Get open documents for transferring
        /// </summary>
        /// <returns>List of open documents</returns>
        public List<APOpenDocumentsInfo> GetOpenDocumentsForTransferring()
        {
            DataSet ds = dal.GetDataSet("APOpenDocuments_GetOpenDocumentsForTransferring");
            return (List<APOpenDocumentsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APOpenDocumentsInfo> openDocuments = new List<APOpenDocumentsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APOpenDocumentsInfo openDocument = (APOpenDocumentsInfo)GetObjectFromDataRow(row);
                    openDocuments.Add(openDocument);
                }
            }
            ds.Dispose();
            return openDocuments;
        }

        /// <summary>
        /// Get open documents for broadcasting to a branch
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <returns>List of broadcasted open documents</returns>
        public List<APOpenDocumentsInfo> GetOpenDocumentsForBroadcasting(int branchID)
        {
            DataSet ds = dal.GetDataSet("APOpenDocuments_GetOpenDocumentsForBroadcasting", branchID);
            return (List<APOpenDocumentsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}