using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region APInvoiceInItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:APInvoiceInItemsController
    //Created Date:Thursday, May 29, 2008
    //-----------------------------------------------------------

    public class APInvoiceInItemsController : BaseBusinessController
    {
        public APInvoiceInItemsController()
        {
            dal = new DALBaseProvider("APInvoiceInItems", typeof(APInvoiceInItemsInfo));
        }

        /// <summary>
        /// Get distinct product unit cost list
        /// </summary>
        /// <param name="productID">Product id</param>
        /// <param name="supplierID">Supplier id</param>
        /// <param name="fromDate">From date</param>
        /// <param name="toDate">To date</param>
        /// <returns>Data of the invoice in items</returns>
        public DataSet GetDistinctProductUnitCostList(int? productID, int? supplierID, DateTime? fromDate, DateTime? toDate, int currencyID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetDistinctProductUnitCostList", productID, supplierID, fromDate, toDate, currencyID);
            return ds;
        }

        /// <summary>
        /// Get invoice item list including the item's components of an invoice
        /// </summary>
        /// <param name="invoiceInID">Invoice id</param>
        /// <returns>List of invoice items</returns>
        public List<APInvoiceInItemsInfo> GetComponentItemsByInvoiceInID(int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetComponentItemsByInvoiceInID", invoiceInID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Update the receipted quantity of an item
        /// </summary>
        /// <param name="invoiceItemID">Item id</param>
        /// <param name="receiptedQty">Updated receipted quantity</param>
        public void UpdateReceiptedQty(int invoiceItemID, decimal receiptedQty)
        {
            dal.ExecuteStoredProcedure("APInvoiceInItems_UpdateReceiptedQty", invoiceItemID, receiptedQty);
        }

        /// <summary>
        /// Get all items of an invoice
        /// </summary>
        /// <param name="invoiceID">Invoice id</param>
        /// <returns>List of invoice items</returns>
        public List<APInvoiceInItemsInfo> GetItemsByInvoiceID(int invoiceID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetItemsByInvoiceID", invoiceID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<APInvoiceInItemsInfo> invoiceItems = new List<APInvoiceInItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APInvoiceInItemsInfo objInvoiceInItemsInfo = (APInvoiceInItemsInfo)GetObjectFromDataRow(row);
                    invoiceItems.Add(objInvoiceInItemsInfo);
                }
            }
            ds.Dispose();
            return invoiceItems;
        }
        public DataSet GetInvoiceInItemByInvoiceInID(int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetAllDataByInvoiceID", invoiceInID);
            return ds;
        }

        /// <summary>
        /// Get invoices for receipt
        /// </summary>
        /// <returns>List of invoices</returns>
        public List<APInvoiceInItemsInfo> GetWoodInvoiceItemsForReceipt()
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetWoodInvoicesForReceipt");
            List<APInvoiceInItemsInfo> invoices = new List<APInvoiceInItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APInvoiceInItemsInfo objInvoiceInItemsInfo = (APInvoiceInItemsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoiceInItemsInfo);
                }
            }
            return invoices;
        }

        public List<APInvoiceInItemsInfo> GetItemsByPurchaseOrderItemID(int purchaseOrderItemID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetItemsByPurchaseOrderItemID", purchaseOrderItemID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }
        public List<APInvoiceInItemsInfo> GetItemsByPurchaseOrderID(int purchaseOrderID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetItemsByPurchaseOrderID", purchaseOrderID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }
        public List<APInvoiceInItemsInfo> GetItemForReport178(DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetItemForReport178", fromDate, toDate);
            List<APInvoiceInItemsInfo> invoices = new List<APInvoiceInItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APInvoiceInItemsInfo objInvoiceInItemsInfo = (APInvoiceInItemsInfo)GetObjectFromDataRow(row);
                    objInvoiceInItemsInfo.HoSoNhap = objInvoiceInItemsInfo.APInvoiceInSupplierNo + "," + objInvoiceInItemsInfo.APSupplierName;
                    invoices.Add(objInvoiceInItemsInfo);
                }
            }
            return invoices;
        }
        public List<APInvoiceInItemsInfo> GetRP188(DateTime fromdate, DateTime todate, int invoiceinID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceinItems_GetRP188", fromdate, todate, invoiceinID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APInvoiceInItemsInfo> GetInvoiceInItemsByInvoiceInID(int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetAllDataByInvoiceID", invoiceInID);
            List<APInvoiceInItemsInfo> invoices = new List<APInvoiceInItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    APInvoiceInItemsInfo objInvoiceInItemsInfo = (APInvoiceInItemsInfo)GetObjectFromDataRow(row);
                    invoices.Add(objInvoiceInItemsInfo);
                }
            }
            return invoices;
        }

        public List<APInvoiceInItemsInfo> GetInvoiceInItemForBOL(int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetInvoiceInItemForBOL", invoiceInID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }

        public List<APInvoiceInItemsInfo> GetInvoiceInItemForReturnSuplier(int objectID, string objectType, DateTime? fromdate, DateTime? todate)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetInvoiceInItemForReturnSuplier", objectID, objectType, fromdate, todate);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetInvoiceInItemRemainQtyForReturnSuplier(int invoiceInItemID, int returnSupplierItemID)
        {
            return (decimal)dal.GetSingleValue("APInvoiceInItems_GetInvoiceInItemRemainQtyForReturnSuplier", invoiceInItemID, returnSupplierItemID);
        }

        public List<APInvoiceInItemsInfo> GetListInvoiceInItemByInvoiceInID(int invoiceInID)
        {
            DataSet ds = dal.GetDataSet("APInvoiceInItems_GetAllDataByInvoiceID", invoiceInID);
            return (List<APInvoiceInItemsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}