using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeePieceWorks
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeePieceWorksController
    //Created Date:Tuesday, June 14, 2016
    //-----------------------------------------------------------

    public class HREmployeePieceWorksController : BaseBusinessController
    {
        public HREmployeePieceWorksController()
        {
            dal = new DALBaseProvider("HREmployeePieceWorks", typeof(HREmployeePieceWorksInfo));
        }
        /// <summary>
        /// Get employee piece work by product and operation
        /// </summary>
        /// <param name="productID">productID</param>
        /// <param name="operationID">operationID</param>
        /// <returns></returns>
        public HREmployeePieceWorksInfo GetEmployeePieceWorkByProductAndOperation(int productID, int? operationID, int batchComponent, DateTime fromDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWorks_GetEmployeePieceWorkByProductAndOperation", productID, operationID, batchComponent, fromDate);
            if (ds.Tables[0].Rows.Count > 0)
            {
                HREmployeePieceWorksInfo objEmployeePieceWorksInfo = (HREmployeePieceWorksInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                ds.Dispose();
                return objEmployeePieceWorksInfo;
            }
            ds.Dispose();
            return null;
        }

        public HREmployeePieceWorksInfo GetEmployeePieceWorkByProductAndOperation(int productID, int? operationID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWorks_GetEmployeePieceWorkByProductAndOperation", productID, operationID, null, null);
            if (ds.Tables[0].Rows.Count > 0)
            {
                HREmployeePieceWorksInfo objEmployeePieceWorksInfo = (HREmployeePieceWorksInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                ds.Dispose();
                return objEmployeePieceWorksInfo;
            }
            ds.Dispose();
            return null;
        }


        /// <summary>
        /// Get employee piece work by product and operation not batch component
        /// </summary>
        /// <param name="productID">productID</param>
        /// <param name="operationID">operationID</param>
        /// <returns></returns>
        public HREmployeePieceWorksInfo GetEmployeePieceWorkByProductAndOperationNotBatchComponent(int productID, int? operationID, DateTime fromDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWorks_GetEmployeePieceWorkByProductAndOperationNotBatchComponent", productID, operationID, fromDate);
            if (ds.Tables[0].Rows.Count > 0)
            {
                HREmployeePieceWorksInfo objEmployeePieceWorksInfo = (HREmployeePieceWorksInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                ds.Dispose();
                return objEmployeePieceWorksInfo;
            }
            ds.Dispose();
            return null;
        }

        /// <summary>
        /// Get employee piece work by product and operation to check
        /// </summary>
        /// <param name="productID">productID</param>
        /// <param name="operationID">operationID</param>
        /// <returns></returns>
        public List<HREmployeePieceWorksInfo> GetEmployeePieceWorkByProductAndOperationToCheck(int productID, int? operationID, int batchComponent, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWorks_GetEmployeePieceWorkByProductAndOperationToCheck", productID, operationID, batchComponent, fromDate, toDate);
            List<HREmployeePieceWorksInfo> employeePieceWorkList = new List<HREmployeePieceWorksInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePieceWorksInfo objEmployeePieceWorksInfo = (HREmployeePieceWorksInfo)GetObjectFromDataRow(row);
                    employeePieceWorkList.Add(objEmployeePieceWorksInfo);
                }
            }
            ds.Dispose();
            return employeePieceWorkList;
        }

        /// <summary>
        /// Get employee piece work by product and operation not component to check
        /// </summary>
        /// <param name="productID">productID</param>
        /// <param name="operationID">operationID</param>
        /// <returns></returns>
        public List<HREmployeePieceWorksInfo> GetEmployeePieceWorkByProductAndOperationNotComponentToCheck(int productID, int? operationID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWorks_GetEmployeePieceWorkByProductAndOperationNotComponentToCheck", productID, operationID, fromDate, toDate);
            List<HREmployeePieceWorksInfo> employeePieceWorkList = new List<HREmployeePieceWorksInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePieceWorksInfo objEmployeePieceWorksInfo = (HREmployeePieceWorksInfo)GetObjectFromDataRow(row);
                    employeePieceWorkList.Add(objEmployeePieceWorksInfo);
                }
            }
            ds.Dispose();
            return employeePieceWorkList;
        }
    }
    #endregion
}