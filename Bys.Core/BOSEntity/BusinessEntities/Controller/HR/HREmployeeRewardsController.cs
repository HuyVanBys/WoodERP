using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeeRewards
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeeRewardsController
    //Created Date:Friday, May 20, 2011
    //-----------------------------------------------------------

    public class HREmployeeRewardsController : BaseBusinessController
    {
        public HREmployeeRewardsController()
        {
            dal = new DALBaseProvider("HREmployeeRewards", typeof(HREmployeeRewardsInfo));
        }

        /// <summary>
        /// Get employee reward by ID of employee and reward date 
        /// </summary>
        /// <param name="employeeID">ID of the employee</param>
        /// <param name="rewardDate">The month employee rewarded</param>
        /// <returns></returns>
        public List<HREmployeeRewardsInfo> GetEmployeeRewardByEmployeeIDAndDate(int employeeID, DateTime rewardDate, string type)
        {
            DataSet ds = dal.GetDataSet("HREmployeeRewards_GetEmployeeRewardByEmployeeIDAndDate", employeeID, rewardDate, type);
            return (List<HREmployeeRewardsInfo>)GetListFromDataSet(ds);
        }


        /// <summary>
        /// Get employee list that have reward by reward ID
        /// </summary>
        /// <param name="rewardID">ID of the reward</param>
        /// <returns></returns>
        public DataSet GetRewardListByRewardID(int rewardID)
        {
            return dal.GetDataSet("HREmployeeRewards_GetRewardListByRewardID", rewardID);
        }

        public HREmployeeRewardsInfo GetEmployeeRewardsInfoByEmployeeIDAndRewardID(int employeeID, int rewardID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeRewards_GetEmployeeRewardsInfoByEmployeeIDAndRewardID", employeeID, rewardID);
            if (ds.Tables.Count > 0)
            {
                ds.Dispose();
                return (HREmployeeRewardsInfo)dal.GetSingleObject(ds.Tables[0]);
            }
            ds.Dispose();
            return null;
        }
        public HREmployeeRewardsInfo GetSumSPNEmployeesDaTinhLuong(int employeeID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeRewards_GetSumSPNEmployees", employeeID);
            if (ds.Tables.Count > 0)
            {
                ds.Dispose();
                return (HREmployeeRewardsInfo)dal.GetSingleObject(ds.Tables[0]);
            }
            ds.Dispose();
            return null;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HREmployeeRewardsInfo> employeeRewards = new List<HREmployeeRewardsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeRewardsInfo objEmployeeRewardsInfo = (HREmployeeRewardsInfo)GetObjectFromDataRow(row);
                    employeeRewards.Add(objEmployeeRewardsInfo);
                }
            }
            ds.Dispose();
            return employeeRewards;
        }

        public HREmployeeRewardsInfo GetSumPNInEmployeeRewards(int employeeID, int? rewardID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeRewards_GetSumPNInEmployeeRewards", employeeID, rewardID);
            if (ds.Tables.Count > 0)
            {
                ds.Dispose();
                return (HREmployeeRewardsInfo)dal.GetSingleObject(ds.Tables[0]);
            }
            ds.Dispose();
            return null;
        }
    }
    #endregion
}