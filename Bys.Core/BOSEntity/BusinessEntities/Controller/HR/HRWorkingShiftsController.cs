using BOSLib;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRWorkingShifts
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRWorkingShiftsController
    //Created Date:Wednesday, May 04, 2011
    //-----------------------------------------------------------

    public class HRWorkingShiftsController : BaseBusinessController
    {
        public HRWorkingShiftsController()
        {
            dal = new DALBaseProvider("HRWorkingShifts", typeof(HRWorkingShiftsInfo));
        }
        public List<HRWorkingShiftsInfo> GetWorkingShiftListFromDataSet(DataSet ds)
        {
            List<HRWorkingShiftsInfo> lstObj = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    lstObj.Add(obj);
                }
            }
            return lstObj;
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRWorkingShiftsInfo> lstObj = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    lstObj.Add(obj);
                }
            }
            return lstObj;
        }
        public List<HRWorkingShiftsInfo> GetAllData(int employeePayrollFormulaID)
        {
            DataSet ds = dal.GetAllDataByForeignColumn("FK_HREmployeePayrollFormulaID", employeePayrollFormulaID);
            List<HRWorkingShiftsInfo> list = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<HRWorkingShiftsInfo> GetWorkingShiftByPayrollFormulaID(int payrollFormulaID)
        {

            DataSet ds = dal.GetDataSet("HRWorkingShift_GetWorkingShiftByPayrollFormulaID", payrollFormulaID);
            List<HRWorkingShiftsInfo> list = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }

        public DataSet GetWorkingShiftByFK_WorkingShiftID(int payrollFormulaID)
        {

            DataSet ds = dal.GetDataSet("HRWorkingShift_GetWorkingShiftByFK_HRWorkingShiftID", payrollFormulaID);
            return ds;
        }

        public List<HRWorkingShiftsInfo> GetWorkingShiftByFK_HRWorkingShiftID(int workingShiftID)
        {

            DataSet ds = dal.GetDataSet("HRWorkingShift_GetWorkingShiftByFK_HRWorkingShiftID", workingShiftID);
            List<HRWorkingShiftsInfo> list = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public HRWorkingShiftsInfo GetDefaultWorkingShiftByPayrollFormulaIDAndWorkingShiftDayOfWeek(int? payrollFormulaID, string workingShiftDayOfWeek)
        {
            HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)dal.GetDataObject("HRWorkingShift_GetDefaultWorkingShiftByPayrollFormulaIDAndWorkingShiftDayOfWeek", payrollFormulaID, workingShiftDayOfWeek);
            return obj;
        }

        public List<HRWorkingShiftsInfo> GetConfigWorkingShift()
        {

            DataSet ds = dal.GetDataSet("HRWorkingShifts_GetConfigWorkingShift");
            List<HRWorkingShiftsInfo> list = new List<HRWorkingShiftsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRWorkingShiftsInfo obj = (HRWorkingShiftsInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public HRWorkingShiftsInfo GetWorkingShiftByListID(string workingShiftID)
        {
            HRWorkingShiftsInfo objWorkingShiftsInfo = new HRWorkingShiftsInfo();
            DataSet ds = dal.GetDataSet("HRWorkingShifts_GetWorkingShiftByListID", workingShiftID);
            if (ds != null && ds.Tables.Count != 0)
            {
                if (ds.Tables[0].Rows.Count != 0)
                {
                    objWorkingShiftsInfo = (HRWorkingShiftsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                }
            }
            ds.Dispose();
            return objWorkingShiftsInfo;
        }

        public HRWorkingShiftsInfo GetFirstWorkingShiftByPayrollFormulaID(int payrollFormulaID)
        {
            DataSet ds = dal.GetDataSet("HRWorkingShift_GetWorkingShiftByPayrollFormulaID", payrollFormulaID);
            HRWorkingShiftsInfo objWorkingShiftsInfo = new HRWorkingShiftsInfo();
            if (ds != null && ds.Tables.Count != 0)
            {
                if (ds.Tables[0].Rows.Count != 0)
                {
                    objWorkingShiftsInfo = (HRWorkingShiftsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                }
            }
            ds.Dispose();
            return objWorkingShiftsInfo;
        }
    }
    #endregion
}