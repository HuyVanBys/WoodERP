using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRRecruitmentNeeds
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRRecruitmentNeedsController
    //Created Date:Friday, October 19, 2018
    //-----------------------------------------------------------

    public class HRRecruitmentNeedsController : BaseBusinessController
    {
        public HRRecruitmentNeedsController()
        {
            dal = new DALBaseProvider("HRRecruitmentNeeds", typeof(HRRecruitmentNeedsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRRecruitmentNeedsInfo> RecruitmentNeeds = new List<HRRecruitmentNeedsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRRecruitmentNeedsInfo objRecruitmentNeedsInfo = (HRRecruitmentNeedsInfo)GetObjectFromDataRow(row);
                    RecruitmentNeeds.Add(objRecruitmentNeedsInfo);
                }
            }
            ds.Dispose();
            return RecruitmentNeeds;
        }

        public DataSet GetRecruitmentNeedListDatasetByListOfBranchID(string kPIFormNo,
                                                                DateTime? fromDate,
                                                                DateTime? toDate,
                                                                List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetRecruitmentNeedListDataset(kPIFormNo,
                                                        fromDate,
                                                        toDate,
                                                        ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetRecruitmentNeedListDataset(string kPIFormNo, DateTime? fromDate, DateTime? toDate, int brandID)
        {
            return dal.GetDataSet("HRRecruitmentNeeds_GetRecruitmentNeedListDataset", kPIFormNo, fromDate, toDate, brandID);
        }
    }
    #endregion
}