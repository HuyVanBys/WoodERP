using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRDormitorys
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRDormitorysController
    //Created Date:Monday, May 21, 2018
    //-----------------------------------------------------------

    public class HRDormitorysController : BaseBusinessController
    {
        public HRDormitorysController()
        {
            dal = new DALBaseProvider("HRDormitorys", typeof(HRDormitorysInfo));
        }

        public DataSet GetDormitoryListDataSetByListOfBranchID(string dormitoryNo,
                                     string dormitoryName,
                                     int? branchID,
                                     int? employeeID,
                                     DateTime? dateFrom,
                                     DateTime? dateTo, List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            List<int> collections = new List<int>();
            int rowIndex = 0;
            DataRow row;
            DataRowCollection rows;
            bool isValid = true;
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetDormitoryListDataSet(dormitoryNo, dormitoryName, ojbBranchsInfo.BRBranchID, employeeID, dateFrom, dateTo);
                if (ds != null && ds.Tables.Count != 0 && ds.Tables[0].Rows.Count != 0)
                {
                    rowIndex = 0;
                    rows = ds.Tables[0].Rows;
                    isValid = true;
                    while (isValid)
                    {
                        row = rows[rowIndex];
                        int id = row["HRDormitoryID"] is DBNull ? -1 : Convert.ToInt32(row["HRDormitoryID"].ToString());
                        if (id != -1 && !collections.Contains(id))
                        {
                            collections.Add(id);
                            rowIndex++;
                        }
                        else
                        {
                            rows.Remove(row);
                        }
                        if (rows.Count == 0 || rows.Count == rowIndex)
                            isValid = false;
                    }
                }
                rtn.Merge(ds);
                ds.Dispose();
            }
            if (rtn.Tables.Count != 0)
            {
                DataView dataView = rtn.Tables[0].DefaultView;
                dataView.Sort = "HRDormitoryDate, HRDormitoryNo ASC";
            }
            rtn.Dispose();
            return rtn;
        }


        public DataSet GetDormitoryListDataSet(string dormitoryNo,
                                                string dormitoryName,
                                                int? branchID,
                                                int? employeeID,
                                                DateTime? dateFrom,
                                                DateTime? dateTo)
        {
            DataSet ds = dal.GetDataSet("HRDormitorys_GetDormitorysDataset", dormitoryNo, dormitoryName, branchID, employeeID, dateFrom, dateTo);
            return ds;
        }
        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRDormitorysInfo> list = new List<HRDormitorysInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRDormitorysInfo info = (HRDormitorysInfo)GetObjectFromDataRow(row);
                    list.Add(info);
                }
            }
            ds.Dispose();
            return list;
        }

        public List<HRDormitorysInfo> GetAllDormitoryList()
        {
            DataSet ds = dal.GetAllObject();
            return (List<HRDormitorysInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}