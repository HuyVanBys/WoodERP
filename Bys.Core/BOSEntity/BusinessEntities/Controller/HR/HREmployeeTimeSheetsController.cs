using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeeTimeSheets
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeeTimeSheetsController
    //Created Date:Monday, April 04, 2011
    //-----------------------------------------------------------

    public class HREmployeeTimeSheetsController : BaseBusinessController
    {
        public HREmployeeTimeSheetsController()
        {
            dal = new DALBaseProvider("HREmployeeTimeSheets", typeof(HREmployeeTimeSheetsInfo));
        }

        /// <summary>
        /// Get calender entry list by date and calender type
        /// </summary>
        /// <param name="calenderEntryDate"></param>
        /// <param name="calenderType"></param>
        /// <returns></returns>
        public DataSet GetCalendarEntryByDateAndCalenderType(DateTime calenderEntryDate, string calenderType)
        {
            return dal.GetDataSet("HRCalendarEntrys_GetCalendarEntryByDateAndCalenderType", calenderEntryDate, calenderType);
        }

        /// <summary>
        /// Get time sheet list of employees searched by some criteria
        /// </summary>
        /// <param name="locationID">Location id</param>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">Department id</param>
        /// <param name="departmentRoomID">Department room id</param>
        /// <param name="month">Month of the time sheet</param>
        /// <returns>List of employee time sheets</returns>
        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetList(
                                                                int? locationID,
                                                                int? branchID,
                                                                int? departmentID,
                                                                int? departmentRoomID,
                                                                int? timeSheetID,
                                                                DateTime month)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTimeSheets_GetEmployeeTimeSheetList",
                                        locationID,
                                        branchID,
                                        departmentID,
                                        departmentRoomID,
                                        timeSheetID,
                                        month);
            return (List<HREmployeeTimeSheetsInfo>)GetListFromDataSet(ds);
        }
        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetListByPermission(
                                                                int? locationID,
                                                                int? branchID,
                                                                int? departmentID,
                                                                int? departmentRoomID,
                                                                DateTime month,
                                                                int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTimeSheets_GetEmployeeTimeSheetListByPermission",
                                        locationID,
                                        branchID,
                                        departmentID,
                                        departmentRoomID,
                                        month,
                                        userGroupID);
            return (List<HREmployeeTimeSheetsInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get employee time sheets by time sheet id
        /// </summary>
        /// <param name="timeSheetID">Time sheet id</param>
        /// <returns>The list of employee time sheet</returns>
        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetsByTimeSheetID(int timeSheetID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTimeSheets_GetEmployeeTimeSheetByTimeSheetID", timeSheetID);
            return (List<HREmployeeTimeSheetsInfo>)GetListFromDataSet(ds);
        }
        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetByTimeSheetIDAndUserGroup(int timeSheetID, int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTimeSheets_GetEmployeeTimeSheetByTimeSheetIDAndUserGroup", timeSheetID, userGroupID);
            return (List<HREmployeeTimeSheetsInfo>)GetListFromDataSet(ds);
        }

        public HREmployeeTimeSheetsInfo GetEmployeeTimeSheetBySomeCriteria(int employeeID, DateTime compareDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTimeSheets_GetEmployeeTimeSheetBySomeCriteria", employeeID, compareDate);
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeTimeSheetsInfo objEmployeeTimeSheetsInfo = (HREmployeeTimeSheetsInfo)GetObjectFromDataRow(row);
                    ds.Dispose();
                    return objEmployeeTimeSheetsInfo;
                }
            }
            ds.Dispose();
            return null;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HREmployeeTimeSheetsInfo> employeeTimeSheetList = new List<HREmployeeTimeSheetsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeTimeSheetsInfo objEmployeeTimeSheetsInfo = (HREmployeeTimeSheetsInfo)GetObjectFromDataRow(row);
                    employeeTimeSheetList.Add(objEmployeeTimeSheetsInfo);
                }
            }
            ds.Dispose();
            return employeeTimeSheetList;
        }

        /// <summary>
        /// Delete the employee time sheets and their relative data of a general time sheet
        /// </summary>
        /// <param name="timeSheetID">Time sheet id</param>
        public void DeleteByTimeSheetID(int timeSheetID)
        {
            dal.ExecuteStoredProcedure("HREmployeeTimeSheets_DeleteByTimeSheetID", timeSheetID);
        }

        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetByTimeSheetID(int timeSheetID)
        {
            List<HREmployeeTimeSheetsInfo> timeSheetList = new List<HREmployeeTimeSheetsInfo>();
            DataSet ds = dal.GetDataSet("HREmployeeTimesheets_GetEmployeeTimesheets", timeSheetID);
            if (ds.Tables[0].Rows.Count > 0)
            {

                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeTimeSheetsInfo objTimeSheetsInfo = (HREmployeeTimeSheetsInfo)GetObjectFromDataRow(row);
                    timeSheetList.Add(objTimeSheetsInfo);
                }
            }
            ds.Dispose();
            return timeSheetList;
        }
        public List<HREmployeeTimeSheetsInfo> GetEmployeeTimeSheetBySomeCriteria(int? employeeID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, int? departmentRoomGroupTeamItemID, DateTime fromDate)
        {
            List<HREmployeeTimeSheetsInfo> timeSheetList = new List<HREmployeeTimeSheetsInfo>();
            DataSet ds = dal.GetDataSet("HREmployeeTimesheets_GetEmployeeTimeSheetByCustom", employeeID, departmentID, departmentRoomID, departmentRoomGroupItemID, departmentRoomGroupTeamItemID, fromDate);
            if (ds.Tables[0].Rows.Count > 0)
            {

                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeTimeSheetsInfo objTimeSheetsInfo = (HREmployeeTimeSheetsInfo)GetObjectFromDataRow(row);
                    timeSheetList.Add(objTimeSheetsInfo);
                }
            }
            ds.Dispose();
            return timeSheetList;
        }
    }
    #endregion
}