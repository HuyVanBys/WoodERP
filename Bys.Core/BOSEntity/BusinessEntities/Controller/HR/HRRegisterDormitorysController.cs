using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRRegisterDormitorys
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRRegisterDormitorysController
    //Created Date:Wednesday, May 23, 2018
    //-----------------------------------------------------------

    public class HRRegisterDormitorysController : BaseBusinessController
    {
        public HRRegisterDormitorysController()
        {
            dal = new DALBaseProvider("HRRegisterDormitorys", typeof(HRRegisterDormitorysInfo));
        }

        public DataSet GetRegisterDormitoryListDataSetByListOfBranchID(string registerDormitoryNo,
                                     int? branchID,
                                     int? employeeID,
                                     int? dormitoryID,
                                     List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            List<int> collections = new List<int>();
            int rowIndex = 0;
            DataRow row;
            DataRowCollection rows;
            bool isValid = true;
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetRegisterDormitoryListDataSet(registerDormitoryNo, ojbBranchsInfo.BRBranchID, employeeID, dormitoryID);
                if (ds != null && ds.Tables.Count != 0 && ds.Tables[0].Rows.Count != 0)
                {
                    rowIndex = 0;
                    rows = ds.Tables[0].Rows;
                    isValid = true;
                    while (isValid)
                    {
                        row = rows[rowIndex];
                        int id = row["HRRegisterDormitoryID"] is DBNull ? -1 : Convert.ToInt32(row["HRRegisterDormitoryID"].ToString());
                        if (id != -1 && !collections.Contains(id))
                        {
                            collections.Add(id);
                            rowIndex++;
                        }
                        else
                        {
                            rows.Remove(row);
                        }
                        if (rows.Count == 0 || rows.Count == rowIndex)
                            isValid = false;
                    }
                }
                rtn.Merge(ds);
                ds.Dispose();
            }
            if (rtn.Tables.Count != 0)
            {
                DataView dataView = rtn.Tables[0].DefaultView;
                dataView.Sort = "HRRegisterDormitoryNo ASC";
            }
            return rtn;
        }


        public DataSet GetRegisterDormitoryListDataSet(string registerDormitoryNo,
                                                int? branchID,
                                                int? employeeID,
                                                int? dormitoryID)
        {
            DataSet ds = dal.GetDataSet("HRRegisterDormitorys_GetRegisterDormitorysDataset", registerDormitoryNo, branchID, employeeID, dormitoryID);
            return ds;
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRRegisterDormitorysInfo> list = new List<HRRegisterDormitorysInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRRegisterDormitorysInfo obj = (HRRegisterDormitorysInfo)GetObjectFromDataRow(row);
                    list.Add(obj);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<HRRegisterDormitorysInfo> GetHRRegisterDormitorysByDate(int FK_HRDormitoryID, DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("HRRegisterDormitorys_GetHRRegisterDormitorysByDate", FK_HRDormitoryID, fromDate, toDate);
            return (List<HRRegisterDormitorysInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}