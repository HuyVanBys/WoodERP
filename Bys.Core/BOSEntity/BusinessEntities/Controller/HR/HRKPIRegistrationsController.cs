using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRKPIRegistrations
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRKPIRegistsController
    //Created Date:Monday, July 2, 2018
    //-----------------------------------------------------------

    public class HRKPIRegistrationsController : BaseBusinessController
    {
        public HRKPIRegistrationsController()
        {
            dal = new DALBaseProvider("HRKPIRegistrations", typeof(HRKPIRegistrationsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRKPIRegistrationsInfo> KPIRegists = new List<HRKPIRegistrationsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRKPIRegistrationsInfo objKPIRegistsInfo = (HRKPIRegistrationsInfo)GetObjectFromDataRow(row);
                    KPIRegists.Add(objKPIRegistsInfo);
                }
            }
            return KPIRegists;
        }

        public DataSet GetKPIRegistListDatasetByListOfBranchID(string kPIRegistNo,
                                                                int? employeeID,
                                                                int? departmentID,
                                                                int? departmentRoomID,
                                                                DateTime? fromDate,
                                                                DateTime? toDate,
                                                                List<BRBranchsInfo> branchList)
        {
            DataSet rtn = new DataSet();
            foreach (BRBranchsInfo ojbBranchsInfo in branchList)
            {
                DataSet ds = GetKPIRegistListDataset(kPIRegistNo,
                                                        employeeID,
                                                        departmentID,
                                                        departmentRoomID,
                                                        fromDate,
                                                        toDate,
                                                        ojbBranchsInfo.BRBranchID);
                rtn.Merge(ds);
            }

            return rtn;
        }

        public DataSet GetKPIRegistListDataset(string kPIRegistNo, int? employeeID, int? departmentID, int? departmentRoomID, DateTime? fromDate, DateTime? toDate, int brandID)
        {
            return dal.GetDataSet("HRKPIRegistrations_GetKPIFormListDataset", kPIRegistNo, employeeID, departmentID, departmentRoomID, fromDate, toDate, brandID);
        }

        public List<HRKPIRegistrationsInfo> GetKPIRegistrationListNotExistKPIEvaluations()
        {
            return (List<HRKPIRegistrationsInfo>)GetListFromDataSet(dal.GetDataSet("HRKPIRegistrations_GetKPIRegistrationListNotExistKPIEvaluations"));
        }
    }
    #endregion
}