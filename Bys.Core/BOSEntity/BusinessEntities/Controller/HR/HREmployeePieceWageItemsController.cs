using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeePieceWageItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeePieceWageItemsController
    //Created Date:Thursday, October 05, 2017
    //-----------------------------------------------------------

    public class HREmployeePieceWageItemsController : BaseBusinessController
    {
        public HREmployeePieceWageItemsController()
        {
            dal = new DALBaseProvider("HREmployeePieceWageItems", typeof(HREmployeePieceWageItemsInfo));
        }
        /// <summary>
        /// Get all data by over time
        /// </summary>
        /// <param name="overTimeID"></param>
        /// <returns></returns>
        public DataSet GetAllDataByEmployeePieceWageID(int overTimeID)
        {
            return dal.GetDataSet("HREmployeePieceWageItems_GetAllDataByEmployeePieceWageID", overTimeID);
        }

        public bool IsEmployeePieceWageItemIntime(int employeeID, DateTime date)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWageItems_IsEmployeePieceWageItemIntime", employeeID, date);
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0) return true;
            }
            ds.Dispose();
            return false;
        }
        public List<HREmployeePieceWagesInfo> GetListEmployeePieceWageItems(int employeeID, DateTime dateFrom, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWageItems_GetListEmployeePieceWageItems", employeeID, dateFrom, dateTo);
            List<HREmployeePieceWagesInfo> list = new List<HREmployeePieceWagesInfo>();
            HREmployeePieceWagesController objEmployeePieceWagesController = new HREmployeePieceWagesController();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePieceWagesInfo objEmployeePieceWageItemsInfo = (HREmployeePieceWagesInfo)objEmployeePieceWagesController.GetObjectFromDataRow(row);
                    list.Add(objEmployeePieceWageItemsInfo);
                }
            }
            ds.Dispose();
            return list;
        }
        public List<HREmployeePieceWageItemsInfo> GetEmployeePieceWageCompleteTimeSheet(int EmployeePieceWageID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWageItems_GetEmployeePieceWageCompleteTimeSheet", EmployeePieceWageID);
            List<HREmployeePieceWageItemsInfo> list = new List<HREmployeePieceWageItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePieceWageItemsInfo objEmployeePieceWageItemsInfo = (HREmployeePieceWageItemsInfo)GetObjectFromDataRow(row);
                    list.Add(objEmployeePieceWageItemsInfo);
                }
            }
            ds.Dispose();
            return list;
        }
        public void UpdateEmployeePieceWageCompleteTimeSheet(int EmployeePieceWageID, DateTime dateOut)
        {
            dal.ExecuteStoredProcedure("HREmployeePieceWageItems_UpdateEmployeePieceWageCompleteTimeSheet", EmployeePieceWageID, dateOut);
        }
        public List<HREmployeePieceWageItemsInfo> GetEmployeePieceWageItemByDate(DateTime FromDate, DateTime ToDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeePieceWageItems_GetEmployeePieceWageItemByDate", FromDate, ToDate);
            List<HREmployeePieceWageItemsInfo> list = new List<HREmployeePieceWageItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePieceWageItemsInfo objEmployeePieceWageItemsInfo = (HREmployeePieceWageItemsInfo)GetObjectFromDataRow(row);
                    list.Add(objEmployeePieceWageItemsInfo);
                }
            }
            ds.Dispose();
            return list;
        }
    }
    #endregion
}