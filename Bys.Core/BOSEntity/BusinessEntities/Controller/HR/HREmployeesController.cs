using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;


namespace BOSERP
{
    #region HREmployees
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeesController
    //Created Date:Wednesday, October 08, 2008
    //-----------------------------------------------------------

    public class HREmployeesController : BaseBusinessController
    {
        public HREmployeesController()
        {
            dal = new DALBaseProvider("HREmployees", typeof(HREmployeesInfo));
        }

        public object GetObject(int iObjectID)
        {
            object o = dal.GetDataObject("dbo.GetExtraSalary", iObjectID, DateTime.Now);
            return 0;
        }

        /// <summary>
        /// Get the sale summary of an employee
        /// </summary>
        /// <param name="objEmployeesInfo">Employee object is used to retrive data</param>
        /// <param name="from">Date which the result is filtered from</param>
        /// <param name="to">Date which the result is filtered to</param>
        public void GetSaleSummary(HREmployeeForViews objEmployeesInfo, DateTime? from, DateTime? to)
        {
            DbCommand cmd = dal.GetStoredProcedureCommand("HREmployees_GetSaleSummary");
            dal.AddParameter(cmd, "HREmployeeID", DbType.Int32, ParameterDirection.Input, objEmployeesInfo.HREmployeeID);
            dal.AddParameter(cmd, "DateFrom", DbType.DateTime, ParameterDirection.Input, from);
            dal.AddParameter(cmd, "DateTo", DbType.DateTime, ParameterDirection.Input, to);
            dal.AddParameter(cmd, "TotalSaleAmount", DbType.Decimal, ParameterDirection.Output, objEmployeesInfo.TotalSaleAmount);
            dal.AddParameter(cmd, "TotalSaleQty", DbType.Decimal, ParameterDirection.Output, objEmployeesInfo.TotalSaleQty);
            dal.GetDataSet(cmd);
            objEmployeesInfo.TotalSaleAmount = Convert.ToDecimal(dal.GetParameterValue(cmd, "TotalSaleAmount"));
            objEmployeesInfo.TotalSaleQty = Convert.ToDecimal(dal.GetParameterValue(cmd, "TotalSaleQty"));
        }

        public DataSet GetEmployeeByTimeSheet(int timeSheetID)
        {
            return dal.GetDataSet("HREmployees_GetEmployeeByTimeSheet", timeSheetID);
        }

        public DataSet GetEmployeeResign()
        {
            return dal.GetDataSet("HREmployees_GetEmployeeResign");
        }

        public DataSet GetEmployeeNotContract()
        {
            return dal.GetDataSet("HREmployees_GetEmployeeNotContract");
        }

        public DataSet GetEmployeeChangeContract()
        {
            return dal.GetDataSet("HREmployees_GetEmployeeChangeContract");
        }

        /// <summary>
        /// Get all employees
        /// </summary>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetAllEmployees()
        {
            DataSet ds = dal.GetAllObject();
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListBySomeCriteria(int? payrollFormulaID, int? dayQuantity, DateTime compareDate)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeBySomeCriteria", payrollFormulaID, dayQuantity, compareDate);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
       //public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, int? levelID, string status)
        //{
        //    DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeList", branchID, departmentID, departmentRoomID, levelID, status);
        //    List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
        //    if (ds.Tables.Count > 0)
        //    {
        //        foreach (DataRow row in ds.Tables[0].Rows)
        //        {
        //            HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
        //            employees.Add(objEmployeesInfo);
        //        }
        //    }
        //    return employees;
        //}

        public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeList", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeeForViews> GetViewEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeList", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, status);
            List<HREmployeeForViews> employees = new List<HREmployeeForViews>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeForViews objEmployeesInfo = (HREmployeeForViews)SqlDatabaseHelper.GetObjectFromDataRow(row, typeof(HREmployeeForViews));
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetEmployeeListByPermission(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, string status, int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByPermission", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, status, userGroupID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListByPermissionRP(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, string status, int userGroupID, string trainingCourseID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByPermissionRP", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, status, userGroupID, trainingCourseID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, int? levelID, string status, string gender, string contractType, int workingMonthFrom, int workingMonthTo, string uniformType)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListCondition", branchID, departmentID, departmentRoomID, levelID, status, gender, contractType, workingMonthFrom, workingMonthTo, uniformType);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    objEmployeesInfo.HREmployeeWorkingMonths = GetTotalWorkingMonth(objEmployeesInfo.HREmployeeID);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, string status)
        {
            return GetEmployeeList(branchID, departmentID, departmentRoomID, null, status);
        }

        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>        
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID)
        {
            return GetEmployeeList(branchID, departmentID, departmentRoomID, null, null);
        }


        /// <summary>
        /// Get the list of employees based on some criteria
        /// </summary>
        /// <param name="employeeNo">Employee no</param>
        /// <param name="employeeName">Employee name</param>
        /// <param name="contactAddress">Contact address</param>
        /// <param name="gender">Gender</param>
        /// <param name="idNumber">Id number</param>
        /// <param name="roomID">Room id</param>
        /// <param name="levelID">Level id</param>
        /// <param name="branchID">Branch id</param>
        /// <returns>Employee list</returns>
        public DataSet GetEmployeeList(
                                    string employeeNo,
                                    string employeeName,
                                    string contactAddress,
                                    string gender,
                                    string idNumber,
                                    int? roomID,
                                    int? levelID,
                                    int? branchID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeSet",
                                        employeeNo,
                                        employeeName,
                                        contactAddress,
                                        gender,
                                        idNumber,
                                        roomID,
                                        levelID,
                                        branchID);
            return ds;
        }

        public DataSet GetEmployeeList(
                                    string employeeNo,
                                    string employeeName,
                                    string contactAddress,
                                    string gender,
                                    string idNumber,
                                    int? roomID,
                                    string status,
                                    int? levelID,
                                    int? branchID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeSet2",
                                        employeeNo,
                                        employeeName,
                                        contactAddress,
                                        gender,
                                        idNumber,
                                        roomID,
                                        status,
                                        levelID,
                                        branchID);
            return ds;
        }
        //[NKVung]  [Group Time Sheet Permissions]  [START]
        public DataSet GetEmployeeListByEmployeePayrollFormulaID(
                                    string employeeNo,
                                    string employeeName,
                                    string contactAddress,
                                    string gender,
                                    string idNumber,
                                    int? roomID,
                                    string status,
                                    int? levelID,
                                    int? branchID,
                                    int? employeePayrollFormulaID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeSet3",
                                        employeeNo,
                                        employeeName,
                                        contactAddress,
                                        gender,
                                        idNumber,
                                        roomID,
                                        status,
                                        levelID,
                                        branchID,
                                        employeePayrollFormulaID);
            return ds;
        }
        public DataSet GetEmployeeListByListOfEmployeePayrollFormulaID(
                                                                string employeeNo,
                                                                string employeeName,
                                                                string contactAddress,
                                                                string gender,
                                                                string idNumber,
                                                                int? roomID,
                                                                string status,
                                                                int? levelID,
                                                                int? branchID,
                                                                List<HREmployeePayrollFormulasInfo> EmployeePayrollFormulaList)
        {
            DataSet rtn = new DataSet();
            foreach (HREmployeePayrollFormulasInfo ojEmployeePayrollFormulasInfo in EmployeePayrollFormulaList)
            {
                DataSet ds = GetEmployeeListByEmployeePayrollFormulaID(employeeNo, employeeName, contactAddress, gender, idNumber, roomID, status, levelID, branchID, ojEmployeePayrollFormulasInfo.HREmployeePayrollFormulaID);
                rtn.Merge(ds);
                ds.Dispose();
            }
            return rtn;
        }
        //[NKVung]  [Group Time Sheet Permissions]  [END]
        public DataSet GetEmployeeListByBranchID(int? branchID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeSet",
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        null,
                                        branchID);
            return ds;
        }

        /// <summary>
        /// Get employees for transferring to the centre
        /// </summary>
        /// <returns>List of transferred employees</returns>
        public List<HREmployeesInfo> GetEmployeesForTransferring()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeesForTransferring");
            return (List<HREmployeesInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo employee = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(employee);
                }
            }
            ds.Dispose();
            return employees;
        }
        public HREmployeesInfo GetEmployeeByCardNumber(string cardNumber)
        {
            try
            {
                int id = int.Parse(cardNumber);
                DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByCardNumber2", cardNumber);
                List<HREmployeesInfo> employees = (List<HREmployeesInfo>)GetListFromDataSet(ds);
                ds.Dispose();
                if (employees != null && employees.Count > 0)
                    return employees[0];
            }
            catch (Exception) { }
            return null;
        }

        public decimal GetTotalWorkingMonth(int employeeID)
        {
            DataSet ds = dal.GetDataSet("select dbo.HREmployeeContracts_GetTotalWorkingMonth(" + employeeID + ")");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            ds.Dispose();
            return 0;
        }

        public HREmployeesInfo GetEmployeeByEmployeeIDNumber(string idNumber)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByEmployeeIDNumber", idNumber);
            List<HREmployeesInfo> employees = (List<HREmployeesInfo>)GetListFromDataSet(ds);
            ds.Dispose();
            if (employees != null && employees.Count > 0)
                return employees[0];
            return null;
        }

        public HREmployeesInfo GetEmployeeByID(int employeeID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByID", employeeID);
            List<HREmployeesInfo> employees = (List<HREmployeesInfo>)GetListFromDataSet(ds);
            ds.Dispose();
            if (employees != null && employees.Count > 0)
                return employees[0];
            return null;
        }

        public List<HREmployeesInfo> GetEmployeeListByPayrollFormulaID(int? payrollFormulaID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByPayrollFormulaID", payrollFormulaID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetEmployeeListAndHRDormitory()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListAndHRDormitory");
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetEmployeeListByStatusCombo(string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByStatusCombo", status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetEmployeeByRoomGroupIDExceptPicture(int roomGroupItemID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByRoomGroupIDExceptPicture", roomGroupItemID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetAllEmployeeByPermission(int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetAllEmployeeByPermission", userGroupID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        /// <returns></returns>
        public HREmployeesInfo GetEmployeeByUserID(int userID)
        {
            HREmployeesInfo employee = null;
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByUserID", userID);
            if (ds != null && ds.Tables.Count != 0)
            {
                if (ds.Tables[0].Rows.Count != 0)
                {
                    employee = (HREmployeesInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                }
            }
            ds.Dispose();
            return employee;
        }

        public HREmployeesInfo GetEmployeeByUserName(string userName)
        {
            HREmployeesInfo employee = null;
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByUserName", userName);
            if (ds != null && ds.Tables.Count != 0)
            {
                if (ds.Tables[0].Rows.Count != 0)
                {
                    employee = (HREmployeesInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                }
            }
            return employee;
        }
        //NUThao [ADD] [08/04/2014] [DB centre] [Permission configuration], END

        //[NUThao] [DEL] [Improve Speed] [2015-05-26] [START]
        public DataSet GetAllEmployeesForLookupControl()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetAllEmployeesForLookupControl");
            return ds;
        }
        //[NUThao] [DEL] [Improve Speed] [2015-05-26] [END]
        public bool IsIDCardExist(string idNumber)
        {
            int i = 0;
            DataSet ds = dal.GetDataSet("HREmployees_IsIDCardExist", idNumber);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int.TryParse(ds.Tables[0].Rows[0][0].ToString(), out i);
            }
            ds.Dispose();
            if (i == 0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }

        public bool IsCardNumberExist(string idNumber, int employeeID)
        {
            int i = 0;
            DataSet ds = dal.GetDataSet("HREmployees_IsCardNumberExist", idNumber, employeeID);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int.TryParse(ds.Tables[0].Rows[0][0].ToString(), out i);
            }
            ds.Dispose();
            if (i == 0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeCardNumberList(int? branchID, int? departmentID, int? departmentRoomID, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeCardNumberList", branchID, departmentID, departmentRoomID, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeWorkingShiftList()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeWorkingShiftList");
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeListEmployeeCardNumberNo(string EmployeeCardNumberNoList)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListEmployeeCardNumberNo", EmployeeCardNumberNoList);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        /// <summary>
        /// Get the list of employee based on some criteria
        /// </summary>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">The department ID</param>
        /// <param name="departmentRoomID">The department room ID</param>
        /// <param name="levelID">Level id</param>
        /// <param name="status">Working status</param>
        /// <returns>List of employees</returns>
        public List<HREmployeesInfo> GetEmployeeListEmployeeNo(string EmployeeNoList)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListEmployeeNo", EmployeeNoList);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
        public HREmployeesInfo GetEmployeeForReportByID(int employeeID)
        {
            HREmployeesInfo employee = new HREmployeesInfo();
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeForReportByID", employeeID);
            if (ds != null && ds.Tables.Count != 0)
            {
                if (ds.Tables[0].Rows.Count != 0)
                {
                    employee = (HREmployeesInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                }
            }
            ds.Dispose();
            return employee;
        }
        public List<int> GetEmployeePermissionListFromUserAndModule(int userID, string moduleName)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeePermissionListFromUserAndModule", userID, moduleName);
            List<int> employees = new List<int>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo.HREmployeeID);
                }
            }
            ds.Dispose();
            return employees;
        }
        public List<HREmployeesInfo> GetEmployeeListByArrangementShift(int? branchID, int? departmentID, int? departmentRoomID, string status, string employeePayRollCalculatedWorkType)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByArrangementShift", branchID, departmentID, departmentRoomID, status, employeePayRollCalculatedWorkType);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListByModuleLeaveDay(int branchID, int departmentID, int departmentRoomID, int employeePayrollFormulaID, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByModuleLeaveDay", branchID, departmentID, departmentRoomID, employeePayrollFormulaID, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> ShowAllEmployeeForHome(DateTime fromDate, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("HREmployees_ShowAllEmployeeForHome", fromDate, toDate);
            return (List<HREmployeesInfo>)GetListFromDataSet(ds);
        }

        public List<HREmployeesInfo> GetAllObjectsByIDList(string arrID)
        {
            List<HREmployeesInfo> lst = new List<HREmployeesInfo>();
            string strQuery = string.Format(@"select * from HREmployees p where p.AAStatus = 'Alive'
                                             and p.HREmployeeID in ({0}) ", arrID);

            if (arrID == string.Empty)
            {
                strQuery = string.Format(@"select * from HREmployees p where p.AAStatus = 'Alive'
                                             and p.HREmployeeID = -1 ");
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null)
            {
                if (ds.Tables.Count > 0)
                {
                    foreach (DataRow row in ds.Tables[0].Rows)
                    {
                        HREmployeesInfo obj = (HREmployeesInfo)dal.GetObjectFromDataRow(row);
                        if (obj != null)
                        {
                            lst.Add(obj);
                        }
                    }
                }

            }
            return lst;
        }

        public List<HREmployeesInfo> GetEmployeeListForQuickImport(int? branchID, int? departmentID, int? departmentRoomID, int? employeeID, DateTime date)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListForQuickImport", branchID, departmentID, departmentRoomID, employeeID, date);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    //objEmployeesInfo.HREmployeeWorkingMonths = GetTotalWorkingMonth(objEmployeesInfo.HREmployeeID);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        public DataSet GetAllObjectsAlive()
        {
            return dal.GetDataSet("HREmployees_SelectAllEmployeeList");
        }

        public List<HREmployeesInfo> GetEmployeeList(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, int? departmentRoomGroupTeamItemID, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeList2", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, departmentRoomGroupTeamItemID, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListBySocialInsuranceDeclaration(DateTime date, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListBySocialInsuranceDeclaration", date, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListSocial(int? branchID, int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeList", branchID, departmentID, departmentRoomID, departmentRoomGroupItemID, null);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListByListRoomID(string groupItemIDList, string status)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByListRoomID", groupItemIDList, status);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeListByDepartmentRoomID(int departmentRoomID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByDepartmentRoomID", departmentRoomID);
            return (List<HREmployeesInfo>)GetListFromDataSet(ds);
        }

        public List<HREmployeesInfo> GetEmployeeListByDepartmentID(int departmentID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListByDepartmentID", departmentID);
            return (List<HREmployeesInfo>)GetListFromDataSet(ds);
        }

        public List<HREmployeesInfo> GetEmployeeListForReportPrincipleInvoice()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeListForReportPrincipleInvoice");
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetEmployeeEmployeeMissingRecordList()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeEmployeeMissingRecordList");
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            return employees;
        }

        public List<HREmployeesInfo> GetAllEmployeeForLookupEdit()
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetAllEmployeeForLookupEdit");
            return (List<HREmployeesInfo>)GetListFromDataSet(ds);
        }

        public List<HREmployeesInfo> GetEmployeeByPayrollID(int? payrollID)
        {
            DataSet ds = dal.GetDataSet("HREmployees_GetEmployeeByPayrollID", payrollID);
            List<HREmployeesInfo> employees = new List<HREmployeesInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeesInfo objEmployeesInfo = (HREmployeesInfo)GetObjectFromDataRow(row);
                    employees.Add(objEmployeesInfo);
                }
            }
            ds.Dispose();
            return employees;
        }
    }
    #endregion
}