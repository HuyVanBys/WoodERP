using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeePayRolls
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeePayRollsController
    //Created Date:Monday, April 11, 2011
    //-----------------------------------------------------------

    public class HREmployeePayRollsController : BaseBusinessController
    {
        public HREmployeePayRollsController()
        {
            dal = new DALBaseProvider("HREmployeePayRolls", typeof(HREmployeePayRollsInfo));
        }

        /// <summary>
        /// Get payroll list of employees searched by some criteria
        /// </summary>
        /// <param name="locationID">Location id</param>
        /// <param name="branchID">Branch id</param>
        /// <param name="departmentID">Department id</param>
        /// <param name="departmentRoomID">Department room id</param>
        /// <param name="month">Month of the payrolls</param>
        /// <returns>List of employee payrolls</returns>
        public List<HREmployeePayRollsInfo> GetEmployeePayRollList(
                                                                int? locationID,
                                                                int? branchID,
                                                                int? departmentID,
                                                                int? departmentRoomID,
                                                                DateTime month)
        {
            DataSet ds = dal.GetDataSet("HREmployeePayRolls_GetEmployeePayRollList",
                                        locationID,
                                        branchID,
                                        departmentID,
                                        departmentRoomID,
                                        month);
            return (List<HREmployeePayRollsInfo>)GetListFromDataSet(ds);
        }
        public List<HREmployeePayRollsInfo> GetEmployeePayRollListByPermission(
                                                                int? locationID,
                                                                int? branchID,
                                                                int? departmentID,
                                                                int? departmentRoomID,
                                                                DateTime month,
                                                                int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePayRolls_GetEmployeePayRollListByPermission",
                                        locationID,
                                        branchID,
                                        departmentID,
                                        departmentRoomID,
                                        month,
                                        userGroupID);
            return (List<HREmployeePayRollsInfo>)GetListFromDataSet(ds);
        }

        /// <summary>
        /// Get employee payrolls by payroll id
        /// </summary>
        /// <param name="payRollID">Payroll id</param>
        /// <returns>the employee payrolls list</returns>
        public List<HREmployeePayRollsInfo> GetEmployeePayRollListByPayRollID(int payRollID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePayRolls_GetEmployeePayRollByPayRollID", payRollID);
            return (List<HREmployeePayRollsInfo>)GetListFromDataSet(ds);
        }
        public List<HREmployeePayRollsInfo> GetEmployeePayRollByPayRollIDAndUserGroup(int payRollID, int userGroupID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePayRolls_GetEmployeePayRollByPayRollIDAndUserGroup", payRollID, userGroupID);
            return (List<HREmployeePayRollsInfo>)GetListFromDataSet(ds);
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HREmployeePayRollsInfo> employeePayRollList = new List<HREmployeePayRollsInfo>();
            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeePayRollsInfo objEmployeePayRollsInfo = (HREmployeePayRollsInfo)GetObjectFromDataRow(row);
                    employeePayRollList.Add(objEmployeePayRollsInfo);
                }
            }
            ds.Dispose();
            return employeePayRollList;
        }
        public decimal GetSalaryByMonth(DateTime month)
        {
            Object obj = dal.GetSingleValue("HREmployeePayRolls_GetSalaryByMonth", month);
            decimal Debt = 0;
            if (obj != null)
                Decimal.TryParse(obj.ToString(), out Debt);

            return Debt;
        }

        public List<HREmployeePayRollsInfo> GetEmployeePayRollListForSalaryCalculationByPayRollID(int payRollID)
        {
            DataSet ds = dal.GetDataSet("HREmployeePayRolls_GetEmployeePayRollListForSalaryCalculationByPayRollID", payRollID);
            return (List<HREmployeePayRollsInfo>)GetListFromDataSet(ds);
        }

    }
    #endregion
}