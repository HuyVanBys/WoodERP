using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRLabouringConfigItems
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRLabouringConfigItemsController
    //Created Date:Tuesday, April 04, 2017
    //-----------------------------------------------------------

    public class HRLabouringConfigItemsController : BaseBusinessController
    {
        public HRLabouringConfigItemsController()
        {
            dal = new DALBaseProvider("HRLabouringConfigItems", typeof(HRLabouringConfigItemsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRLabouringConfigItemsInfo> LabouringConfigItems = new List<HRLabouringConfigItemsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRLabouringConfigItemsInfo objLabouringConfigItemsInfo = (HRLabouringConfigItemsInfo)GetObjectFromDataRow(row);
                    LabouringConfigItems.Add(objLabouringConfigItemsInfo);
                }
            }
            ds.Dispose();
            return LabouringConfigItems;
        }
        public List<HRLabouringConfigItemsInfo> GetDataForReportLabourProductivity(string labouringConfigDateType,
            int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, DateTime searchFromDate, DateTime searchToDate)
        {

            List<HRLabouringConfigItemsInfo> LabouringConfigItemList = new List<HRLabouringConfigItemsInfo>();
            DataSet ds = dal.GetDataSet("HRLabouringConfigItems_GetDataForReportLabourProductivity", labouringConfigDateType
                , departmentID, departmentRoomID, departmentRoomGroupItemID, searchFromDate, searchToDate);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRLabouringConfigItemsInfo objLabouringConfigItemsInfo = (HRLabouringConfigItemsInfo)GetObjectFromDataRow(row);
                    LabouringConfigItemList.Add(objLabouringConfigItemsInfo);
                }
            }
            return LabouringConfigItemList;
        }
        public List<HRLabouringConfigItemsInfo> GetDataForReportLabourProductivityByMonth(
           int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, int month, int year)
        {

            List<HRLabouringConfigItemsInfo> LabouringConfigItemList = new List<HRLabouringConfigItemsInfo>();
            DataSet ds = dal.GetDataSet("HRLabouringConfigItems_GetDataForReportLabourProductivityByMonth",
                 departmentID, departmentRoomID, departmentRoomGroupItemID, month, year);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRLabouringConfigItemsInfo objLabouringConfigItemsInfo = (HRLabouringConfigItemsInfo)GetObjectFromDataRow(row);
                    LabouringConfigItemList.Add(objLabouringConfigItemsInfo);
                }
            }
            return LabouringConfigItemList;
        }
        public List<HRLabouringConfigItemsInfo> GetDataForReportLabourProductivityByYear(
        int? departmentID, int? departmentRoomID, int? departmentRoomGroupItemID, int year)
        {

            List<HRLabouringConfigItemsInfo> LabouringConfigItemList = new List<HRLabouringConfigItemsInfo>();
            DataSet ds = dal.GetDataSet("HRLabouringConfigItems_GetDataForReportLabourProductivityByYear", departmentID, departmentRoomID, departmentRoomGroupItemID, year);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRLabouringConfigItemsInfo objLabouringConfigItemsInfo = (HRLabouringConfigItemsInfo)GetObjectFromDataRow(row);
                    LabouringConfigItemList.Add(objLabouringConfigItemsInfo);
                }
            }
            return LabouringConfigItemList;
        }
    }
    #endregion
}