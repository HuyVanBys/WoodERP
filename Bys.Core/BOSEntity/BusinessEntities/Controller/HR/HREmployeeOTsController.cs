using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HREmployeeOTs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HREmployeeOTsController
    //Created Date:Monday, April 25, 2011
    //-----------------------------------------------------------

    public class HREmployeeOTsController : BaseBusinessController
    {
        public HREmployeeOTsController()
        {
            dal = new DALBaseProvider("HREmployeeOTs", typeof(HREmployeeOTsInfo));
        }

        /// <summary>
        /// Get all data by over time
        /// </summary>
        /// <param name="overTimeID"></param>
        /// <returns></returns>
        public DataSet GetAllDataByOverTimeID(int overTimeID)
        {
            return dal.GetDataSet("HREmployeeOTs_GetAllDataByOverTimeID", overTimeID);
        }

        public bool IsOTIntime(int employeeID, DateTime date)
        {
            DataSet ds = dal.GetDataSet("HREmployeeOTs_IsOTIntime", employeeID, date);
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    ds.Dispose();
                    return true;
                }
            }
            ds.Dispose();
            return false;
        }
        public List<HREmployeeOTsInfo> GetEmployeeOTList(int? employeeID, DateTime dateFrom, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("HREmployeeOTs_GetEmployeeOTList", employeeID, dateFrom, dateTo);
            List<HREmployeeOTsInfo> list = new List<HREmployeeOTsInfo>();
            HREmployeeOTsController objOverTimesController = new HREmployeeOTsController();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeOTsInfo objEmployeeOTsInfo = (HREmployeeOTsInfo)objOverTimesController.GetObjectFromDataRow(row);
                    list.Add(objEmployeeOTsInfo);
                }
            }
            ds.Dispose();
            return list;
        }

        public List<HREmployeeOTsInfo> GetListOTDiffDates(int? employeeID, DateTime dateFrom, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("HREmployeeOTs_GetListOTDiffDates", employeeID, dateFrom, dateTo);
            List<HREmployeeOTsInfo> list = new List<HREmployeeOTsInfo>();
            HREmployeeOTsController objOverTimesController = new HREmployeeOTsController();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeOTsInfo objEmployeeOTsInfo = (HREmployeeOTsInfo)objOverTimesController.GetObjectFromDataRow(row);
                    list.Add(objEmployeeOTsInfo);
                }
            }
            ds.Dispose();
            return list;
        }

        public List<HREmployeeOTsInfo> GetAllListOTByDate(DateTime dateFrom, DateTime dateTo)
        {
            DataSet ds = dal.GetDataSet("HREmployeeOTs_GetAllListOTByDate", dateFrom, dateTo);
            List<HREmployeeOTsInfo> list = new List<HREmployeeOTsInfo>();
            HREmployeeOTsController objOverTimesController = new HREmployeeOTsController();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HREmployeeOTsInfo objEmployeeOTsInfo = (HREmployeeOTsInfo)objOverTimesController.GetObjectFromDataRow(row);
                    list.Add(objEmployeeOTsInfo);
                }
            }
            ds.Dispose();
            return list;
        }
    }
    #endregion
}