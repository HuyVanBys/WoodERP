using BOSLib;
using System;
using System.Collections.Generic;
using System.Data;


namespace BOSERP
{
    #region HRKPIs
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:HRKPIsController
    //Created Date:Friday, June 29, 2018
    //-----------------------------------------------------------

    public class HRKPIsController : BaseBusinessController
    {
        public HRKPIsController()
        {
            dal = new DALBaseProvider("HRKPIs", typeof(HRKPIsInfo));
        }

        public override System.Collections.IList GetListFromDataSet(DataSet ds)
        {
            List<HRKPIsInfo> KPIs = new List<HRKPIsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    HRKPIsInfo objKPIsInfo = (HRKPIsInfo)GetObjectFromDataRow(row);
                    KPIs.Add(objKPIsInfo);
                }
            }
            return KPIs;
        }

        public List<HRKPIsInfo> GetKPIByDepartment(int? departmentID)
        {
            DataSet ds = dal.GetDataSet("HRKPIs_GetKPIByDepartment", departmentID);
            List<HRKPIsInfo> kPIsList = (List<HRKPIsInfo>)GetListFromDataSet(ds);
            return kPIsList;
        }

        public decimal GetKPIEvaluationResult(int employeeID, int kPIID, DateTime fromDate, DateTime toDate)
        {
            decimal result = 0;
            HRKPIsController objKPIsController = new HRKPIsController();
            HRKPIsInfo objKPIsInfo = (HRKPIsInfo)objKPIsController.GetObjectByID(kPIID);
            if (objKPIsInfo != null)
            {
                if (!String.IsNullOrEmpty(objKPIsInfo.HRKPIStore))
                {
                    DataSet ds = dal.GetDataSet(objKPIsInfo.HRKPIStore, employeeID, fromDate, toDate);
                    if (ds.Tables.Count > 0)
                    {
                        HRKPIsInfo objKPIsInfoResult = new HRKPIsInfo();
                        objKPIsInfoResult = (HRKPIsInfo)dal.GetSingleObject(ds.Tables[0]);
                        if (objKPIsInfoResult != null)
                        {
                            result = objKPIsInfoResult.HRKPIResult;
                        }
                    }
                }
            }
            return result;
        }

        public bool IsStoreExist(string storeName)
        {
            int i = 0;
            DataSet ds = dal.GetDataSet("HRKPIs_IsStoreExist", storeName);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int.TryParse(ds.Tables[0].Rows[0][0].ToString(), out i);
            }
            if (i == 0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
    }
    #endregion
}