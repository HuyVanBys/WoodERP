using System;
using System.Data;

namespace BOSLib
{
    #region GEUserMessagesHidden
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:GEUserMessagesHiddenInfo
    //Created Date:Sunday, April 13, 2008
    //-----------------------------------------------------------

    public class GEUserMessagesHiddenInfo : BusinessObject
    {
        public GEUserMessagesHiddenInfo()
        {
        }
        public GEUserMessagesHiddenInfo(DataRow row)
        {
            foreach (DataColumn item in row.Table.Columns)
            {
                var value = row[item.ColumnName];
                if (value != DBNull.Value)
                {
                    switch (item.ColumnName)
                    {
                        case "GEUserMessagesHiddenID":
                            this.GEUserMessagesHiddenID = Convert.ToInt32(value);
                            break;
                        case "AAStatus":
                            this.AAStatus = Convert.ToString(value);
                            break;
                        case "ADUserID":
                            this.ADUserID = Convert.ToInt32(value);
                            break;
                        case "GEMessagesID":
                            this.GEMessagesID = Convert.ToInt32(value);
                            break;
                        case "GEMessageHiddenCount":
                            this.GEMessageHiddenCount = Convert.ToInt32(value);
                            break;
                        case "AllowPropertyChangedEvent":
                            this.AllowPropertyChangedEvent = Convert.ToBoolean(value);
                            break;
                        case "Position":
                            this.Position = Convert.ToInt32(value);
                            break;
                        case "RelatedPosition":
                            this.RelatedPosition = Convert.ToInt32(value);
                            break;
                        case "Selected":
                            this.Selected = Convert.ToBoolean(value);
                            break;
                        case "TheNumberOfChild":
                            this.TheNumberOfChild = Convert.ToInt32(value);
                            break;
                        default:
                            break;
                    }

                }

            }
        }

        #region Variables
        protected int _gEUserMessagesHiddenID;
        protected String _aAStatus = DefaultStatus;
        protected int _aDUserID;
        protected int _gEMessagesID;
        protected int _gEMessageHiddenCount;
        #endregion

        #region Public properties
        public int GEUserMessagesHiddenID
        {
            get { return _gEUserMessagesHiddenID; }
            set
            {
                if (value != this._gEUserMessagesHiddenID)
                {
                    _gEUserMessagesHiddenID = value;
                    NotifyChanged("GEUserMessagesHiddenID");
                }
            }
        }
        public String AAStatus
        {
            get { return _aAStatus; }
            set
            {
                if (value != this._aAStatus)
                {
                    _aAStatus = value;
                    NotifyChanged("AAStatus");
                }
            }
        }
        public int ADUserID
        {
            get { return _aDUserID; }
            set
            {
                if (value != this._aDUserID)
                {
                    _aDUserID = value;
                    NotifyChanged("ADUserID");
                }
            }
        }
        public int GEMessagesID
        {
            get { return _gEMessagesID; }
            set
            {
                if (value != this._gEMessagesID)
                {
                    _gEMessagesID = value;
                    NotifyChanged("GEMessagesID");
                }
            }
        }
        public int GEMessageHiddenCount
        {
            get { return _gEMessageHiddenCount; }
            set
            {
                if (value != this._gEMessageHiddenCount)
                {
                    _gEMessageHiddenCount = value;
                    NotifyChanged("GEMessageHiddenCount");
                }
            }
        }
        #endregion
    }
    #endregion
}