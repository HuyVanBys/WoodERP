using System;
using System.Data;

namespace BOSLib
{
    #region GELanguages
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:GELanguagesInfo
    //Created Date:Wednesday, March 12, 2008
    //-----------------------------------------------------------

    public class GELanguagesInfo : BusinessObject
    {
        public GELanguagesInfo()
        {
        }
        public GELanguagesInfo(DataRow row)
        {
            foreach (DataColumn item in row.Table.Columns)
            {
                var value = row[item.ColumnName];
                if (value != DBNull.Value)
                {
                    switch (item.ColumnName)
                    {
                        case "GELanguageID":
                            this.GELanguageID = Convert.ToInt32(value);
                            break;
                        case "AAStatus":
                            this.AAStatus = Convert.ToString(value);
                            break;
                        case "GELanguageNo":
                            this.GELanguageNo = Convert.ToString(value);
                            break;
                        case "GELanguageCultur":
                            this.GELanguageCultur = Convert.ToString(value);
                            break;
                        case "GELanguageName":
                            this.GELanguageName = Convert.ToString(value);
                            break;
                        case "GELanguageDesc":
                            this.GELanguageDesc = Convert.ToString(value);
                            break;
                        case "AllowPropertyChangedEvent":
                            this.AllowPropertyChangedEvent = Convert.ToBoolean(value);
                            break;
                        case "Position":
                            this.Position = Convert.ToInt32(value);
                            break;
                        case "RelatedPosition":
                            this.RelatedPosition = Convert.ToInt32(value);
                            break;
                        case "Selected":
                            this.Selected = Convert.ToBoolean(value);
                            break;
                        case "TheNumberOfChild":
                            this.TheNumberOfChild = Convert.ToInt32(value);
                            break;
                        default:
                            break;
                    }

                }

            }
        }

        #region Variables
        protected int _gELanguageID;
        protected String _aAStatus = DefaultAAStatus;
        protected String _gELanguageNo = String.Empty;
        protected String _gELanguageCultur = String.Empty;
        protected String _gELanguageName = String.Empty;
        protected String _gELanguageDesc = String.Empty;
        #endregion

        #region Public properties
        public int GELanguageID
        {
            get { return _gELanguageID; }
            set
            {
                if (value != this._gELanguageID)
                {
                    _gELanguageID = value;
                    NotifyChanged("GELanguageID");
                }
            }
        }
        public String AAStatus
        {
            get { return _aAStatus; }
            set
            {
                if (value != this._aAStatus)
                {
                    _aAStatus = value;
                    NotifyChanged("AAStatus");
                }
            }
        }
        public String GELanguageNo
        {
            get { return _gELanguageNo; }
            set
            {
                if (value != this._gELanguageNo)
                {
                    _gELanguageNo = value;
                    NotifyChanged("GELanguageNo");
                }
            }
        }
        public String GELanguageCultur
        {
            get { return _gELanguageCultur; }
            set
            {
                if (value != this._gELanguageCultur)
                {
                    _gELanguageCultur = value;
                    NotifyChanged("GELanguageCultur");
                }
            }
        }
        public String GELanguageName
        {
            get { return _gELanguageName; }
            set
            {
                if (value != this._gELanguageName)
                {
                    _gELanguageName = value;
                    NotifyChanged("GELanguageName");
                }
            }
        }
        public String GELanguageDesc
        {
            get { return _gELanguageDesc; }
            set
            {
                if (value != this._gELanguageDesc)
                {
                    _gELanguageDesc = value;
                    NotifyChanged("GELanguageDesc");
                }
            }
        }
        #endregion
    }
    #endregion
}