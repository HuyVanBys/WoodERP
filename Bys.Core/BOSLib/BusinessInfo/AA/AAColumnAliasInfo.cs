using BOSLib.Interfaces;
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;

namespace BOSLib
{
    #region AAColumnAlias
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:AAColumnAliasInfo
    //Created Date:Sunday, August 29, 2010
    //-----------------------------------------------------------
    [Table("AAColumnAlias")]
    public class AAColumnAliasInfo : BusinessObject, IEntity
    {
        public AAColumnAliasInfo()
        {

        }
        #region Variables
        [Key]
        [Column("AAColumnAliasID")]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int Id { get; set; }
        protected int _aANumberInt;
        protected String _aANumberString = String.Empty;
        protected String _aAStatus = DefaultAAStatus;
        protected String _aAColumnAliasName = String.Empty;
        protected String _aAColumnAliasCaption = String.Empty;
        protected String _aATableName = String.Empty;
        protected String _aAReferenceTable = String.Empty;
        protected String _aADisplayedMember = String.Empty;
        protected String _aAFilteredColumn = String.Empty;
        protected String _aAFilteredValues = String.Empty;
        protected bool _aAAllowDummy = true;
        protected bool _aAColumnAliasIsSaveHistory = false;
        #endregion

        #region Public properties
        public int AANumberInt
        {
            get { return _aANumberInt; }
            set
            {
                if (value != this._aANumberInt)
                {
                    _aANumberInt = value;
                    NotifyChanged("AANumberInt");
                }
            }
        }
        public String AANumberString
        {
            get { return _aANumberString; }
            set
            {
                if (value != this._aANumberString)
                {
                    _aANumberString = value;
                    NotifyChanged("AANumberString");
                }
            }
        }
        public String AAStatus
        {
            get { return _aAStatus; }
            set
            {
                if (value != this._aAStatus)
                {
                    _aAStatus = value;
                    NotifyChanged("AAStatus");
                }
            }
        }
        public String AAColumnAliasName
        {
            get { return _aAColumnAliasName; }
            set
            {
                if (value != this._aAColumnAliasName)
                {
                    _aAColumnAliasName = value;
                    NotifyChanged("AAColumnAliasName");
                }
            }
        }
        public String AAColumnAliasCaption
        {
            get { return _aAColumnAliasCaption; }
            set
            {
                if (value != this._aAColumnAliasCaption)
                {
                    _aAColumnAliasCaption = value;
                    NotifyChanged("AAColumnAliasCaption");
                }
            }
        }
        public String AATableName
        {
            get { return _aATableName; }
            set
            {
                if (value != this._aATableName)
                {
                    _aATableName = value;
                    NotifyChanged("AATableName");
                }
            }
        }
        public String AAReferenceTable
        {
            get { return _aAReferenceTable; }
            set
            {
                if (value != this._aAReferenceTable)
                {
                    _aAReferenceTable = value;
                    NotifyChanged("AAReferenceTable");
                }
            }
        }
        public String AADisplayedMember
        {
            get { return _aADisplayedMember; }
            set
            {
                if (value != this._aADisplayedMember)
                {
                    _aADisplayedMember = value;
                    NotifyChanged("AADisplayedMember");
                }
            }
        }
        public String AAFilteredColumn
        {
            get { return _aAFilteredColumn; }
            set
            {
                if (value != this._aAFilteredColumn)
                {
                    _aAFilteredColumn = value;
                    NotifyChanged("AAFilteredColumn");
                }
            }
        }
        public String AAFilteredValues
        {
            get { return _aAFilteredValues; }
            set
            {
                if (value != this._aAFilteredValues)
                {
                    _aAFilteredValues = value;
                    NotifyChanged("AAFilteredValues");
                }
            }
        }
        public bool AAAllowDummy
        {
            get { return _aAAllowDummy; }
            set
            {
                if (value != this._aAAllowDummy)
                {
                    _aAAllowDummy = value;
                    NotifyChanged("AAAllowDummy");
                }
            }
        }
        public bool AAColumnAliasIsSaveHistory
        {
            get { return _aAColumnAliasIsSaveHistory; }
            set
            {
                if (value != this._aAColumnAliasIsSaveHistory)
                {
                    _aAColumnAliasIsSaveHistory = value;
                    NotifyChanged("AAColumnAliasIsSaveHistory");
                }
            }
        }
        #endregion

        #region Extra properties
        public string GELookupTableDisplayColumn { get; set; }
        public string GELookupTableValueColumn { get; set; }
        public string GELookupTableLookupColumns { get; set; }
        public bool Visible { get; set; }
        #endregion Extra properties

    }
    #endregion
}