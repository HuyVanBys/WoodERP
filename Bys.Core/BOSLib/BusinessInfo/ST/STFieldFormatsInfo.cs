using System;
using System.Data;
namespace BOSLib
{
    #region STFieldFormats
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:STFieldFormatsInfo
    //Created Date:Friday, September 26, 2008
    //-----------------------------------------------------------

    public class STFieldFormatsInfo : BusinessObject
    {
        public STFieldFormatsInfo()
        {
        }
        public STFieldFormatsInfo(DataRow row)
        {
            foreach (DataColumn item in row.Table.Columns)
            {
                var value = row[item.ColumnName];
                if (value != DBNull.Value)
                {
                    switch (item.ColumnName)
                    {
                        case "STFieldFormatID":
                            this.STFieldFormatID = Convert.ToInt32(value);
                            break;
                        case "STFieldFormatModuleName":
                            this.STFieldFormatModuleName = Convert.ToString(value);
                            break;
                        case "STFieldFormatTableName":
                            this.STFieldFormatTableName = Convert.ToString(value);
                            break;
                        case "STFieldFormatGroupID":
                            this.STFieldFormatGroupID = Convert.ToInt32(value);
                            break;
                        case "STFieldFormatColumnName":
                            this.STFieldFormatColumnName = Convert.ToString(value);
                            break;
                        case "STFieldFormatIsCurrencyColumn":
                            this.STFieldFormatIsCurrencyColumn = Convert.ToBoolean(value);
                            break;
                        case "AllowPropertyChangedEvent":
                            this.AllowPropertyChangedEvent = Convert.ToBoolean(value);
                            break;
                        case "Position":
                            this.Position = Convert.ToInt32(value);
                            break;
                        case "RelatedPosition":
                            this.RelatedPosition = Convert.ToInt32(value);
                            break;
                        case "Selected":
                            this.Selected = Convert.ToBoolean(value);
                            break;
                        case "TheNumberOfChild":
                            this.TheNumberOfChild = Convert.ToInt32(value);
                            break;
                        case "STChangeByCurrency":
                            this.STChangeByCurrency = Convert.ToBoolean(value);
                            break;
                        case "STChangeByDepartment":
                            this.STChangeByDepartment = Convert.ToBoolean(value);
                            break;
                        default:
                            break;
                    }

                }

            }
        }

        #region Variables
        protected int _sTFieldFormatID;
        protected String _sTFieldFormatModuleName = String.Empty;
        protected String _sTFieldFormatTableName = String.Empty;
        protected int _sTFieldFormatGroupID;
        protected String _sTFieldFormatColumnName = String.Empty;
        protected bool _sTFieldFormatIsCurrencyColumn = true;
        protected bool _sTChangeByCurrency = true;
        protected bool _sTChangeByDepartment = true;

        #endregion

        #region Public properties
        public int STFieldFormatID
        {
            get { return _sTFieldFormatID; }
            set
            {
                if (value != this._sTFieldFormatID)
                {
                    _sTFieldFormatID = value;
                    NotifyChanged("STFieldFormatID");
                }
            }
        }
        public String STFieldFormatModuleName
        {
            get { return _sTFieldFormatModuleName; }
            set
            {
                if (value != this._sTFieldFormatModuleName)
                {
                    _sTFieldFormatModuleName = value;
                    NotifyChanged("STFieldFormatModuleName");
                }
            }
        }
        public String STFieldFormatTableName
        {
            get { return _sTFieldFormatTableName; }
            set
            {
                if (value != this._sTFieldFormatTableName)
                {
                    _sTFieldFormatTableName = value;
                    NotifyChanged("STFieldFormatTableName");
                }
            }
        }
        public int STFieldFormatGroupID
        {
            get { return _sTFieldFormatGroupID; }
            set
            {
                if (value != this._sTFieldFormatGroupID)
                {
                    _sTFieldFormatGroupID = value;
                    NotifyChanged("STFieldFormatGroupID");
                }
            }
        }
        public String STFieldFormatColumnName
        {
            get { return _sTFieldFormatColumnName; }
            set
            {
                if (value != this._sTFieldFormatColumnName)
                {
                    _sTFieldFormatColumnName = value;
                    NotifyChanged("STFieldFormatColumnName");
                }
            }
        }
        public bool STFieldFormatIsCurrencyColumn
        {
            get { return _sTFieldFormatIsCurrencyColumn; }
            set
            {
                if (value != this._sTFieldFormatIsCurrencyColumn)
                {
                    _sTFieldFormatIsCurrencyColumn = value;
                    NotifyChanged("STFieldFormatIsCurrencyColumn");
                }
            }
        }
        public bool STChangeByCurrency
        {
            get { return _sTChangeByCurrency; }
            set
            {
                if (value != this._sTChangeByCurrency)
                {
                    _sTChangeByCurrency = value;
                    NotifyChanged("STChangeByCurrency");
                }
            }
        }
        public bool STChangeByDepartment
        {
            get { return _sTChangeByDepartment; }
            set
            {
                if (value != this._sTChangeByDepartment)
                {
                    _sTChangeByDepartment = value;
                    NotifyChanged("STChangeByDepartment");
                }
            }
        }

        public string ColumnName { get; set; }

        #endregion

    }
    #endregion
}