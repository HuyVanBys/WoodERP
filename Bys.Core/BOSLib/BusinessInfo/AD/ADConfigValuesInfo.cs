using System;
using System.Data;

namespace BOSLib
{
    #region ADConfigValues
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:ADConfigValuesInfo
    //Created Date:Wednesday, September 10, 2008
    //-----------------------------------------------------------

    public class ADConfigValuesInfo : BusinessObject
    {
        public ADConfigValuesInfo()
        {
        }
        public ADConfigValuesInfo(DataRow row)
        {
            foreach (DataColumn item in row.Table.Columns)
            {
                var value = row[item.ColumnName];
                if (value != DBNull.Value)
                {
                    switch (item.ColumnName)
                    {
                        case "ADConfigValueID":
                            this.ADConfigValueID = Convert.ToInt32(value);
                            break;
                        case "AAStatus":
                            this.AAStatus = Convert.ToString(value);
                            break;
                        case "ADConfigKey":
                            this.ADConfigKey = Convert.ToString(value);
                            break;
                        case "ADConfigKeyValue":
                            this.ADConfigKeyValue = Convert.ToString(value);
                            break;
                        case "ADConfigText":
                            this.ADConfigText = Convert.ToString(value);
                            break;
                        case "ADConfigKeyDesc":
                            this.ADConfigKeyDesc = Convert.ToString(value);
                            break;
                        case "ADConfigKeyGroup":
                            this.ADConfigKeyGroup = Convert.ToString(value);
                            break;
                        case "IsActive":
                            this.IsActive = Convert.ToBoolean(value);
                            break;
                        case "AllowPropertyChangedEvent":
                            this.AllowPropertyChangedEvent = Convert.ToBoolean(value);
                            break;
                        case "Position":
                            this.Position = Convert.ToInt32(value);
                            break;
                        case "RelatedPosition":
                            this.RelatedPosition = Convert.ToInt32(value);
                            break;
                        case "Selected":
                            this.Selected = Convert.ToBoolean(value);
                            break;
                        case "TheNumberOfChild":
                            this.TheNumberOfChild = Convert.ToInt32(value);
                            break;
                        default:
                            break;
                    }

                }

            }
        }

        #region Variables
        protected int _aDConfigValueID;
        protected String _aAStatus = DefaultAAStatus;
        protected String _aDConfigKey = String.Empty;
        protected String _aDConfigKeyValue = String.Empty;
        protected String _aDConfigText = String.Empty;
        protected String _aDConfigKeyDesc = String.Empty;
        protected String _aDConfigKeyGroup = String.Empty;
        protected bool _isActive = true;
        #endregion

        #region Public properties
        public int ADConfigValueID
        {
            get { return _aDConfigValueID; }
            set
            {
                if (value != this._aDConfigValueID)
                {
                    _aDConfigValueID = value;
                    NotifyChanged("ADConfigValueID");
                }
            }
        }
        public String AAStatus
        {
            get { return _aAStatus; }
            set
            {
                if (value != this._aAStatus)
                {
                    _aAStatus = value;
                    NotifyChanged("AAStatus");
                }
            }
        }
        public String ADConfigKey
        {
            get { return _aDConfigKey; }
            set
            {
                if (value != this._aDConfigKey)
                {
                    _aDConfigKey = value;
                    NotifyChanged("ADConfigKey");
                }
            }
        }
        public String ADConfigKeyValue
        {
            get { return _aDConfigKeyValue; }
            set
            {
                if (value != this._aDConfigKeyValue)
                {
                    _aDConfigKeyValue = value;
                    NotifyChanged("ADConfigKeyValue");
                }
            }
        }
        public String ADConfigText
        {
            get { return _aDConfigText; }
            set
            {
                if (value != this._aDConfigText)
                {
                    _aDConfigText = value;
                    NotifyChanged("ADConfigText");
                }
            }
        }
        public String ADConfigKeyDesc
        {
            get { return _aDConfigKeyDesc; }
            set
            {
                if (value != this._aDConfigKeyDesc)
                {
                    _aDConfigKeyDesc = value;
                    NotifyChanged("ADConfigKeyDesc");
                }
            }
        }
        public String ADConfigKeyGroup
        {
            get { return _aDConfigKeyGroup; }
            set
            {
                if (value != this._aDConfigKeyGroup)
                {
                    _aDConfigKeyGroup = value;
                    NotifyChanged("ADConfigKeyGroup");
                }
            }
        }
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (value != this._isActive)
                {
                    _isActive = value;
                    NotifyChanged("IsActive");
                }
            }
        }
        #endregion
    }
    #endregion
}