using System;
using System.Data;

namespace BOSLib
{
    #region STToolbarFunctions
    //-----------------------------------------------------------
    //Generated By: BOS Studio
    //Class:STToolbarFunctionsController
    //Created Date:Thursday, March 29, 2007
    //-----------------------------------------------------------

    public class STToolbarFunctionsController : BaseBusinessController
    {
        private readonly string spGetSTToolbarFunctionsBySTToolbarIDAndSTToolbarFunctionFullNameAndSTToolbarFunctionClass =
                                    "STToolbarFunctions_SelectBySTToolbarIDAndSTToolbarFunctionFullNameAndSTToolbarFunctionClass";
        private readonly string spGetMaxSortOrderFunctionBySTToolbarID =
                                    "STToolbarFunctions_SelectMaxSTToolbarFunctionSortOrderBySTToolbarID";
        private readonly string spGetSTToolbarFunctionsBySTModuleIDAndSTUserGroupID =
                                    "STToolbarFunctions_SelectBySTModuleIDAndSTUserGroupID";
        public STToolbarFunctionsController()
        {
            dal = new DALBaseProvider("STToolbarFunctions", typeof(STToolbarFunctionsInfo));
        }

        public STToolbarFunctionsInfo GetToolbarFunctionByToolbarIDAndFunctionFullNameAndFunctionClass(
                        int iSTToobarID, String strSTToolbarFunctionFullName,
                        String strSTToolbarFunctionClass)
        {
            return (STToolbarFunctionsInfo)dal.GetDataObject(
                                                spGetSTToolbarFunctionsBySTToolbarIDAndSTToolbarFunctionFullNameAndSTToolbarFunctionClass,
                                                iSTToobarID,
                                                strSTToolbarFunctionFullName,
                                                strSTToolbarFunctionClass);
        }

        public DataSet GetToolbarFunctionsBySTModuleIDAndSTUserGroupID(int iSTModuleID, int iSTUserGroupID)
        {
            return dal.GetDataSet(spGetSTToolbarFunctionsBySTModuleIDAndSTUserGroupID, iSTModuleID, iSTUserGroupID);
        }

        public int GetMaxSortOrderFunctionByToolbarID(int iToolbarID)
        {
            int iMaxSortOrderFunction = 0;
            try
            {
                DataSet ds = dal.GetDataSet(spGetMaxSortOrderFunctionBySTToolbarID,
                                          iToolbarID);
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        if (ds.Tables[0].Rows[0][0] != null)
                            iMaxSortOrderFunction = Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                    }
                }
                ds.Dispose();
            }
            catch (Exception)
            {
                iMaxSortOrderFunction = 0;
            }
            return iMaxSortOrderFunction;

        }
    }
    #endregion
}